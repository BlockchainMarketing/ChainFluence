{"id":"15489aa690753ac608e94a74b74756c3","_format":"hh-sol-build-info-1","solcVersion":"0.8.6","solcLongVersion":"0.8.6+commit.11564f7e","input":{"language":"Solidity","sources":{"@chainlink/contracts/src/v0.8/Chainlink.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {CBORChainlink} from \"./vendor/CBORChainlink.sol\";\nimport {BufferChainlink} from \"./vendor/BufferChainlink.sol\";\n\n/**\n * @title Library for common Chainlink functions\n * @dev Uses imported CBOR library for encoding to buffer\n */\nlibrary Chainlink {\n  uint256 internal constant defaultBufferSize = 256; // solhint-disable-line const-name-snakecase\n\n  using CBORChainlink for BufferChainlink.buffer;\n\n  struct Request {\n    bytes32 id;\n    address callbackAddress;\n    bytes4 callbackFunctionId;\n    uint256 nonce;\n    BufferChainlink.buffer buf;\n  }\n\n  /**\n   * @notice Initializes a Chainlink request\n   * @dev Sets the ID, callback address, and callback function signature on the request\n   * @param self The uninitialized request\n   * @param jobId The Job Specification ID\n   * @param callbackAddr The callback address\n   * @param callbackFunc The callback function signature\n   * @return The initialized request\n   */\n  function initialize(\n    Request memory self,\n    bytes32 jobId,\n    address callbackAddr,\n    bytes4 callbackFunc\n  ) internal pure returns (Chainlink.Request memory) {\n    BufferChainlink.init(self.buf, defaultBufferSize);\n    self.id = jobId;\n    self.callbackAddress = callbackAddr;\n    self.callbackFunctionId = callbackFunc;\n    return self;\n  }\n\n  /**\n   * @notice Sets the data for the buffer without encoding CBOR on-chain\n   * @dev CBOR can be closed with curly-brackets {} or they can be left off\n   * @param self The initialized request\n   * @param data The CBOR data\n   */\n  function setBuffer(Request memory self, bytes memory data) internal pure {\n    BufferChainlink.init(self.buf, data.length);\n    BufferChainlink.append(self.buf, data);\n  }\n\n  /**\n   * @notice Adds a string value to the request with a given key name\n   * @param self The initialized request\n   * @param key The name of the key\n   * @param value The string value to add\n   */\n  function add(\n    Request memory self,\n    string memory key,\n    string memory value\n  ) internal pure {\n    self.buf.encodeString(key);\n    self.buf.encodeString(value);\n  }\n\n  /**\n   * @notice Adds a bytes value to the request with a given key name\n   * @param self The initialized request\n   * @param key The name of the key\n   * @param value The bytes value to add\n   */\n  function addBytes(\n    Request memory self,\n    string memory key,\n    bytes memory value\n  ) internal pure {\n    self.buf.encodeString(key);\n    self.buf.encodeBytes(value);\n  }\n\n  /**\n   * @notice Adds a int256 value to the request with a given key name\n   * @param self The initialized request\n   * @param key The name of the key\n   * @param value The int256 value to add\n   */\n  function addInt(\n    Request memory self,\n    string memory key,\n    int256 value\n  ) internal pure {\n    self.buf.encodeString(key);\n    self.buf.encodeInt(value);\n  }\n\n  /**\n   * @notice Adds a uint256 value to the request with a given key name\n   * @param self The initialized request\n   * @param key The name of the key\n   * @param value The uint256 value to add\n   */\n  function addUint(\n    Request memory self,\n    string memory key,\n    uint256 value\n  ) internal pure {\n    self.buf.encodeString(key);\n    self.buf.encodeUInt(value);\n  }\n\n  /**\n   * @notice Adds an array of strings to the request with a given key name\n   * @param self The initialized request\n   * @param key The name of the key\n   * @param values The array of string values to add\n   */\n  function addStringArray(\n    Request memory self,\n    string memory key,\n    string[] memory values\n  ) internal pure {\n    self.buf.encodeString(key);\n    self.buf.startArray();\n    for (uint256 i = 0; i < values.length; i++) {\n      self.buf.encodeString(values[i]);\n    }\n    self.buf.endSequence();\n  }\n}\n"},"@chainlink/contracts/src/v0.8/ChainlinkClient.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./Chainlink.sol\";\nimport \"./interfaces/ENSInterface.sol\";\nimport \"./interfaces/LinkTokenInterface.sol\";\nimport \"./interfaces/ChainlinkRequestInterface.sol\";\nimport \"./interfaces/OperatorInterface.sol\";\nimport \"./interfaces/PointerInterface.sol\";\nimport {ENSResolver as ENSResolver_Chainlink} from \"./vendor/ENSResolver.sol\";\n\n/**\n * @title The ChainlinkClient contract\n * @notice Contract writers can inherit this contract in order to create requests for the\n * Chainlink network\n */\nabstract contract ChainlinkClient {\n  using Chainlink for Chainlink.Request;\n\n  uint256 internal constant LINK_DIVISIBILITY = 10**18;\n  uint256 private constant AMOUNT_OVERRIDE = 0;\n  address private constant SENDER_OVERRIDE = address(0);\n  uint256 private constant ORACLE_ARGS_VERSION = 1;\n  uint256 private constant OPERATOR_ARGS_VERSION = 2;\n  bytes32 private constant ENS_TOKEN_SUBNAME = keccak256(\"link\");\n  bytes32 private constant ENS_ORACLE_SUBNAME = keccak256(\"oracle\");\n  address private constant LINK_TOKEN_POINTER = 0xC89bD4E1632D3A43CB03AAAd5262cbe4038Bc571;\n\n  ENSInterface private s_ens;\n  bytes32 private s_ensNode;\n  LinkTokenInterface private s_link;\n  OperatorInterface private s_oracle;\n  uint256 private s_requestCount = 1;\n  mapping(bytes32 => address) private s_pendingRequests;\n\n  event ChainlinkRequested(bytes32 indexed id);\n  event ChainlinkFulfilled(bytes32 indexed id);\n  event ChainlinkCancelled(bytes32 indexed id);\n\n  /**\n   * @notice Creates a request that can hold additional parameters\n   * @param specId The Job Specification ID that the request will be created for\n   * @param callbackAddr address to operate the callback on\n   * @param callbackFunctionSignature function signature to use for the callback\n   * @return A Chainlink Request struct in memory\n   */\n  function buildChainlinkRequest(\n    bytes32 specId,\n    address callbackAddr,\n    bytes4 callbackFunctionSignature\n  ) internal pure returns (Chainlink.Request memory) {\n    Chainlink.Request memory req;\n    return req.initialize(specId, callbackAddr, callbackFunctionSignature);\n  }\n\n  /**\n   * @notice Creates a request that can hold additional parameters\n   * @param specId The Job Specification ID that the request will be created for\n   * @param callbackFunctionSignature function signature to use for the callback\n   * @return A Chainlink Request struct in memory\n   */\n  function buildOperatorRequest(bytes32 specId, bytes4 callbackFunctionSignature)\n    internal\n    view\n    returns (Chainlink.Request memory)\n  {\n    Chainlink.Request memory req;\n    return req.initialize(specId, address(this), callbackFunctionSignature);\n  }\n\n  /**\n   * @notice Creates a Chainlink request to the stored oracle address\n   * @dev Calls `chainlinkRequestTo` with the stored oracle address\n   * @param req The initialized Chainlink Request\n   * @param payment The amount of LINK to send for the request\n   * @return requestId The request ID\n   */\n  function sendChainlinkRequest(Chainlink.Request memory req, uint256 payment) internal returns (bytes32) {\n    return sendChainlinkRequestTo(address(s_oracle), req, payment);\n  }\n\n  /**\n   * @notice Creates a Chainlink request to the specified oracle address\n   * @dev Generates and stores a request ID, increments the local nonce, and uses `transferAndCall` to\n   * send LINK which creates a request on the target oracle contract.\n   * Emits ChainlinkRequested event.\n   * @param oracleAddress The address of the oracle for the request\n   * @param req The initialized Chainlink Request\n   * @param payment The amount of LINK to send for the request\n   * @return requestId The request ID\n   */\n  function sendChainlinkRequestTo(\n    address oracleAddress,\n    Chainlink.Request memory req,\n    uint256 payment\n  ) internal returns (bytes32 requestId) {\n    uint256 nonce = s_requestCount;\n    s_requestCount = nonce + 1;\n    bytes memory encodedRequest = abi.encodeWithSelector(\n      ChainlinkRequestInterface.oracleRequest.selector,\n      SENDER_OVERRIDE, // Sender value - overridden by onTokenTransfer by the requesting contract's address\n      AMOUNT_OVERRIDE, // Amount value - overridden by onTokenTransfer by the actual amount of LINK sent\n      req.id,\n      address(this),\n      req.callbackFunctionId,\n      nonce,\n      ORACLE_ARGS_VERSION,\n      req.buf.buf\n    );\n    return _rawRequest(oracleAddress, nonce, payment, encodedRequest);\n  }\n\n  /**\n   * @notice Creates a Chainlink request to the stored oracle address\n   * @dev This function supports multi-word response\n   * @dev Calls `sendOperatorRequestTo` with the stored oracle address\n   * @param req The initialized Chainlink Request\n   * @param payment The amount of LINK to send for the request\n   * @return requestId The request ID\n   */\n  function sendOperatorRequest(Chainlink.Request memory req, uint256 payment) internal returns (bytes32) {\n    return sendOperatorRequestTo(address(s_oracle), req, payment);\n  }\n\n  /**\n   * @notice Creates a Chainlink request to the specified oracle address\n   * @dev This function supports multi-word response\n   * @dev Generates and stores a request ID, increments the local nonce, and uses `transferAndCall` to\n   * send LINK which creates a request on the target oracle contract.\n   * Emits ChainlinkRequested event.\n   * @param oracleAddress The address of the oracle for the request\n   * @param req The initialized Chainlink Request\n   * @param payment The amount of LINK to send for the request\n   * @return requestId The request ID\n   */\n  function sendOperatorRequestTo(\n    address oracleAddress,\n    Chainlink.Request memory req,\n    uint256 payment\n  ) internal returns (bytes32 requestId) {\n    uint256 nonce = s_requestCount;\n    s_requestCount = nonce + 1;\n    bytes memory encodedRequest = abi.encodeWithSelector(\n      OperatorInterface.operatorRequest.selector,\n      SENDER_OVERRIDE, // Sender value - overridden by onTokenTransfer by the requesting contract's address\n      AMOUNT_OVERRIDE, // Amount value - overridden by onTokenTransfer by the actual amount of LINK sent\n      req.id,\n      req.callbackFunctionId,\n      nonce,\n      OPERATOR_ARGS_VERSION,\n      req.buf.buf\n    );\n    return _rawRequest(oracleAddress, nonce, payment, encodedRequest);\n  }\n\n  /**\n   * @notice Make a request to an oracle\n   * @param oracleAddress The address of the oracle for the request\n   * @param nonce used to generate the request ID\n   * @param payment The amount of LINK to send for the request\n   * @param encodedRequest data encoded for request type specific format\n   * @return requestId The request ID\n   */\n  function _rawRequest(\n    address oracleAddress,\n    uint256 nonce,\n    uint256 payment,\n    bytes memory encodedRequest\n  ) private returns (bytes32 requestId) {\n    requestId = keccak256(abi.encodePacked(this, nonce));\n    s_pendingRequests[requestId] = oracleAddress;\n    emit ChainlinkRequested(requestId);\n    require(s_link.transferAndCall(oracleAddress, payment, encodedRequest), \"unable to transferAndCall to oracle\");\n  }\n\n  /**\n   * @notice Allows a request to be cancelled if it has not been fulfilled\n   * @dev Requires keeping track of the expiration value emitted from the oracle contract.\n   * Deletes the request from the `pendingRequests` mapping.\n   * Emits ChainlinkCancelled event.\n   * @param requestId The request ID\n   * @param payment The amount of LINK sent for the request\n   * @param callbackFunc The callback function specified for the request\n   * @param expiration The time of the expiration for the request\n   */\n  function cancelChainlinkRequest(\n    bytes32 requestId,\n    uint256 payment,\n    bytes4 callbackFunc,\n    uint256 expiration\n  ) internal {\n    OperatorInterface requested = OperatorInterface(s_pendingRequests[requestId]);\n    delete s_pendingRequests[requestId];\n    emit ChainlinkCancelled(requestId);\n    requested.cancelOracleRequest(requestId, payment, callbackFunc, expiration);\n  }\n\n  /**\n   * @notice the next request count to be used in generating a nonce\n   * @dev starts at 1 in order to ensure consistent gas cost\n   * @return returns the next request count to be used in a nonce\n   */\n  function getNextRequestCount() internal view returns (uint256) {\n    return s_requestCount;\n  }\n\n  /**\n   * @notice Sets the stored oracle address\n   * @param oracleAddress The address of the oracle contract\n   */\n  function setChainlinkOracle(address oracleAddress) internal {\n    s_oracle = OperatorInterface(oracleAddress);\n  }\n\n  /**\n   * @notice Sets the LINK token address\n   * @param linkAddress The address of the LINK token contract\n   */\n  function setChainlinkToken(address linkAddress) internal {\n    s_link = LinkTokenInterface(linkAddress);\n  }\n\n  /**\n   * @notice Sets the Chainlink token address for the public\n   * network as given by the Pointer contract\n   */\n  function setPublicChainlinkToken() internal {\n    setChainlinkToken(PointerInterface(LINK_TOKEN_POINTER).getAddress());\n  }\n\n  /**\n   * @notice Retrieves the stored address of the LINK token\n   * @return The address of the LINK token\n   */\n  function chainlinkTokenAddress() internal view returns (address) {\n    return address(s_link);\n  }\n\n  /**\n   * @notice Retrieves the stored address of the oracle contract\n   * @return The address of the oracle contract\n   */\n  function chainlinkOracleAddress() internal view returns (address) {\n    return address(s_oracle);\n  }\n\n  /**\n   * @notice Allows for a request which was created on another contract to be fulfilled\n   * on this contract\n   * @param oracleAddress The address of the oracle contract that will fulfill the request\n   * @param requestId The request ID used for the response\n   */\n  function addChainlinkExternalRequest(address oracleAddress, bytes32 requestId) internal notPendingRequest(requestId) {\n    s_pendingRequests[requestId] = oracleAddress;\n  }\n\n  /**\n   * @notice Sets the stored oracle and LINK token contracts with the addresses resolved by ENS\n   * @dev Accounts for subnodes having different resolvers\n   * @param ensAddress The address of the ENS contract\n   * @param node The ENS node hash\n   */\n  function useChainlinkWithENS(address ensAddress, bytes32 node) internal {\n    s_ens = ENSInterface(ensAddress);\n    s_ensNode = node;\n    bytes32 linkSubnode = keccak256(abi.encodePacked(s_ensNode, ENS_TOKEN_SUBNAME));\n    ENSResolver_Chainlink resolver = ENSResolver_Chainlink(s_ens.resolver(linkSubnode));\n    setChainlinkToken(resolver.addr(linkSubnode));\n    updateChainlinkOracleWithENS();\n  }\n\n  /**\n   * @notice Sets the stored oracle contract with the address resolved by ENS\n   * @dev This may be called on its own as long as `useChainlinkWithENS` has been called previously\n   */\n  function updateChainlinkOracleWithENS() internal {\n    bytes32 oracleSubnode = keccak256(abi.encodePacked(s_ensNode, ENS_ORACLE_SUBNAME));\n    ENSResolver_Chainlink resolver = ENSResolver_Chainlink(s_ens.resolver(oracleSubnode));\n    setChainlinkOracle(resolver.addr(oracleSubnode));\n  }\n\n  /**\n   * @notice Ensures that the fulfillment is valid for this contract\n   * @dev Use if the contract developer prefers methods instead of modifiers for validation\n   * @param requestId The request ID for fulfillment\n   */\n  function validateChainlinkCallback(bytes32 requestId)\n    internal\n    recordChainlinkFulfillment(requestId)\n  // solhint-disable-next-line no-empty-blocks\n  {\n\n  }\n\n  /**\n   * @dev Reverts if the sender is not the oracle of the request.\n   * Emits ChainlinkFulfilled event.\n   * @param requestId The request ID for fulfillment\n   */\n  modifier recordChainlinkFulfillment(bytes32 requestId) {\n    require(msg.sender == s_pendingRequests[requestId], \"Source must be the oracle of the request\");\n    delete s_pendingRequests[requestId];\n    emit ChainlinkFulfilled(requestId);\n    _;\n  }\n\n  /**\n   * @dev Reverts if the request is already pending\n   * @param requestId The request ID for fulfillment\n   */\n  modifier notPendingRequest(bytes32 requestId) {\n    require(s_pendingRequests[requestId] == address(0), \"Request is already pending\");\n    _;\n  }\n}\n"},"@chainlink/contracts/src/v0.8/interfaces/ChainlinkRequestInterface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface ChainlinkRequestInterface {\n  function oracleRequest(\n    address sender,\n    uint256 requestPrice,\n    bytes32 serviceAgreementID,\n    address callbackAddress,\n    bytes4 callbackFunctionId,\n    uint256 nonce,\n    uint256 dataVersion,\n    bytes calldata data\n  ) external;\n\n  function cancelOracleRequest(\n    bytes32 requestId,\n    uint256 payment,\n    bytes4 callbackFunctionId,\n    uint256 expiration\n  ) external;\n}\n"},"@chainlink/contracts/src/v0.8/interfaces/ENSInterface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface ENSInterface {\n  // Logged when the owner of a node assigns a new owner to a subnode.\n  event NewOwner(bytes32 indexed node, bytes32 indexed label, address owner);\n\n  // Logged when the owner of a node transfers ownership to a new account.\n  event Transfer(bytes32 indexed node, address owner);\n\n  // Logged when the resolver for a node changes.\n  event NewResolver(bytes32 indexed node, address resolver);\n\n  // Logged when the TTL of a node changes\n  event NewTTL(bytes32 indexed node, uint64 ttl);\n\n  function setSubnodeOwner(\n    bytes32 node,\n    bytes32 label,\n    address owner\n  ) external;\n\n  function setResolver(bytes32 node, address resolver) external;\n\n  function setOwner(bytes32 node, address owner) external;\n\n  function setTTL(bytes32 node, uint64 ttl) external;\n\n  function owner(bytes32 node) external view returns (address);\n\n  function resolver(bytes32 node) external view returns (address);\n\n  function ttl(bytes32 node) external view returns (uint64);\n}\n"},"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface LinkTokenInterface {\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\n\n  function approve(address spender, uint256 value) external returns (bool success);\n\n  function balanceOf(address owner) external view returns (uint256 balance);\n\n  function decimals() external view returns (uint8 decimalPlaces);\n\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\n\n  function increaseApproval(address spender, uint256 subtractedValue) external;\n\n  function name() external view returns (string memory tokenName);\n\n  function symbol() external view returns (string memory tokenSymbol);\n\n  function totalSupply() external view returns (uint256 totalTokensIssued);\n\n  function transfer(address to, uint256 value) external returns (bool success);\n\n  function transferAndCall(\n    address to,\n    uint256 value,\n    bytes calldata data\n  ) external returns (bool success);\n\n  function transferFrom(\n    address from,\n    address to,\n    uint256 value\n  ) external returns (bool success);\n}\n"},"@chainlink/contracts/src/v0.8/interfaces/OperatorInterface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./OracleInterface.sol\";\nimport \"./ChainlinkRequestInterface.sol\";\n\ninterface OperatorInterface is OracleInterface, ChainlinkRequestInterface {\n  function operatorRequest(\n    address sender,\n    uint256 payment,\n    bytes32 specId,\n    bytes4 callbackFunctionId,\n    uint256 nonce,\n    uint256 dataVersion,\n    bytes calldata data\n  ) external;\n\n  function fulfillOracleRequest2(\n    bytes32 requestId,\n    uint256 payment,\n    address callbackAddress,\n    bytes4 callbackFunctionId,\n    uint256 expiration,\n    bytes calldata data\n  ) external returns (bool);\n\n  function ownerTransferAndCall(\n    address to,\n    uint256 value,\n    bytes calldata data\n  ) external returns (bool success);\n\n  function distributeFunds(address payable[] calldata receivers, uint256[] calldata amounts) external payable;\n\n  function getAuthorizedSenders() external returns (address[] memory);\n\n  function setAuthorizedSenders(address[] calldata senders) external;\n\n  function getForwarder() external returns (address);\n}\n"},"@chainlink/contracts/src/v0.8/interfaces/OracleInterface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface OracleInterface {\n  function fulfillOracleRequest(\n    bytes32 requestId,\n    uint256 payment,\n    address callbackAddress,\n    bytes4 callbackFunctionId,\n    uint256 expiration,\n    bytes32 data\n  ) external returns (bool);\n\n  function isAuthorizedSender(address node) external view returns (bool);\n\n  function withdraw(address recipient, uint256 amount) external;\n\n  function withdrawable() external view returns (uint256);\n}\n"},"@chainlink/contracts/src/v0.8/interfaces/PointerInterface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface PointerInterface {\n  function getAddress() external view returns (address);\n}\n"},"@chainlink/contracts/src/v0.8/vendor/BufferChainlink.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/**\n * @dev A library for working with mutable byte buffers in Solidity.\n *\n * Byte buffers are mutable and expandable, and provide a variety of primitives\n * for writing to them. At any time you can fetch a bytes object containing the\n * current contents of the buffer. The bytes object should not be stored between\n * operations, as it may change due to resizing of the buffer.\n */\nlibrary BufferChainlink {\n  /**\n   * @dev Represents a mutable buffer. Buffers have a current value (buf) and\n   *      a capacity. The capacity may be longer than the current value, in\n   *      which case it can be extended without the need to allocate more memory.\n   */\n  struct buffer {\n    bytes buf;\n    uint256 capacity;\n  }\n\n  /**\n   * @dev Initializes a buffer with an initial capacity.\n   * @param buf The buffer to initialize.\n   * @param capacity The number of bytes of space to allocate the buffer.\n   * @return The buffer, for chaining.\n   */\n  function init(buffer memory buf, uint256 capacity) internal pure returns (buffer memory) {\n    if (capacity % 32 != 0) {\n      capacity += 32 - (capacity % 32);\n    }\n    // Allocate space for the buffer data\n    buf.capacity = capacity;\n    assembly {\n      let ptr := mload(0x40)\n      mstore(buf, ptr)\n      mstore(ptr, 0)\n      mstore(0x40, add(32, add(ptr, capacity)))\n    }\n    return buf;\n  }\n\n  /**\n   * @dev Initializes a new buffer from an existing bytes object.\n   *      Changes to the buffer may mutate the original value.\n   * @param b The bytes object to initialize the buffer with.\n   * @return A new buffer.\n   */\n  function fromBytes(bytes memory b) internal pure returns (buffer memory) {\n    buffer memory buf;\n    buf.buf = b;\n    buf.capacity = b.length;\n    return buf;\n  }\n\n  function resize(buffer memory buf, uint256 capacity) private pure {\n    bytes memory oldbuf = buf.buf;\n    init(buf, capacity);\n    append(buf, oldbuf);\n  }\n\n  function max(uint256 a, uint256 b) private pure returns (uint256) {\n    if (a > b) {\n      return a;\n    }\n    return b;\n  }\n\n  /**\n   * @dev Sets buffer length to 0.\n   * @param buf The buffer to truncate.\n   * @return The original buffer, for chaining..\n   */\n  function truncate(buffer memory buf) internal pure returns (buffer memory) {\n    assembly {\n      let bufptr := mload(buf)\n      mstore(bufptr, 0)\n    }\n    return buf;\n  }\n\n  /**\n   * @dev Writes a byte string to a buffer. Resizes if doing so would exceed\n   *      the capacity of the buffer.\n   * @param buf The buffer to append to.\n   * @param off The start offset to write to.\n   * @param data The data to append.\n   * @param len The number of bytes to copy.\n   * @return The original buffer, for chaining.\n   */\n  function write(\n    buffer memory buf,\n    uint256 off,\n    bytes memory data,\n    uint256 len\n  ) internal pure returns (buffer memory) {\n    require(len <= data.length);\n\n    if (off + len > buf.capacity) {\n      resize(buf, max(buf.capacity, len + off) * 2);\n    }\n\n    uint256 dest;\n    uint256 src;\n    assembly {\n      // Memory address of the buffer data\n      let bufptr := mload(buf)\n      // Length of existing buffer data\n      let buflen := mload(bufptr)\n      // Start address = buffer address + offset + sizeof(buffer length)\n      dest := add(add(bufptr, 32), off)\n      // Update buffer length if we're extending it\n      if gt(add(len, off), buflen) {\n        mstore(bufptr, add(len, off))\n      }\n      src := add(data, 32)\n    }\n\n    // Copy word-length chunks while possible\n    for (; len >= 32; len -= 32) {\n      assembly {\n        mstore(dest, mload(src))\n      }\n      dest += 32;\n      src += 32;\n    }\n\n    // Copy remaining bytes\n    unchecked {\n      uint256 mask = (256**(32 - len)) - 1;\n      assembly {\n        let srcpart := and(mload(src), not(mask))\n        let destpart := and(mload(dest), mask)\n        mstore(dest, or(destpart, srcpart))\n      }\n    }\n\n    return buf;\n  }\n\n  /**\n   * @dev Appends a byte string to a buffer. Resizes if doing so would exceed\n   *      the capacity of the buffer.\n   * @param buf The buffer to append to.\n   * @param data The data to append.\n   * @param len The number of bytes to copy.\n   * @return The original buffer, for chaining.\n   */\n  function append(\n    buffer memory buf,\n    bytes memory data,\n    uint256 len\n  ) internal pure returns (buffer memory) {\n    return write(buf, buf.buf.length, data, len);\n  }\n\n  /**\n   * @dev Appends a byte string to a buffer. Resizes if doing so would exceed\n   *      the capacity of the buffer.\n   * @param buf The buffer to append to.\n   * @param data The data to append.\n   * @return The original buffer, for chaining.\n   */\n  function append(buffer memory buf, bytes memory data) internal pure returns (buffer memory) {\n    return write(buf, buf.buf.length, data, data.length);\n  }\n\n  /**\n   * @dev Writes a byte to the buffer. Resizes if doing so would exceed the\n   *      capacity of the buffer.\n   * @param buf The buffer to append to.\n   * @param off The offset to write the byte at.\n   * @param data The data to append.\n   * @return The original buffer, for chaining.\n   */\n  function writeUint8(\n    buffer memory buf,\n    uint256 off,\n    uint8 data\n  ) internal pure returns (buffer memory) {\n    if (off >= buf.capacity) {\n      resize(buf, buf.capacity * 2);\n    }\n\n    assembly {\n      // Memory address of the buffer data\n      let bufptr := mload(buf)\n      // Length of existing buffer data\n      let buflen := mload(bufptr)\n      // Address = buffer address + sizeof(buffer length) + off\n      let dest := add(add(bufptr, off), 32)\n      mstore8(dest, data)\n      // Update buffer length if we extended it\n      if eq(off, buflen) {\n        mstore(bufptr, add(buflen, 1))\n      }\n    }\n    return buf;\n  }\n\n  /**\n   * @dev Appends a byte to the buffer. Resizes if doing so would exceed the\n   *      capacity of the buffer.\n   * @param buf The buffer to append to.\n   * @param data The data to append.\n   * @return The original buffer, for chaining.\n   */\n  function appendUint8(buffer memory buf, uint8 data) internal pure returns (buffer memory) {\n    return writeUint8(buf, buf.buf.length, data);\n  }\n\n  /**\n   * @dev Writes up to 32 bytes to the buffer. Resizes if doing so would\n   *      exceed the capacity of the buffer.\n   * @param buf The buffer to append to.\n   * @param off The offset to write at.\n   * @param data The data to append.\n   * @param len The number of bytes to write (left-aligned).\n   * @return The original buffer, for chaining.\n   */\n  function write(\n    buffer memory buf,\n    uint256 off,\n    bytes32 data,\n    uint256 len\n  ) private pure returns (buffer memory) {\n    if (len + off > buf.capacity) {\n      resize(buf, (len + off) * 2);\n    }\n\n    unchecked {\n      uint256 mask = (256**len) - 1;\n      // Right-align data\n      data = data >> (8 * (32 - len));\n      assembly {\n        // Memory address of the buffer data\n        let bufptr := mload(buf)\n        // Address = buffer address + sizeof(buffer length) + off + len\n        let dest := add(add(bufptr, off), len)\n        mstore(dest, or(and(mload(dest), not(mask)), data))\n        // Update buffer length if we extended it\n        if gt(add(off, len), mload(bufptr)) {\n          mstore(bufptr, add(off, len))\n        }\n      }\n    }\n    return buf;\n  }\n\n  /**\n   * @dev Writes a bytes20 to the buffer. Resizes if doing so would exceed the\n   *      capacity of the buffer.\n   * @param buf The buffer to append to.\n   * @param off The offset to write at.\n   * @param data The data to append.\n   * @return The original buffer, for chaining.\n   */\n  function writeBytes20(\n    buffer memory buf,\n    uint256 off,\n    bytes20 data\n  ) internal pure returns (buffer memory) {\n    return write(buf, off, bytes32(data), 20);\n  }\n\n  /**\n   * @dev Appends a bytes20 to the buffer. Resizes if doing so would exceed\n   *      the capacity of the buffer.\n   * @param buf The buffer to append to.\n   * @param data The data to append.\n   * @return The original buffer, for chhaining.\n   */\n  function appendBytes20(buffer memory buf, bytes20 data) internal pure returns (buffer memory) {\n    return write(buf, buf.buf.length, bytes32(data), 20);\n  }\n\n  /**\n   * @dev Appends a bytes32 to the buffer. Resizes if doing so would exceed\n   *      the capacity of the buffer.\n   * @param buf The buffer to append to.\n   * @param data The data to append.\n   * @return The original buffer, for chaining.\n   */\n  function appendBytes32(buffer memory buf, bytes32 data) internal pure returns (buffer memory) {\n    return write(buf, buf.buf.length, data, 32);\n  }\n\n  /**\n   * @dev Writes an integer to the buffer. Resizes if doing so would exceed\n   *      the capacity of the buffer.\n   * @param buf The buffer to append to.\n   * @param off The offset to write at.\n   * @param data The data to append.\n   * @param len The number of bytes to write (right-aligned).\n   * @return The original buffer, for chaining.\n   */\n  function writeInt(\n    buffer memory buf,\n    uint256 off,\n    uint256 data,\n    uint256 len\n  ) private pure returns (buffer memory) {\n    if (len + off > buf.capacity) {\n      resize(buf, (len + off) * 2);\n    }\n\n    uint256 mask = (256**len) - 1;\n    assembly {\n      // Memory address of the buffer data\n      let bufptr := mload(buf)\n      // Address = buffer address + off + sizeof(buffer length) + len\n      let dest := add(add(bufptr, off), len)\n      mstore(dest, or(and(mload(dest), not(mask)), data))\n      // Update buffer length if we extended it\n      if gt(add(off, len), mload(bufptr)) {\n        mstore(bufptr, add(off, len))\n      }\n    }\n    return buf;\n  }\n\n  /**\n   * @dev Appends a byte to the end of the buffer. Resizes if doing so would\n   * exceed the capacity of the buffer.\n   * @param buf The buffer to append to.\n   * @param data The data to append.\n   * @return The original buffer.\n   */\n  function appendInt(\n    buffer memory buf,\n    uint256 data,\n    uint256 len\n  ) internal pure returns (buffer memory) {\n    return writeInt(buf, buf.buf.length, data, len);\n  }\n}\n"},"@chainlink/contracts/src/v0.8/vendor/CBORChainlink.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity >=0.4.19;\n\nimport {BufferChainlink} from \"./BufferChainlink.sol\";\n\nlibrary CBORChainlink {\n  using BufferChainlink for BufferChainlink.buffer;\n\n  uint8 private constant MAJOR_TYPE_INT = 0;\n  uint8 private constant MAJOR_TYPE_NEGATIVE_INT = 1;\n  uint8 private constant MAJOR_TYPE_BYTES = 2;\n  uint8 private constant MAJOR_TYPE_STRING = 3;\n  uint8 private constant MAJOR_TYPE_ARRAY = 4;\n  uint8 private constant MAJOR_TYPE_MAP = 5;\n  uint8 private constant MAJOR_TYPE_TAG = 6;\n  uint8 private constant MAJOR_TYPE_CONTENT_FREE = 7;\n\n  uint8 private constant TAG_TYPE_BIGNUM = 2;\n  uint8 private constant TAG_TYPE_NEGATIVE_BIGNUM = 3;\n\n  function encodeFixedNumeric(BufferChainlink.buffer memory buf, uint8 major, uint64 value) private pure {\n    if(value <= 23) {\n      buf.appendUint8(uint8((major << 5) | value));\n    } else if (value <= 0xFF) {\n      buf.appendUint8(uint8((major << 5) | 24));\n      buf.appendInt(value, 1);\n    } else if (value <= 0xFFFF) {\n      buf.appendUint8(uint8((major << 5) | 25));\n      buf.appendInt(value, 2);\n    } else if (value <= 0xFFFFFFFF) {\n      buf.appendUint8(uint8((major << 5) | 26));\n      buf.appendInt(value, 4);\n    } else {\n      buf.appendUint8(uint8((major << 5) | 27));\n      buf.appendInt(value, 8);\n    }\n  }\n\n  function encodeIndefiniteLengthType(BufferChainlink.buffer memory buf, uint8 major) private pure {\n    buf.appendUint8(uint8((major << 5) | 31));\n  }\n\n  function encodeUInt(BufferChainlink.buffer memory buf, uint value) internal pure {\n    if(value > 0xFFFFFFFFFFFFFFFF) {\n      encodeBigNum(buf, value);\n    } else {\n      encodeFixedNumeric(buf, MAJOR_TYPE_INT, uint64(value));\n    }\n  }\n\n  function encodeInt(BufferChainlink.buffer memory buf, int value) internal pure {\n    if(value < -0x10000000000000000) {\n      encodeSignedBigNum(buf, value);\n    } else if(value > 0xFFFFFFFFFFFFFFFF) {\n      encodeBigNum(buf, uint(value));\n    } else if(value >= 0) {\n      encodeFixedNumeric(buf, MAJOR_TYPE_INT, uint64(uint256(value)));\n    } else {\n      encodeFixedNumeric(buf, MAJOR_TYPE_NEGATIVE_INT, uint64(uint256(-1 - value)));\n    }\n  }\n\n  function encodeBytes(BufferChainlink.buffer memory buf, bytes memory value) internal pure {\n    encodeFixedNumeric(buf, MAJOR_TYPE_BYTES, uint64(value.length));\n    buf.append(value);\n  }\n\n  function encodeBigNum(BufferChainlink.buffer memory buf, uint value) internal pure {\n    buf.appendUint8(uint8((MAJOR_TYPE_TAG << 5) | TAG_TYPE_BIGNUM));\n    encodeBytes(buf, abi.encode(value));\n  }\n\n  function encodeSignedBigNum(BufferChainlink.buffer memory buf, int input) internal pure {\n    buf.appendUint8(uint8((MAJOR_TYPE_TAG << 5) | TAG_TYPE_NEGATIVE_BIGNUM));\n    encodeBytes(buf, abi.encode(uint256(-1 - input)));\n  }\n\n  function encodeString(BufferChainlink.buffer memory buf, string memory value) internal pure {\n    encodeFixedNumeric(buf, MAJOR_TYPE_STRING, uint64(bytes(value).length));\n    buf.append(bytes(value));\n  }\n\n  function startArray(BufferChainlink.buffer memory buf) internal pure {\n    encodeIndefiniteLengthType(buf, MAJOR_TYPE_ARRAY);\n  }\n\n  function startMap(BufferChainlink.buffer memory buf) internal pure {\n    encodeIndefiniteLengthType(buf, MAJOR_TYPE_MAP);\n  }\n\n  function endSequence(BufferChainlink.buffer memory buf) internal pure {\n    encodeIndefiniteLengthType(buf, MAJOR_TYPE_CONTENT_FREE);\n  }\n}\n"},"@chainlink/contracts/src/v0.8/vendor/ENSResolver.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nabstract contract ENSResolver {\n  function addr(bytes32 node) public view virtual returns (address);\n}\n"},"contracts/connectors/Twitter.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity >=0.8.6;\n\nimport \"@chainlink/contracts/src/v0.8/ChainlinkClient.sol\";\n\nimport \"../../vendor/openzeppelin/contracts/access/Ownable.sol\";\nimport \"../../vendor/openzeppelin/contracts/proxy/Clones.sol\";\nimport \"../../vendor/openzeppelin/contracts/security/Pausable.sol\";\n\nimport \"../../vendor/openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\nimport \"../../vendor/openzeppelin/contracts/utils/structs/EnumerableMap.sol\";\nimport \"../../vendor/openzeppelin/contracts/utils/Counters.sol\";\n\ncontract TwitterV1 is Pausable, Ownable, ReentrancyGuard, ChainlinkClient {\n  using Chainlink for Chainlink.Request;\n  using EnumerableMap for EnumerableMap.UintToAddressMap;\n  using Counters for Counters.Counter;\n\n  address public keeper;\n\n  bytes32 public immutable jobId;\n  uint256 private immutable fee;\n\n  string public requestBaseURI;\n\n  EnumerableMap.UintToAddressMap private users;\n\n  uint256 lastCampaignId;\n\n  struct Campaign {\n    uint256 campaignId;\n    string name;\n    address company;\n    uint256 budget;\n    uint256 validationThreshold;\n    uint256 partakersLimit;\n    bool isClosed;\n  }\n\n  struct CampaignContributors {\n    uint256 contributorsCount;\n    mapping(address => bool) contributorsByAddress;\n    mapping(address => bool) contributorsClaimStatus;\n  }\n\n  Campaign[] campaigns;\n  mapping(uint256 => Campaign) campaignById;\n  mapping(uint256 => CampaignContributors) campaignContributorsByCampaignId;\n\n  uint256 public constant MAX_TREASURY_FEE = 1000; // 10%\n\n  uint256 public treasuryFee; // treasury rate (e.g. 200 = 2%, 150 = 1.50%)\n  uint256 public treasuryAmount; // treasury amount that was not claimed\n\n  ///\n  /// EVENTS\n  ///\n  /**\n   * @notice Called when a request to sign up is made\n   */\n  event SignUpRequested(uint256 indexed userId, bytes32 indexed requestId);\n  /**\n   * @notice Called when a user signed up\n   */\n  event SignedUp(uint256 indexed userId, address userAddress);\n\n  event CampaignCreated(uint256 campaignId, address company);\n  event CampaignClosed(uint256 campaignId);\n  event ContributorAdded(uint256 campaignId, address contributor);\n  event ContributorRetributed(uint256 campaignId, address contributor, uint256 retribution);\n\n  ///\n  /// CONSTRUCTOR\n  ///\n\n  /**\n   * @notice Initialize the link token and target oracle\n   * All testnets config : https://docs.chain.link/any-api/testnet-oracles/\n   */\n  constructor(\n    bytes32 _jobId,\n    string memory _requestBaseURI,\n    address _oracle,\n    address _link,\n    uint256 _treasuryFee\n  ) {\n    setChainlinkToken(_link);\n    setChainlinkOracle(_oracle);\n    jobId = _jobId;\n    // 0,1 * 10**18 (Varies by network and job)\n    fee = (1 * LINK_DIVISIBILITY) / 10;\n\n    treasuryFee = _treasuryFee;\n    requestBaseURI = _requestBaseURI;\n  }\n\n  ///\n  /// MAIN FUNCTIONS\n  ///\n\n  /**\n   * @notice Function that allows a company to create a new campaign\n   * @param budget - Budget each winning partaker will share with each other\n   * @param validationThreshold - Minimum amount of retweet, likes etc for a partaker to win\n   * @param partakersLimit - Maximum amount of winning partakers for this campaign\n   */\n  function createCampaign(\n    string calldata name,\n    uint256 budget,\n    uint256 validationThreshold,\n    uint256 partakersLimit\n  ) external {\n    lastCampaignId++;\n    uint256 newCampaignId = lastCampaignId;\n    Campaign storage newCampaign = campaignById[newCampaignId];\n    newCampaign.budget = budget;\n    newCampaign.name = name;\n    newCampaign.validationThreshold = validationThreshold;\n    newCampaign.partakersLimit = partakersLimit;\n    newCampaign.company = msg.sender;\n    newCampaign.isClosed = false;\n    campaigns.push(newCampaign);\n    emit CampaignCreated(newCampaignId, msg.sender);\n  }\n\n  /**\n   * @notice Function that allows a company to close a\n   * @param campaignId - The id of the campaign\n   */\n  function closeCampaign(uint256 campaignId) external {\n    Campaign storage campaign = _getCampaign(campaignId);\n    require(msg.sender == campaign.company, \"Caller is not the campaign owner\");\n    campaign.isClosed = true;\n    emit CampaignClosed(campaignId);\n  }\n\n  /**\n   * @notice Function that allows a user to validate his  to close a\n   * @param campaignId - The id of the campaign\n   */\n  function claimCampaignContribution(\n    uint256 campaignId,\n    string memory postId,\n    uint256 claimedCounter\n  ) external {\n    bool isClaimValid = _validateContributionClaim(campaignId, postId, claimedCounter);\n    require(isClaimValid == true, \"This contribution does not satisfy the campaign's requirements\");\n    _addPartakerToCampaignContributors(campaignId, msg.sender);\n    emit ContributorAdded(campaignId, msg.sender);\n  }\n\n  function claimCampaignRetribution(uint256 campaignId) external {\n    CampaignContributors storage campaignContributors = campaignContributorsByCampaignId[campaignId];\n    require(\n      campaignContributors.contributorsByAddress[msg.sender] == true,\n      \"Caller is not a validated campaign contributor\"\n    );\n    require(campaignContributors.contributorsClaimStatus[msg.sender] == false, \"Retribution already claimed\");\n    uint256 retributionAmount = _computeRetributionAmount(campaignId);\n    _updateContributorClaimStatus(campaignId);\n    payable(msg.sender).transfer(retributionAmount);\n    emit ContributorRetributed(campaignId, msg.sender, retributionAmount);\n  }\n\n  /**\n   * @notice Function that allow user to sign up to twitter and claim won twitters\n   */\n  function signUp(uint256 _userId) external {\n    users.set(_userId, msg.sender);\n\n    emit SignedUp(_userId, msg.sender);\n    _requestSignUp(_userId);\n  }\n\n  /**\n   * @notice Check if user has signed up\n   * @param _userId - twitter user id\n   */\n  function hasSignedUp(uint256 _userId) external view returns (bool) {\n    return users.contains(_userId);\n  }\n\n  /**\n   * @notice Check if caller has signed up\n   */\n  function hasSignedUp() external view returns (bool) {\n    bool found = false;\n    for (uint256 idx = 0; idx < users.length(); idx++) if (users.get(idx) == msg.sender) found = true;\n    return found;\n  }\n\n  ///\n  /// CHAINLINK RESPONSES\n  ///\n\n  /**\n   * @notice Fulfill Sign Up request\n   *\n   * @param _requestId - id of the request\n   * @param _userId - twitter user id\n   * @param _hasSignedUp - true if  twitter userId match msg.sender address\n   */\n  function fulfillSignUp(\n    bytes32 _requestId,\n    uint256 _userId,\n    bool _hasSignedUp\n  ) public recordChainlinkFulfillment(_requestId) {\n    if (!_hasSignedUp) users.remove(_userId);\n\n    address user = users.get(_userId);\n    // TODO\n    // for (uint256 round = 0; round < epoch.current(); round++)\n    //   for (uint256 idx = 0; idx < winners[round].length; idx++)\n    //     if (winners[round][idx].userId == _userId) winners[round][idx].playerAddress = user;\n  }\n\n  ///\n  /// GETTERS FUNCTIONS\n  ///\n\n  /**\n   * @notice Return URI for twitter endpoint\n   */\n  function getTwitterURI(uint256 _twitterId) public view returns (string memory _twitterURI) {\n    return\n      string(\n        abi.encodePacked(\n          requestBaseURI,\n          \"/chains/\",\n          block.chainid,\n          \"/twitters/\",\n          _twitterId,\n          \"/winners\"\n          // TODO: Add query params\n          //   \"?prizes=\",\n          //   prizes[_twitterId].length,\n          //   \"&tweetId\",\n          //   twitters[_twitterId].tweetId,\n          //   \"&retweetMaxCount\",\n          //   twitters[_twitterId].retweetMaxCount\n        )\n      );\n  }\n\n  function getCampaign(uint256 campaignId) external view returns (Campaign memory) {\n    return _getCampaign(campaignId);\n  }\n\n  /**\n   * @notice Return URI for sign up endpoint\n   */\n  function getSignUpURI(uint256 _userId) public view returns (string memory _signUpURI) {\n    return string(abi.encodePacked(requestBaseURI, \"/users/\", _userId));\n  }\n\n  ///\n  /// ADMIN FUNCTIONS\n  ///\n\n  /**\n   * @notice Witdraws LINK from the contract to the Owner\n   * @dev only admin can call this function\n   */\n  function withdrawLink() external onlyAdmin {\n    LinkTokenInterface link = LinkTokenInterface(chainlinkTokenAddress());\n    require(link.transfer(owner(), link.balanceOf(address(this))), \"Unable to transfer\");\n  }\n\n  /**\n   * @notice Set requestBaseURI\n   * @dev only admin can call this function\n   */\n  function setRequestBaseURI(string calldata _requestBaseURI) external onlyAdmin {\n    requestBaseURI = _requestBaseURI;\n  }\n\n  /**\n   * @notice Add user to users list\n   * @dev only admin can call this function\n   */\n  function addUser(uint256 _userId, address _userAddress) external onlyAdmin {\n    if (!users.contains(_userId)) users.set(_userId, _userAddress);\n  }\n\n  /**\n   * @notice Call this method if no response is received within 5 minutes\n   * @param _requestId The ID that was generated for the request to cancel\n   * @param _payment The payment specified for the request to cancel\n   * @param _callbackFunctionId The bytes4 callback function ID specified for\n   * the request to cancel\n   * @param _expiration The expiration generated for the request to cancel\n   * @dev only admin can call this function\n   */\n  function cancelRequest(\n    bytes32 _requestId,\n    uint256 _payment,\n    bytes4 _callbackFunctionId,\n    uint256 _expiration\n  ) public onlyAdmin {\n    cancelChainlinkRequest(_requestId, _payment, _callbackFunctionId, _expiration);\n  }\n\n  ///\n  /// INTERNAL FUNCTIONS\n  ///\n\n  /**\n   * @notice retrieves a campaign by its id\n   * @param _campaignId the id of the campaign\n   */\n  function _getCampaign(uint256 _campaignId) internal view returns (Campaign storage) {\n    return campaignById[_campaignId];\n  }\n\n  /**\n   * @notice validates the input to performUpkeep\n   * @param campaignId the id of the cron job\n   */\n  function _validateContributionClaim(\n    uint256 campaignId,\n    string memory postId,\n    uint256 claimedCounter\n  ) private view returns (bool) {\n    // TODO Implement twitter verification using oracles. Currently we believe what user inputs\n    Campaign storage campaign = _getCampaign(campaignId);\n    return claimedCounter >= campaign.validationThreshold;\n  }\n\n  function _addPartakerToCampaignContributors(uint256 campaignId, address partaker) internal {\n    Campaign storage campaign = _getCampaign(campaignId);\n    CampaignContributors storage campaignContributors = campaignContributorsByCampaignId[campaignId];\n    require(campaign.partakersLimit >= campaignContributors.contributorsCount, \"Contributors limit already reached\");\n    require(campaign.isClosed == false, \"Campaign is closed\");\n    campaignContributors.contributorsByAddress[partaker] = true;\n    campaignContributors.contributorsClaimStatus[partaker] = false;\n  }\n\n  function _updateContributorClaimStatus(uint256 campaignId) internal {\n    CampaignContributors storage campaignContributors = campaignContributorsByCampaignId[campaignId];\n    campaignContributors.contributorsClaimStatus[msg.sender] = true;\n  }\n\n  function _computeRetributionAmount(uint256 campaignId) internal view returns (uint256) {\n    Campaign storage campaign = _getCampaign(campaignId);\n    uint256 retributionAmount = campaign.budget / campaign.partakersLimit;\n    return retributionAmount;\n  }\n\n  /**\n   * @notice Create request to sign up user\n   * @dev only admin can call this function\n   */\n  function _requestSignUp(uint256 _userId) private onlyAdmin whenNotPaused returns (bytes32 _requestId) {\n    Chainlink.Request memory req = buildChainlinkRequest(jobId, address(this), this.fulfillSignUp.selector);\n    req.add(\"get\", getSignUpURI(_userId));\n    // https://docs.chain.link/any-api/testnet-oracles/\n    req.add(\"path\", \"hasSignedUp\");\n    bytes32 requestId = sendChainlinkRequest(req, fee);\n    emit SignUpRequested(_userId, requestId);\n    return requestId;\n  }\n\n  ///\n  /// MODIFIERS\n  ///\n\n  /**\n   * @notice Modifier that ensure only admin can access this function\n   */\n  modifier onlyAdmin() {\n    require(msg.sender == owner(), \"Caller is not the admin\");\n    _;\n  }\n}\n"},"vendor/openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.3.2 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"vendor/openzeppelin/contracts/proxy/Clones.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.3.2 (proxy/Clones.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\n * deploying minimal proxy contracts, also known as \"clones\".\n *\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n *\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n * deterministic method.\n *\n * _Available since v3.4._\n */\nlibrary Clones {\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n     *\n     * This function uses the create opcode, which should never revert.\n     */\n    function clone(address implementation) internal returns (address instance) {\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\n            instance := create(0, ptr, 0x37)\n        }\n        require(instance != address(0), \"ERC1167: create failed\");\n    }\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n     *\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\n     * the clone. Using the same `implementation` and `salt` multiple time will revert, since\n     * the clones cannot be deployed twice at the same address.\n     */\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\n            instance := create2(0, ptr, 0x37, salt)\n        }\n        require(instance != address(0), \"ERC1167: create2 failed\");\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(\n        address implementation,\n        bytes32 salt,\n        address deployer\n    ) internal pure returns (address predicted) {\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf3ff00000000000000000000000000000000)\n            mstore(add(ptr, 0x38), shl(0x60, deployer))\n            mstore(add(ptr, 0x4c), salt)\n            mstore(add(ptr, 0x6c), keccak256(ptr, 0x37))\n            predicted := keccak256(add(ptr, 0x37), 0x55)\n        }\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(address implementation, bytes32 salt)\n        internal\n        view\n        returns (address predicted)\n    {\n        return predictDeterministicAddress(implementation, salt, address(this));\n    }\n}\n"},"vendor/openzeppelin/contracts/security/Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.3.2 (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        require(!paused(), \"Pausable: paused\");\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        require(paused(), \"Pausable: not paused\");\n        _;\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"vendor/openzeppelin/contracts/security/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.3.2 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"},"vendor/openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.3.2 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"vendor/openzeppelin/contracts/utils/Counters.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.3.2 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"},"vendor/openzeppelin/contracts/utils/structs/EnumerableMap.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.3.2 (utils/structs/EnumerableMap.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./EnumerableSet.sol\";\n\n/**\n * @dev Library for managing an enumerable variant of Solidity's\n * https://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`]\n * type.\n *\n * Maps have the following properties:\n *\n * - Entries are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Entries are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```\n * contract Example {\n *     // Add the library methods\n *     using EnumerableMap for EnumerableMap.UintToAddressMap;\n *\n *     // Declare a set state variable\n *     EnumerableMap.UintToAddressMap private myMap;\n * }\n * ```\n *\n * As of v3.0.0, only maps of type `uint256 -> address` (`UintToAddressMap`) are\n * supported.\n */\nlibrary EnumerableMap {\n    using EnumerableSet for EnumerableSet.Bytes32Set;\n\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Map type with\n    // bytes32 keys and values.\n    // The Map implementation uses private functions, and user-facing\n    // implementations (such as Uint256ToAddressMap) are just wrappers around\n    // the underlying Map.\n    // This means that we can only create new EnumerableMaps for types that fit\n    // in bytes32.\n\n    struct Map {\n        // Storage of keys\n        EnumerableSet.Bytes32Set _keys;\n        mapping(bytes32 => bytes32) _values;\n    }\n\n    /**\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\n     * key. O(1).\n     *\n     * Returns true if the key was added to the map, that is if it was not\n     * already present.\n     */\n    function _set(\n        Map storage map,\n        bytes32 key,\n        bytes32 value\n    ) private returns (bool) {\n        map._values[key] = value;\n        return map._keys.add(key);\n    }\n\n    /**\n     * @dev Removes a key-value pair from a map. O(1).\n     *\n     * Returns true if the key was removed from the map, that is if it was present.\n     */\n    function _remove(Map storage map, bytes32 key) private returns (bool) {\n        delete map._values[key];\n        return map._keys.remove(key);\n    }\n\n    /**\n     * @dev Returns true if the key is in the map. O(1).\n     */\n    function _contains(Map storage map, bytes32 key) private view returns (bool) {\n        return map._keys.contains(key);\n    }\n\n    /**\n     * @dev Returns the number of key-value pairs in the map. O(1).\n     */\n    function _length(Map storage map) private view returns (uint256) {\n        return map._keys.length();\n    }\n\n    /**\n     * @dev Returns the key-value pair stored at position `index` in the map. O(1).\n     *\n     * Note that there are no guarantees on the ordering of entries inside the\n     * array, and it may change when more entries are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Map storage map, uint256 index) private view returns (bytes32, bytes32) {\n        bytes32 key = map._keys.at(index);\n        return (key, map._values[key]);\n    }\n\n    /**\n     * @dev Tries to returns the value associated with `key`.  O(1).\n     * Does not revert if `key` is not in the map.\n     */\n    function _tryGet(Map storage map, bytes32 key) private view returns (bool, bytes32) {\n        bytes32 value = map._values[key];\n        if (value == bytes32(0)) {\n            return (_contains(map, key), bytes32(0));\n        } else {\n            return (true, value);\n        }\n    }\n\n    /**\n     * @dev Returns the value associated with `key`.  O(1).\n     *\n     * Requirements:\n     *\n     * - `key` must be in the map.\n     */\n    function _get(Map storage map, bytes32 key) private view returns (bytes32) {\n        bytes32 value = map._values[key];\n        require(value != 0 || _contains(map, key), \"EnumerableMap: nonexistent key\");\n        return value;\n    }\n\n    /**\n     * @dev Same as {_get}, with a custom error message when `key` is not in the map.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {_tryGet}.\n     */\n    function _get(\n        Map storage map,\n        bytes32 key,\n        string memory errorMessage\n    ) private view returns (bytes32) {\n        bytes32 value = map._values[key];\n        require(value != 0 || _contains(map, key), errorMessage);\n        return value;\n    }\n\n    // UintToAddressMap\n\n    struct UintToAddressMap {\n        Map _inner;\n    }\n\n    /**\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\n     * key. O(1).\n     *\n     * Returns true if the key was added to the map, that is if it was not\n     * already present.\n     */\n    function set(\n        UintToAddressMap storage map,\n        uint256 key,\n        address value\n    ) internal returns (bool) {\n        return _set(map._inner, bytes32(key), bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the key was removed from the map, that is if it was present.\n     */\n    function remove(UintToAddressMap storage map, uint256 key) internal returns (bool) {\n        return _remove(map._inner, bytes32(key));\n    }\n\n    /**\n     * @dev Returns true if the key is in the map. O(1).\n     */\n    function contains(UintToAddressMap storage map, uint256 key) internal view returns (bool) {\n        return _contains(map._inner, bytes32(key));\n    }\n\n    /**\n     * @dev Returns the number of elements in the map. O(1).\n     */\n    function length(UintToAddressMap storage map) internal view returns (uint256) {\n        return _length(map._inner);\n    }\n\n    /**\n     * @dev Returns the element stored at position `index` in the set. O(1).\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintToAddressMap storage map, uint256 index) internal view returns (uint256, address) {\n        (bytes32 key, bytes32 value) = _at(map._inner, index);\n        return (uint256(key), address(uint160(uint256(value))));\n    }\n\n    /**\n     * @dev Tries to returns the value associated with `key`.  O(1).\n     * Does not revert if `key` is not in the map.\n     *\n     * _Available since v3.4._\n     */\n    function tryGet(UintToAddressMap storage map, uint256 key) internal view returns (bool, address) {\n        (bool success, bytes32 value) = _tryGet(map._inner, bytes32(key));\n        return (success, address(uint160(uint256(value))));\n    }\n\n    /**\n     * @dev Returns the value associated with `key`.  O(1).\n     *\n     * Requirements:\n     *\n     * - `key` must be in the map.\n     */\n    function get(UintToAddressMap storage map, uint256 key) internal view returns (address) {\n        return address(uint160(uint256(_get(map._inner, bytes32(key)))));\n    }\n\n    /**\n     * @dev Same as {get}, with a custom error message when `key` is not in the map.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryGet}.\n     */\n    function get(\n        UintToAddressMap storage map,\n        uint256 key,\n        string memory errorMessage\n    ) internal view returns (address) {\n        return address(uint160(uint256(_get(map._inner, bytes32(key), errorMessage))));\n    }\n}\n"},"vendor/openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.3.2 (utils/structs/EnumerableSet.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping(bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (lastIndex != toDeleteIndex) {\n                bytes32 lastvalue = set._values[lastIndex];\n\n                // Move the last value to the index where the value to delete is\n                set._values[toDeleteIndex] = lastvalue;\n                // Update the index for the moved value\n                set._indexes[lastvalue] = valueIndex; // Replace lastvalue's index to valueIndex\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        return _values(set._inner);\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n   --> contracts/connectors/Twitter.sol:211:5:\n    |\n211 |     address user = users.get(_userId);\n    |     ^^^^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"end":6566,"file":"contracts/connectors/Twitter.sol","start":6554},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/connectors/Twitter.sol:322:5:\n    |\n322 |     string memory postId,\n    |     ^^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":9839,"file":"contracts/connectors/Twitter.sol","start":9819},"type":"Warning"}],"sources":{"@chainlink/contracts/src/v0.8/Chainlink.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/Chainlink.sol","exportedSymbols":{"BufferChainlink":[1718],"CBORChainlink":[2165],"Chainlink":[268]},"id":269,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:0"},{"absolutePath":"@chainlink/contracts/src/v0.8/vendor/CBORChainlink.sol","file":"./vendor/CBORChainlink.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":269,"sourceUnit":2166,"src":"57:57:0","symbolAliases":[{"foreign":{"id":2,"name":"CBORChainlink","nodeType":"Identifier","overloadedDeclarations":[],"src":"65:13:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/vendor/BufferChainlink.sol","file":"./vendor/BufferChainlink.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":269,"sourceUnit":1719,"src":"115:61:0","symbolAliases":[{"foreign":{"id":4,"name":"BufferChainlink","nodeType":"Identifier","overloadedDeclarations":[],"src":"123:15:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"178:114:0","text":" @title Library for common Chainlink functions\n @dev Uses imported CBOR library for encoding to buffer"},"fullyImplemented":true,"id":268,"linearizedBaseContracts":[268],"name":"Chainlink","nameLocation":"301:9:0","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":9,"mutability":"constant","name":"defaultBufferSize","nameLocation":"341:17:0","nodeType":"VariableDeclaration","scope":268,"src":"315:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7,"name":"uint256","nodeType":"ElementaryTypeName","src":"315:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323536","id":8,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"361:3:0","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"visibility":"internal"},{"id":13,"libraryName":{"id":10,"name":"CBORChainlink","nodeType":"IdentifierPath","referencedDeclaration":2165,"src":"420:13:0"},"nodeType":"UsingForDirective","src":"414:47:0","typeName":{"id":12,"nodeType":"UserDefinedTypeName","pathNode":{"id":11,"name":"BufferChainlink.buffer","nodeType":"IdentifierPath","referencedDeclaration":1204,"src":"438:22:0"},"referencedDeclaration":1204,"src":"438:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_storage_ptr","typeString":"struct BufferChainlink.buffer"}}},{"canonicalName":"Chainlink.Request","id":25,"members":[{"constant":false,"id":15,"mutability":"mutable","name":"id","nameLocation":"494:2:0","nodeType":"VariableDeclaration","scope":25,"src":"486:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14,"name":"bytes32","nodeType":"ElementaryTypeName","src":"486:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":17,"mutability":"mutable","name":"callbackAddress","nameLocation":"510:15:0","nodeType":"VariableDeclaration","scope":25,"src":"502:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16,"name":"address","nodeType":"ElementaryTypeName","src":"502:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19,"mutability":"mutable","name":"callbackFunctionId","nameLocation":"538:18:0","nodeType":"VariableDeclaration","scope":25,"src":"531:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":18,"name":"bytes4","nodeType":"ElementaryTypeName","src":"531:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":21,"mutability":"mutable","name":"nonce","nameLocation":"570:5:0","nodeType":"VariableDeclaration","scope":25,"src":"562:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20,"name":"uint256","nodeType":"ElementaryTypeName","src":"562:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":24,"mutability":"mutable","name":"buf","nameLocation":"604:3:0","nodeType":"VariableDeclaration","scope":25,"src":"581:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_storage_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":23,"nodeType":"UserDefinedTypeName","pathNode":{"id":22,"name":"BufferChainlink.buffer","nodeType":"IdentifierPath","referencedDeclaration":1204,"src":"581:22:0"},"referencedDeclaration":1204,"src":"581:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"}],"name":"Request","nameLocation":"472:7:0","nodeType":"StructDefinition","scope":268,"src":"465:147:0","visibility":"public"},{"body":{"id":69,"nodeType":"Block","src":"1155:183:0","statements":[{"expression":{"arguments":[{"expression":{"id":44,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"1182:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"id":45,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":24,"src":"1182:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},{"id":46,"name":"defaultBufferSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"1192:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":41,"name":"BufferChainlink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"1161:15:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BufferChainlink_$1718_$","typeString":"type(library BufferChainlink)"}},"id":43,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"init","nodeType":"MemberAccess","referencedDeclaration":1242,"src":"1161:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1204_memory_ptr_$_t_uint256_$returns$_t_struct$_buffer_$1204_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,uint256) pure returns (struct BufferChainlink.buffer memory)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1161:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":48,"nodeType":"ExpressionStatement","src":"1161:49:0"},{"expression":{"id":53,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":49,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"1216:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"id":51,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":15,"src":"1216:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":52,"name":"jobId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":31,"src":"1226:5:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1216:15:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":54,"nodeType":"ExpressionStatement","src":"1216:15:0"},{"expression":{"id":59,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":55,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"1237:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"id":57,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"callbackAddress","nodeType":"MemberAccess","referencedDeclaration":17,"src":"1237:20:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":58,"name":"callbackAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33,"src":"1260:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1237:35:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":60,"nodeType":"ExpressionStatement","src":"1237:35:0"},{"expression":{"id":65,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":61,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"1278:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"id":63,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"callbackFunctionId","nodeType":"MemberAccess","referencedDeclaration":19,"src":"1278:23:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":64,"name":"callbackFunc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"1304:12:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1278:38:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":66,"nodeType":"ExpressionStatement","src":"1278:38:0"},{"expression":{"id":67,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"1329:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"functionReturnParameters":40,"id":68,"nodeType":"Return","src":"1322:11:0"}]},"documentation":{"id":26,"nodeType":"StructuredDocumentation","src":"616:368:0","text":" @notice Initializes a Chainlink request\n @dev Sets the ID, callback address, and callback function signature on the request\n @param self The uninitialized request\n @param jobId The Job Specification ID\n @param callbackAddr The callback address\n @param callbackFunc The callback function signature\n @return The initialized request"},"id":70,"implemented":true,"kind":"function","modifiers":[],"name":"initialize","nameLocation":"996:10:0","nodeType":"FunctionDefinition","parameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29,"mutability":"mutable","name":"self","nameLocation":"1027:4:0","nodeType":"VariableDeclaration","scope":70,"src":"1012:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request"},"typeName":{"id":28,"nodeType":"UserDefinedTypeName","pathNode":{"id":27,"name":"Request","nodeType":"IdentifierPath","referencedDeclaration":25,"src":"1012:7:0"},"referencedDeclaration":25,"src":"1012:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_storage_ptr","typeString":"struct Chainlink.Request"}},"visibility":"internal"},{"constant":false,"id":31,"mutability":"mutable","name":"jobId","nameLocation":"1045:5:0","nodeType":"VariableDeclaration","scope":70,"src":"1037:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":30,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1037:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":33,"mutability":"mutable","name":"callbackAddr","nameLocation":"1064:12:0","nodeType":"VariableDeclaration","scope":70,"src":"1056:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32,"name":"address","nodeType":"ElementaryTypeName","src":"1056:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":35,"mutability":"mutable","name":"callbackFunc","nameLocation":"1089:12:0","nodeType":"VariableDeclaration","scope":70,"src":"1082:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":34,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1082:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1006:99:0"},"returnParameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":70,"src":"1129:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request"},"typeName":{"id":38,"nodeType":"UserDefinedTypeName","pathNode":{"id":37,"name":"Chainlink.Request","nodeType":"IdentifierPath","referencedDeclaration":25,"src":"1129:17:0"},"referencedDeclaration":25,"src":"1129:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_storage_ptr","typeString":"struct Chainlink.Request"}},"visibility":"internal"}],"src":"1128:26:0"},"scope":268,"src":"987:351:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":96,"nodeType":"Block","src":"1648:98:0","statements":[{"expression":{"arguments":[{"expression":{"id":82,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"1675:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"id":83,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":24,"src":"1675:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},{"expression":{"id":84,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":76,"src":"1685:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1685:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":79,"name":"BufferChainlink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"1654:15:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BufferChainlink_$1718_$","typeString":"type(library BufferChainlink)"}},"id":81,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"init","nodeType":"MemberAccess","referencedDeclaration":1242,"src":"1654:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1204_memory_ptr_$_t_uint256_$returns$_t_struct$_buffer_$1204_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,uint256) pure returns (struct BufferChainlink.buffer memory)"}},"id":86,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1654:43:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":87,"nodeType":"ExpressionStatement","src":"1654:43:0"},{"expression":{"arguments":[{"expression":{"id":91,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"1726:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"id":92,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":24,"src":"1726:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},{"id":93,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":76,"src":"1736:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":88,"name":"BufferChainlink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"1703:15:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BufferChainlink_$1718_$","typeString":"type(library BufferChainlink)"}},"id":90,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"append","nodeType":"MemberAccess","referencedDeclaration":1461,"src":"1703:22:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1204_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_struct$_buffer_$1204_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,bytes memory) pure returns (struct BufferChainlink.buffer memory)"}},"id":94,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1703:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":95,"nodeType":"ExpressionStatement","src":"1703:38:0"}]},"documentation":{"id":71,"nodeType":"StructuredDocumentation","src":"1342:230:0","text":" @notice Sets the data for the buffer without encoding CBOR on-chain\n @dev CBOR can be closed with curly-brackets {} or they can be left off\n @param self The initialized request\n @param data The CBOR data"},"id":97,"implemented":true,"kind":"function","modifiers":[],"name":"setBuffer","nameLocation":"1584:9:0","nodeType":"FunctionDefinition","parameters":{"id":77,"nodeType":"ParameterList","parameters":[{"constant":false,"id":74,"mutability":"mutable","name":"self","nameLocation":"1609:4:0","nodeType":"VariableDeclaration","scope":97,"src":"1594:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request"},"typeName":{"id":73,"nodeType":"UserDefinedTypeName","pathNode":{"id":72,"name":"Request","nodeType":"IdentifierPath","referencedDeclaration":25,"src":"1594:7:0"},"referencedDeclaration":25,"src":"1594:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_storage_ptr","typeString":"struct Chainlink.Request"}},"visibility":"internal"},{"constant":false,"id":76,"mutability":"mutable","name":"data","nameLocation":"1628:4:0","nodeType":"VariableDeclaration","scope":97,"src":"1615:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":75,"name":"bytes","nodeType":"ElementaryTypeName","src":"1615:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1593:40:0"},"returnParameters":{"id":78,"nodeType":"ParameterList","parameters":[],"src":"1648:0:0"},"scope":268,"src":"1575:171:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":124,"nodeType":"Block","src":"2055:71:0","statements":[{"expression":{"arguments":[{"id":113,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103,"src":"2083:3:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"expression":{"id":108,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2061:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"id":111,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":24,"src":"2061:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":112,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"encodeString","nodeType":"MemberAccess","referencedDeclaration":2128,"src":"2061:21:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1204_memory_ptr_$_t_string_memory_ptr_$returns$__$bound_to$_t_struct$_buffer_$1204_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,string memory) pure"}},"id":114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2061:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":115,"nodeType":"ExpressionStatement","src":"2061:26:0"},{"expression":{"arguments":[{"id":121,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105,"src":"2115:5:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"expression":{"id":116,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2093:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"id":119,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":24,"src":"2093:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":120,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"encodeString","nodeType":"MemberAccess","referencedDeclaration":2128,"src":"2093:21:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1204_memory_ptr_$_t_string_memory_ptr_$returns$__$bound_to$_t_struct$_buffer_$1204_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,string memory) pure"}},"id":122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2093:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":123,"nodeType":"ExpressionStatement","src":"2093:28:0"}]},"documentation":{"id":98,"nodeType":"StructuredDocumentation","src":"1750:198:0","text":" @notice Adds a string value to the request with a given key name\n @param self The initialized request\n @param key The name of the key\n @param value The string value to add"},"id":125,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"1960:3:0","nodeType":"FunctionDefinition","parameters":{"id":106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"self","nameLocation":"1984:4:0","nodeType":"VariableDeclaration","scope":125,"src":"1969:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request"},"typeName":{"id":100,"nodeType":"UserDefinedTypeName","pathNode":{"id":99,"name":"Request","nodeType":"IdentifierPath","referencedDeclaration":25,"src":"1969:7:0"},"referencedDeclaration":25,"src":"1969:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_storage_ptr","typeString":"struct Chainlink.Request"}},"visibility":"internal"},{"constant":false,"id":103,"mutability":"mutable","name":"key","nameLocation":"2008:3:0","nodeType":"VariableDeclaration","scope":125,"src":"1994:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":102,"name":"string","nodeType":"ElementaryTypeName","src":"1994:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":105,"mutability":"mutable","name":"value","nameLocation":"2031:5:0","nodeType":"VariableDeclaration","scope":125,"src":"2017:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":104,"name":"string","nodeType":"ElementaryTypeName","src":"2017:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1963:77:0"},"returnParameters":{"id":107,"nodeType":"ParameterList","parameters":[],"src":"2055:0:0"},"scope":268,"src":"1951:175:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":152,"nodeType":"Block","src":"2437:70:0","statements":[{"expression":{"arguments":[{"id":141,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"2465:3:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"expression":{"id":136,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"2443:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"id":139,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":24,"src":"2443:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":140,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"encodeString","nodeType":"MemberAccess","referencedDeclaration":2128,"src":"2443:21:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1204_memory_ptr_$_t_string_memory_ptr_$returns$__$bound_to$_t_struct$_buffer_$1204_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,string memory) pure"}},"id":142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2443:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":143,"nodeType":"ExpressionStatement","src":"2443:26:0"},{"expression":{"arguments":[{"id":149,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"2496:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"expression":{"id":144,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"2475:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"id":147,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":24,"src":"2475:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":148,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"encodeBytes","nodeType":"MemberAccess","referencedDeclaration":2029,"src":"2475:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1204_memory_ptr_$_t_bytes_memory_ptr_$returns$__$bound_to$_t_struct$_buffer_$1204_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,bytes memory) pure"}},"id":150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2475:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":151,"nodeType":"ExpressionStatement","src":"2475:27:0"}]},"documentation":{"id":126,"nodeType":"StructuredDocumentation","src":"2130:196:0","text":" @notice Adds a bytes value to the request with a given key name\n @param self The initialized request\n @param key The name of the key\n @param value The bytes value to add"},"id":153,"implemented":true,"kind":"function","modifiers":[],"name":"addBytes","nameLocation":"2338:8:0","nodeType":"FunctionDefinition","parameters":{"id":134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"self","nameLocation":"2367:4:0","nodeType":"VariableDeclaration","scope":153,"src":"2352:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request"},"typeName":{"id":128,"nodeType":"UserDefinedTypeName","pathNode":{"id":127,"name":"Request","nodeType":"IdentifierPath","referencedDeclaration":25,"src":"2352:7:0"},"referencedDeclaration":25,"src":"2352:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_storage_ptr","typeString":"struct Chainlink.Request"}},"visibility":"internal"},{"constant":false,"id":131,"mutability":"mutable","name":"key","nameLocation":"2391:3:0","nodeType":"VariableDeclaration","scope":153,"src":"2377:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":130,"name":"string","nodeType":"ElementaryTypeName","src":"2377:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":133,"mutability":"mutable","name":"value","nameLocation":"2413:5:0","nodeType":"VariableDeclaration","scope":153,"src":"2400:18:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":132,"name":"bytes","nodeType":"ElementaryTypeName","src":"2400:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2346:76:0"},"returnParameters":{"id":135,"nodeType":"ParameterList","parameters":[],"src":"2437:0:0"},"scope":268,"src":"2329:178:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":180,"nodeType":"Block","src":"2812:68:0","statements":[{"expression":{"arguments":[{"id":169,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"2840:3:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"expression":{"id":164,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"2818:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"id":167,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":24,"src":"2818:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":168,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"encodeString","nodeType":"MemberAccess","referencedDeclaration":2128,"src":"2818:21:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1204_memory_ptr_$_t_string_memory_ptr_$returns$__$bound_to$_t_struct$_buffer_$1204_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,string memory) pure"}},"id":170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2818:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":171,"nodeType":"ExpressionStatement","src":"2818:26:0"},{"expression":{"arguments":[{"id":177,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"2869:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"expression":{"id":172,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"2850:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"id":175,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":24,"src":"2850:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":176,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"encodeInt","nodeType":"MemberAccess","referencedDeclaration":2004,"src":"2850:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1204_memory_ptr_$_t_int256_$returns$__$bound_to$_t_struct$_buffer_$1204_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,int256) pure"}},"id":178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2850:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":179,"nodeType":"ExpressionStatement","src":"2850:25:0"}]},"documentation":{"id":154,"nodeType":"StructuredDocumentation","src":"2511:198:0","text":" @notice Adds a int256 value to the request with a given key name\n @param self The initialized request\n @param key The name of the key\n @param value The int256 value to add"},"id":181,"implemented":true,"kind":"function","modifiers":[],"name":"addInt","nameLocation":"2721:6:0","nodeType":"FunctionDefinition","parameters":{"id":162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":157,"mutability":"mutable","name":"self","nameLocation":"2748:4:0","nodeType":"VariableDeclaration","scope":181,"src":"2733:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request"},"typeName":{"id":156,"nodeType":"UserDefinedTypeName","pathNode":{"id":155,"name":"Request","nodeType":"IdentifierPath","referencedDeclaration":25,"src":"2733:7:0"},"referencedDeclaration":25,"src":"2733:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_storage_ptr","typeString":"struct Chainlink.Request"}},"visibility":"internal"},{"constant":false,"id":159,"mutability":"mutable","name":"key","nameLocation":"2772:3:0","nodeType":"VariableDeclaration","scope":181,"src":"2758:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":158,"name":"string","nodeType":"ElementaryTypeName","src":"2758:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":161,"mutability":"mutable","name":"value","nameLocation":"2788:5:0","nodeType":"VariableDeclaration","scope":181,"src":"2781:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":160,"name":"int256","nodeType":"ElementaryTypeName","src":"2781:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2727:70:0"},"returnParameters":{"id":163,"nodeType":"ParameterList","parameters":[],"src":"2812:0:0"},"scope":268,"src":"2712:168:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":208,"nodeType":"Block","src":"3189:69:0","statements":[{"expression":{"arguments":[{"id":197,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"3217:3:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"expression":{"id":192,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":185,"src":"3195:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"id":195,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":24,"src":"3195:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":196,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"encodeString","nodeType":"MemberAccess","referencedDeclaration":2128,"src":"3195:21:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1204_memory_ptr_$_t_string_memory_ptr_$returns$__$bound_to$_t_struct$_buffer_$1204_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,string memory) pure"}},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3195:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":199,"nodeType":"ExpressionStatement","src":"3195:26:0"},{"expression":{"arguments":[{"id":205,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"3247:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":200,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":185,"src":"3227:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"id":203,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":24,"src":"3227:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":204,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"encodeUInt","nodeType":"MemberAccess","referencedDeclaration":1938,"src":"3227:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1204_memory_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_buffer_$1204_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,uint256) pure"}},"id":206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3227:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":207,"nodeType":"ExpressionStatement","src":"3227:26:0"}]},"documentation":{"id":182,"nodeType":"StructuredDocumentation","src":"2884:200:0","text":" @notice Adds a uint256 value to the request with a given key name\n @param self The initialized request\n @param key The name of the key\n @param value The uint256 value to add"},"id":209,"implemented":true,"kind":"function","modifiers":[],"name":"addUint","nameLocation":"3096:7:0","nodeType":"FunctionDefinition","parameters":{"id":190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":185,"mutability":"mutable","name":"self","nameLocation":"3124:4:0","nodeType":"VariableDeclaration","scope":209,"src":"3109:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request"},"typeName":{"id":184,"nodeType":"UserDefinedTypeName","pathNode":{"id":183,"name":"Request","nodeType":"IdentifierPath","referencedDeclaration":25,"src":"3109:7:0"},"referencedDeclaration":25,"src":"3109:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_storage_ptr","typeString":"struct Chainlink.Request"}},"visibility":"internal"},{"constant":false,"id":187,"mutability":"mutable","name":"key","nameLocation":"3148:3:0","nodeType":"VariableDeclaration","scope":209,"src":"3134:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":186,"name":"string","nodeType":"ElementaryTypeName","src":"3134:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":189,"mutability":"mutable","name":"value","nameLocation":"3165:5:0","nodeType":"VariableDeclaration","scope":209,"src":"3157:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":188,"name":"uint256","nodeType":"ElementaryTypeName","src":"3157:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3103:71:0"},"returnParameters":{"id":191,"nodeType":"ParameterList","parameters":[],"src":"3189:0:0"},"scope":268,"src":"3087:171:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":266,"nodeType":"Block","src":"3597:188:0","statements":[{"expression":{"arguments":[{"id":226,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":215,"src":"3625:3:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"expression":{"id":221,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":213,"src":"3603:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"id":224,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":24,"src":"3603:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":225,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"encodeString","nodeType":"MemberAccess","referencedDeclaration":2128,"src":"3603:21:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1204_memory_ptr_$_t_string_memory_ptr_$returns$__$bound_to$_t_struct$_buffer_$1204_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,string memory) pure"}},"id":227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3603:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":228,"nodeType":"ExpressionStatement","src":"3603:26:0"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":229,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":213,"src":"3635:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"id":232,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":24,"src":"3635:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":233,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"startArray","nodeType":"MemberAccess","referencedDeclaration":2140,"src":"3635:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1204_memory_ptr_$returns$__$bound_to$_t_struct$_buffer_$1204_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory) pure"}},"id":234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3635:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":235,"nodeType":"ExpressionStatement","src":"3635:21:0"},{"body":{"id":257,"nodeType":"Block","src":"3706:47:0","statements":[{"expression":{"arguments":[{"baseExpression":{"id":252,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":218,"src":"3736:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":254,"indexExpression":{"id":253,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"3743:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3736:9:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"expression":{"id":247,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":213,"src":"3714:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"id":250,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":24,"src":"3714:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":251,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"encodeString","nodeType":"MemberAccess","referencedDeclaration":2128,"src":"3714:21:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1204_memory_ptr_$_t_string_memory_ptr_$returns$__$bound_to$_t_struct$_buffer_$1204_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,string memory) pure"}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3714:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":256,"nodeType":"ExpressionStatement","src":"3714:32:0"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":240,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"3682:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":241,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":218,"src":"3686:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3686:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3682:17:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":258,"initializationExpression":{"assignments":[237],"declarations":[{"constant":false,"id":237,"mutability":"mutable","name":"i","nameLocation":"3675:1:0","nodeType":"VariableDeclaration","scope":258,"src":"3667:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":236,"name":"uint256","nodeType":"ElementaryTypeName","src":"3667:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":239,"initialValue":{"hexValue":"30","id":238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3679:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3667:13:0"},"loopExpression":{"expression":{"id":245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3701:3:0","subExpression":{"id":244,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"3701:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":246,"nodeType":"ExpressionStatement","src":"3701:3:0"},"nodeType":"ForStatement","src":"3662:91:0"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":259,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":213,"src":"3758:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"id":262,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":24,"src":"3758:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":263,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"endSequence","nodeType":"MemberAccess","referencedDeclaration":2164,"src":"3758:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1204_memory_ptr_$returns$__$bound_to$_t_struct$_buffer_$1204_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory) pure"}},"id":264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3758:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":265,"nodeType":"ExpressionStatement","src":"3758:22:0"}]},"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"3262:214:0","text":" @notice Adds an array of strings to the request with a given key name\n @param self The initialized request\n @param key The name of the key\n @param values The array of string values to add"},"id":267,"implemented":true,"kind":"function","modifiers":[],"name":"addStringArray","nameLocation":"3488:14:0","nodeType":"FunctionDefinition","parameters":{"id":219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":213,"mutability":"mutable","name":"self","nameLocation":"3523:4:0","nodeType":"VariableDeclaration","scope":267,"src":"3508:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request"},"typeName":{"id":212,"nodeType":"UserDefinedTypeName","pathNode":{"id":211,"name":"Request","nodeType":"IdentifierPath","referencedDeclaration":25,"src":"3508:7:0"},"referencedDeclaration":25,"src":"3508:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_storage_ptr","typeString":"struct Chainlink.Request"}},"visibility":"internal"},{"constant":false,"id":215,"mutability":"mutable","name":"key","nameLocation":"3547:3:0","nodeType":"VariableDeclaration","scope":267,"src":"3533:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":214,"name":"string","nodeType":"ElementaryTypeName","src":"3533:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":218,"mutability":"mutable","name":"values","nameLocation":"3572:6:0","nodeType":"VariableDeclaration","scope":267,"src":"3556:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":216,"name":"string","nodeType":"ElementaryTypeName","src":"3556:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":217,"nodeType":"ArrayTypeName","src":"3556:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"3502:80:0"},"returnParameters":{"id":220,"nodeType":"ParameterList","parameters":[],"src":"3597:0:0"},"scope":268,"src":"3479:306:0","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":269,"src":"293:3494:0","usedErrors":[]}],"src":"32:3756:0"},"id":0},"@chainlink/contracts/src/v0.8/ChainlinkClient.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/ChainlinkClient.sol","exportedSymbols":{"BufferChainlink":[1718],"CBORChainlink":[2165],"Chainlink":[268],"ChainlinkClient":[861],"ChainlinkRequestInterface":[894],"ENSInterface":[974],"ENSResolver_Chainlink":[2175],"LinkTokenInterface":[1069],"OperatorInterface":[1149],"OracleInterface":[1188],"PointerInterface":[1196]},"id":862,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":270,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:1"},{"absolutePath":"@chainlink/contracts/src/v0.8/Chainlink.sol","file":"./Chainlink.sol","id":271,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":862,"sourceUnit":269,"src":"57:25:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/ENSInterface.sol","file":"./interfaces/ENSInterface.sol","id":272,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":862,"sourceUnit":975,"src":"83:39:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol","file":"./interfaces/LinkTokenInterface.sol","id":273,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":862,"sourceUnit":1070,"src":"123:45:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/ChainlinkRequestInterface.sol","file":"./interfaces/ChainlinkRequestInterface.sol","id":274,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":862,"sourceUnit":895,"src":"169:52:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/OperatorInterface.sol","file":"./interfaces/OperatorInterface.sol","id":275,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":862,"sourceUnit":1150,"src":"222:44:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/PointerInterface.sol","file":"./interfaces/PointerInterface.sol","id":276,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":862,"sourceUnit":1197,"src":"267:43:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/vendor/ENSResolver.sol","file":"./vendor/ENSResolver.sol","id":278,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":862,"sourceUnit":2176,"src":"311:78:1","symbolAliases":[{"foreign":{"id":277,"name":"ENSResolver","nodeType":"Identifier","overloadedDeclarations":[],"src":"319:11:1","typeDescriptions":{}},"local":"ENSResolver_Chainlink","nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":279,"nodeType":"StructuredDocumentation","src":"391:157:1","text":" @title The ChainlinkClient contract\n @notice Contract writers can inherit this contract in order to create requests for the\n Chainlink network"},"fullyImplemented":true,"id":861,"linearizedBaseContracts":[861],"name":"ChainlinkClient","nameLocation":"567:15:1","nodeType":"ContractDefinition","nodes":[{"id":283,"libraryName":{"id":280,"name":"Chainlink","nodeType":"IdentifierPath","referencedDeclaration":268,"src":"593:9:1"},"nodeType":"UsingForDirective","src":"587:38:1","typeName":{"id":282,"nodeType":"UserDefinedTypeName","pathNode":{"id":281,"name":"Chainlink.Request","nodeType":"IdentifierPath","referencedDeclaration":25,"src":"607:17:1"},"referencedDeclaration":25,"src":"607:17:1","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_storage_ptr","typeString":"struct Chainlink.Request"}}},{"constant":true,"id":288,"mutability":"constant","name":"LINK_DIVISIBILITY","nameLocation":"655:17:1","nodeType":"VariableDeclaration","scope":861,"src":"629:52:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":284,"name":"uint256","nodeType":"ElementaryTypeName","src":"629:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":287,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"675:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"679:2:1","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"675:6:1","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"visibility":"internal"},{"constant":true,"id":291,"mutability":"constant","name":"AMOUNT_OVERRIDE","nameLocation":"710:15:1","nodeType":"VariableDeclaration","scope":861,"src":"685:44:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":289,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"728:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"private"},{"constant":true,"id":297,"mutability":"constant","name":"SENDER_OVERRIDE","nameLocation":"758:15:1","nodeType":"VariableDeclaration","scope":861,"src":"733:53:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":292,"name":"address","nodeType":"ElementaryTypeName","src":"733:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"hexValue":"30","id":295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"784:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"776:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":293,"name":"address","nodeType":"ElementaryTypeName","src":"776:7:1","typeDescriptions":{}}},"id":296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"776:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":true,"id":300,"mutability":"constant","name":"ORACLE_ARGS_VERSION","nameLocation":"815:19:1","nodeType":"VariableDeclaration","scope":861,"src":"790:48:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":298,"name":"uint256","nodeType":"ElementaryTypeName","src":"790:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"837:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":303,"mutability":"constant","name":"OPERATOR_ARGS_VERSION","nameLocation":"867:21:1","nodeType":"VariableDeclaration","scope":861,"src":"842:50:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":301,"name":"uint256","nodeType":"ElementaryTypeName","src":"842:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"891:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":true,"id":308,"mutability":"constant","name":"ENS_TOKEN_SUBNAME","nameLocation":"921:17:1","nodeType":"VariableDeclaration","scope":861,"src":"896:62:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":304,"name":"bytes32","nodeType":"ElementaryTypeName","src":"896:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"6c696e6b","id":306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"951:6:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_90430203e2d9ce04f00738d355173358b054545ecb52218de9c6fb01cbd9aeaf","typeString":"literal_string \"link\""},"value":"link"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_90430203e2d9ce04f00738d355173358b054545ecb52218de9c6fb01cbd9aeaf","typeString":"literal_string \"link\""}],"id":305,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"941:9:1","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"941:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":true,"id":313,"mutability":"constant","name":"ENS_ORACLE_SUBNAME","nameLocation":"987:18:1","nodeType":"VariableDeclaration","scope":861,"src":"962:65:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":309,"name":"bytes32","nodeType":"ElementaryTypeName","src":"962:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"6f7261636c65","id":311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1018:8:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_89cbf5af14e0328a3cd3a734f92c3832d729d431da79b7873a62cbeebd37beb6","typeString":"literal_string \"oracle\""},"value":"oracle"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_89cbf5af14e0328a3cd3a734f92c3832d729d431da79b7873a62cbeebd37beb6","typeString":"literal_string \"oracle\""}],"id":310,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1008:9:1","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1008:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":true,"id":316,"mutability":"constant","name":"LINK_TOKEN_POINTER","nameLocation":"1056:18:1","nodeType":"VariableDeclaration","scope":861,"src":"1031:88:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":314,"name":"address","nodeType":"ElementaryTypeName","src":"1031:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307843383962443445313633324433413433434230334141416435323632636265343033384263353731","id":315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1077:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xC89bD4E1632D3A43CB03AAAd5262cbe4038Bc571"},"visibility":"private"},{"constant":false,"id":319,"mutability":"mutable","name":"s_ens","nameLocation":"1145:5:1","nodeType":"VariableDeclaration","scope":861,"src":"1124:26:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ENSInterface_$974","typeString":"contract ENSInterface"},"typeName":{"id":318,"nodeType":"UserDefinedTypeName","pathNode":{"id":317,"name":"ENSInterface","nodeType":"IdentifierPath","referencedDeclaration":974,"src":"1124:12:1"},"referencedDeclaration":974,"src":"1124:12:1","typeDescriptions":{"typeIdentifier":"t_contract$_ENSInterface_$974","typeString":"contract ENSInterface"}},"visibility":"private"},{"constant":false,"id":321,"mutability":"mutable","name":"s_ensNode","nameLocation":"1170:9:1","nodeType":"VariableDeclaration","scope":861,"src":"1154:25:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1154:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":324,"mutability":"mutable","name":"s_link","nameLocation":"1210:6:1","nodeType":"VariableDeclaration","scope":861,"src":"1183:33:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$1069","typeString":"contract LinkTokenInterface"},"typeName":{"id":323,"nodeType":"UserDefinedTypeName","pathNode":{"id":322,"name":"LinkTokenInterface","nodeType":"IdentifierPath","referencedDeclaration":1069,"src":"1183:18:1"},"referencedDeclaration":1069,"src":"1183:18:1","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$1069","typeString":"contract LinkTokenInterface"}},"visibility":"private"},{"constant":false,"id":327,"mutability":"mutable","name":"s_oracle","nameLocation":"1246:8:1","nodeType":"VariableDeclaration","scope":861,"src":"1220:34:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_OperatorInterface_$1149","typeString":"contract OperatorInterface"},"typeName":{"id":326,"nodeType":"UserDefinedTypeName","pathNode":{"id":325,"name":"OperatorInterface","nodeType":"IdentifierPath","referencedDeclaration":1149,"src":"1220:17:1"},"referencedDeclaration":1149,"src":"1220:17:1","typeDescriptions":{"typeIdentifier":"t_contract$_OperatorInterface_$1149","typeString":"contract OperatorInterface"}},"visibility":"private"},{"constant":false,"id":330,"mutability":"mutable","name":"s_requestCount","nameLocation":"1274:14:1","nodeType":"VariableDeclaration","scope":861,"src":"1258:34:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":328,"name":"uint256","nodeType":"ElementaryTypeName","src":"1258:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1291:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":false,"id":334,"mutability":"mutable","name":"s_pendingRequests","nameLocation":"1332:17:1","nodeType":"VariableDeclaration","scope":861,"src":"1296:53:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"},"typeName":{"id":333,"keyType":{"id":331,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1304:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1296:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"},"valueType":{"id":332,"name":"address","nodeType":"ElementaryTypeName","src":"1315:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"anonymous":false,"id":338,"name":"ChainlinkRequested","nameLocation":"1360:18:1","nodeType":"EventDefinition","parameters":{"id":337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":336,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"1395:2:1","nodeType":"VariableDeclaration","scope":338,"src":"1379:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":335,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1379:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1378:20:1"},"src":"1354:45:1"},{"anonymous":false,"id":342,"name":"ChainlinkFulfilled","nameLocation":"1408:18:1","nodeType":"EventDefinition","parameters":{"id":341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":340,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"1443:2:1","nodeType":"VariableDeclaration","scope":342,"src":"1427:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":339,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1427:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1426:20:1"},"src":"1402:45:1"},{"anonymous":false,"id":346,"name":"ChainlinkCancelled","nameLocation":"1456:18:1","nodeType":"EventDefinition","parameters":{"id":345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":344,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"1491:2:1","nodeType":"VariableDeclaration","scope":346,"src":"1475:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":343,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1475:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1474:20:1"},"src":"1450:45:1"},{"body":{"id":372,"nodeType":"Block","src":"2018:115:1","statements":[{"assignments":[363],"declarations":[{"constant":false,"id":363,"mutability":"mutable","name":"req","nameLocation":"2049:3:1","nodeType":"VariableDeclaration","scope":372,"src":"2024:28:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request"},"typeName":{"id":362,"nodeType":"UserDefinedTypeName","pathNode":{"id":361,"name":"Chainlink.Request","nodeType":"IdentifierPath","referencedDeclaration":25,"src":"2024:17:1"},"referencedDeclaration":25,"src":"2024:17:1","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_storage_ptr","typeString":"struct Chainlink.Request"}},"visibility":"internal"}],"id":364,"nodeType":"VariableDeclarationStatement","src":"2024:28:1"},{"expression":{"arguments":[{"id":367,"name":"specId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"2080:6:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":368,"name":"callbackAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"2088:12:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":369,"name":"callbackFunctionSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":353,"src":"2102:25:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":365,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":363,"src":"2065:3:1","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"id":366,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"initialize","nodeType":"MemberAccess","referencedDeclaration":70,"src":"2065:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Request_$25_memory_ptr_$_t_bytes32_$_t_address_$_t_bytes4_$returns$_t_struct$_Request_$25_memory_ptr_$bound_to$_t_struct$_Request_$25_memory_ptr_$","typeString":"function (struct Chainlink.Request memory,bytes32,address,bytes4) pure returns (struct Chainlink.Request memory)"}},"id":370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2065:63:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"functionReturnParameters":358,"id":371,"nodeType":"Return","src":"2058:70:1"}]},"documentation":{"id":347,"nodeType":"StructuredDocumentation","src":"1499:348:1","text":" @notice Creates a request that can hold additional parameters\n @param specId The Job Specification ID that the request will be created for\n @param callbackAddr address to operate the callback on\n @param callbackFunctionSignature function signature to use for the callback\n @return A Chainlink Request struct in memory"},"id":373,"implemented":true,"kind":"function","modifiers":[],"name":"buildChainlinkRequest","nameLocation":"1859:21:1","nodeType":"FunctionDefinition","parameters":{"id":354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"specId","nameLocation":"1894:6:1","nodeType":"VariableDeclaration","scope":373,"src":"1886:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":348,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1886:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":351,"mutability":"mutable","name":"callbackAddr","nameLocation":"1914:12:1","nodeType":"VariableDeclaration","scope":373,"src":"1906:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":350,"name":"address","nodeType":"ElementaryTypeName","src":"1906:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":353,"mutability":"mutable","name":"callbackFunctionSignature","nameLocation":"1939:25:1","nodeType":"VariableDeclaration","scope":373,"src":"1932:32:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":352,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1932:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1880:88:1"},"returnParameters":{"id":358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":357,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":373,"src":"1992:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request"},"typeName":{"id":356,"nodeType":"UserDefinedTypeName","pathNode":{"id":355,"name":"Chainlink.Request","nodeType":"IdentifierPath","referencedDeclaration":25,"src":"1992:17:1"},"referencedDeclaration":25,"src":"1992:17:1","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_storage_ptr","typeString":"struct Chainlink.Request"}},"visibility":"internal"}],"src":"1991:26:1"},"scope":861,"src":"1850:283:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":400,"nodeType":"Block","src":"2571:116:1","statements":[{"assignments":[388],"declarations":[{"constant":false,"id":388,"mutability":"mutable","name":"req","nameLocation":"2602:3:1","nodeType":"VariableDeclaration","scope":400,"src":"2577:28:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request"},"typeName":{"id":387,"nodeType":"UserDefinedTypeName","pathNode":{"id":386,"name":"Chainlink.Request","nodeType":"IdentifierPath","referencedDeclaration":25,"src":"2577:17:1"},"referencedDeclaration":25,"src":"2577:17:1","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_storage_ptr","typeString":"struct Chainlink.Request"}},"visibility":"internal"}],"id":389,"nodeType":"VariableDeclarationStatement","src":"2577:28:1"},{"expression":{"arguments":[{"id":392,"name":"specId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"2633:6:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":395,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2649:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_ChainlinkClient_$861","typeString":"contract ChainlinkClient"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ChainlinkClient_$861","typeString":"contract ChainlinkClient"}],"id":394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2641:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":393,"name":"address","nodeType":"ElementaryTypeName","src":"2641:7:1","typeDescriptions":{}}},"id":396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2641:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":397,"name":"callbackFunctionSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"2656:25:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":390,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"2618:3:1","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"id":391,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"initialize","nodeType":"MemberAccess","referencedDeclaration":70,"src":"2618:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Request_$25_memory_ptr_$_t_bytes32_$_t_address_$_t_bytes4_$returns$_t_struct$_Request_$25_memory_ptr_$bound_to$_t_struct$_Request_$25_memory_ptr_$","typeString":"function (struct Chainlink.Request memory,bytes32,address,bytes4) pure returns (struct Chainlink.Request memory)"}},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2618:64:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"functionReturnParameters":383,"id":399,"nodeType":"Return","src":"2611:71:1"}]},"documentation":{"id":374,"nodeType":"StructuredDocumentation","src":"2137:288:1","text":" @notice Creates a request that can hold additional parameters\n @param specId The Job Specification ID that the request will be created for\n @param callbackFunctionSignature function signature to use for the callback\n @return A Chainlink Request struct in memory"},"id":401,"implemented":true,"kind":"function","modifiers":[],"name":"buildOperatorRequest","nameLocation":"2437:20:1","nodeType":"FunctionDefinition","parameters":{"id":379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":376,"mutability":"mutable","name":"specId","nameLocation":"2466:6:1","nodeType":"VariableDeclaration","scope":401,"src":"2458:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":375,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2458:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":378,"mutability":"mutable","name":"callbackFunctionSignature","nameLocation":"2481:25:1","nodeType":"VariableDeclaration","scope":401,"src":"2474:32:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":377,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2474:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2457:50:1"},"returnParameters":{"id":383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":382,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":401,"src":"2543:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request"},"typeName":{"id":381,"nodeType":"UserDefinedTypeName","pathNode":{"id":380,"name":"Chainlink.Request","nodeType":"IdentifierPath","referencedDeclaration":25,"src":"2543:17:1"},"referencedDeclaration":25,"src":"2543:17:1","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_storage_ptr","typeString":"struct Chainlink.Request"}},"visibility":"internal"}],"src":"2542:26:1"},"scope":861,"src":"2428:259:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":421,"nodeType":"Block","src":"3096:73:1","statements":[{"expression":{"arguments":[{"arguments":[{"id":415,"name":"s_oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"3140:8:1","typeDescriptions":{"typeIdentifier":"t_contract$_OperatorInterface_$1149","typeString":"contract OperatorInterface"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_OperatorInterface_$1149","typeString":"contract OperatorInterface"}],"id":414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3132:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":413,"name":"address","nodeType":"ElementaryTypeName","src":"3132:7:1","typeDescriptions":{}}},"id":416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3132:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":417,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":405,"src":"3151:3:1","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},{"id":418,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"3156:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":412,"name":"sendChainlinkRequestTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"3109:22:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_struct$_Request_$25_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (address,struct Chainlink.Request memory,uint256) returns (bytes32)"}},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3109:55:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":411,"id":420,"nodeType":"Return","src":"3102:62:1"}]},"documentation":{"id":402,"nodeType":"StructuredDocumentation","src":"2691:298:1","text":" @notice Creates a Chainlink request to the stored oracle address\n @dev Calls `chainlinkRequestTo` with the stored oracle address\n @param req The initialized Chainlink Request\n @param payment The amount of LINK to send for the request\n @return requestId The request ID"},"id":422,"implemented":true,"kind":"function","modifiers":[],"name":"sendChainlinkRequest","nameLocation":"3001:20:1","nodeType":"FunctionDefinition","parameters":{"id":408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":405,"mutability":"mutable","name":"req","nameLocation":"3047:3:1","nodeType":"VariableDeclaration","scope":422,"src":"3022:28:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request"},"typeName":{"id":404,"nodeType":"UserDefinedTypeName","pathNode":{"id":403,"name":"Chainlink.Request","nodeType":"IdentifierPath","referencedDeclaration":25,"src":"3022:17:1"},"referencedDeclaration":25,"src":"3022:17:1","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_storage_ptr","typeString":"struct Chainlink.Request"}},"visibility":"internal"},{"constant":false,"id":407,"mutability":"mutable","name":"payment","nameLocation":"3060:7:1","nodeType":"VariableDeclaration","scope":422,"src":"3052:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":406,"name":"uint256","nodeType":"ElementaryTypeName","src":"3052:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3021:47:1"},"returnParameters":{"id":411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":410,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":422,"src":"3087:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":409,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3087:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3086:9:1"},"scope":861,"src":"2992:177:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":476,"nodeType":"Block","src":"3842:601:1","statements":[{"assignments":[436],"declarations":[{"constant":false,"id":436,"mutability":"mutable","name":"nonce","nameLocation":"3856:5:1","nodeType":"VariableDeclaration","scope":476,"src":"3848:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":435,"name":"uint256","nodeType":"ElementaryTypeName","src":"3848:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":438,"initialValue":{"id":437,"name":"s_requestCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"3864:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3848:30:1"},{"expression":{"id":443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":439,"name":"s_requestCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"3884:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":440,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"3901:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3909:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3901:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3884:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":444,"nodeType":"ExpressionStatement","src":"3884:26:1"},{"assignments":[446],"declarations":[{"constant":false,"id":446,"mutability":"mutable","name":"encodedRequest","nameLocation":"3929:14:1","nodeType":"VariableDeclaration","scope":476,"src":"3916:27:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":445,"name":"bytes","nodeType":"ElementaryTypeName","src":"3916:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":468,"initialValue":{"arguments":[{"expression":{"expression":{"id":449,"name":"ChainlinkRequestInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"3976:25:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ChainlinkRequestInterface_$894_$","typeString":"type(contract ChainlinkRequestInterface)"}},"id":450,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"oracleRequest","nodeType":"MemberAccess","referencedDeclaration":882,"src":"3976:39:1","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$_t_address_$_t_bytes4_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$__$","typeString":"function ChainlinkRequestInterface.oracleRequest(address,uint256,bytes32,address,bytes4,uint256,uint256,bytes calldata)"}},"id":451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"3976:48:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":452,"name":"SENDER_OVERRIDE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"4032:15:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":453,"name":"AMOUNT_OVERRIDE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"4140:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":454,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"4245:3:1","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"id":455,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":15,"src":"4245:6:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":458,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4267:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_ChainlinkClient_$861","typeString":"contract ChainlinkClient"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ChainlinkClient_$861","typeString":"contract ChainlinkClient"}],"id":457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4259:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":456,"name":"address","nodeType":"ElementaryTypeName","src":"4259:7:1","typeDescriptions":{}}},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4259:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":460,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"4280:3:1","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"id":461,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"callbackFunctionId","nodeType":"MemberAccess","referencedDeclaration":19,"src":"4280:22:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":462,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"4310:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":463,"name":"ORACLE_ARGS_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"4323:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":464,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"4350:3:1","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"id":465,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":24,"src":"4350:7:1","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":466,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1201,"src":"4350:11:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":447,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3946:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":448,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"3946:22:1","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3946:421:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3916:451:1"},{"expression":{"arguments":[{"id":470,"name":"oracleAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":425,"src":"4392:13:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":471,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"4407:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":472,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"4414:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":473,"name":"encodedRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"4423:14:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":469,"name":"_rawRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"4380:11:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (address,uint256,uint256,bytes memory) returns (bytes32)"}},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4380:58:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":434,"id":475,"nodeType":"Return","src":"4373:65:1"}]},"documentation":{"id":423,"nodeType":"StructuredDocumentation","src":"3173:511:1","text":" @notice Creates a Chainlink request to the specified oracle address\n @dev Generates and stores a request ID, increments the local nonce, and uses `transferAndCall` to\n send LINK which creates a request on the target oracle contract.\n Emits ChainlinkRequested event.\n @param oracleAddress The address of the oracle for the request\n @param req The initialized Chainlink Request\n @param payment The amount of LINK to send for the request\n @return requestId The request ID"},"id":477,"implemented":true,"kind":"function","modifiers":[],"name":"sendChainlinkRequestTo","nameLocation":"3696:22:1","nodeType":"FunctionDefinition","parameters":{"id":431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":425,"mutability":"mutable","name":"oracleAddress","nameLocation":"3732:13:1","nodeType":"VariableDeclaration","scope":477,"src":"3724:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":424,"name":"address","nodeType":"ElementaryTypeName","src":"3724:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":428,"mutability":"mutable","name":"req","nameLocation":"3776:3:1","nodeType":"VariableDeclaration","scope":477,"src":"3751:28:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request"},"typeName":{"id":427,"nodeType":"UserDefinedTypeName","pathNode":{"id":426,"name":"Chainlink.Request","nodeType":"IdentifierPath","referencedDeclaration":25,"src":"3751:17:1"},"referencedDeclaration":25,"src":"3751:17:1","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_storage_ptr","typeString":"struct Chainlink.Request"}},"visibility":"internal"},{"constant":false,"id":430,"mutability":"mutable","name":"payment","nameLocation":"3793:7:1","nodeType":"VariableDeclaration","scope":477,"src":"3785:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":429,"name":"uint256","nodeType":"ElementaryTypeName","src":"3785:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3718:86:1"},"returnParameters":{"id":434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":433,"mutability":"mutable","name":"requestId","nameLocation":"3831:9:1","nodeType":"VariableDeclaration","scope":477,"src":"3823:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":432,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3823:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3822:19:1"},"scope":861,"src":"3687:756:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":497,"nodeType":"Block","src":"4907:72:1","statements":[{"expression":{"arguments":[{"arguments":[{"id":491,"name":"s_oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"4950:8:1","typeDescriptions":{"typeIdentifier":"t_contract$_OperatorInterface_$1149","typeString":"contract OperatorInterface"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_OperatorInterface_$1149","typeString":"contract OperatorInterface"}],"id":490,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4942:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":489,"name":"address","nodeType":"ElementaryTypeName","src":"4942:7:1","typeDescriptions":{}}},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4942:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":493,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"4961:3:1","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},{"id":494,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"4966:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":488,"name":"sendOperatorRequestTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"4920:21:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_struct$_Request_$25_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (address,struct Chainlink.Request memory,uint256) returns (bytes32)"}},"id":495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4920:54:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":487,"id":496,"nodeType":"Return","src":"4913:61:1"}]},"documentation":{"id":478,"nodeType":"StructuredDocumentation","src":"4447:354:1","text":" @notice Creates a Chainlink request to the stored oracle address\n @dev This function supports multi-word response\n @dev Calls `sendOperatorRequestTo` with the stored oracle address\n @param req The initialized Chainlink Request\n @param payment The amount of LINK to send for the request\n @return requestId The request ID"},"id":498,"implemented":true,"kind":"function","modifiers":[],"name":"sendOperatorRequest","nameLocation":"4813:19:1","nodeType":"FunctionDefinition","parameters":{"id":484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":481,"mutability":"mutable","name":"req","nameLocation":"4858:3:1","nodeType":"VariableDeclaration","scope":498,"src":"4833:28:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request"},"typeName":{"id":480,"nodeType":"UserDefinedTypeName","pathNode":{"id":479,"name":"Chainlink.Request","nodeType":"IdentifierPath","referencedDeclaration":25,"src":"4833:17:1"},"referencedDeclaration":25,"src":"4833:17:1","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_storage_ptr","typeString":"struct Chainlink.Request"}},"visibility":"internal"},{"constant":false,"id":483,"mutability":"mutable","name":"payment","nameLocation":"4871:7:1","nodeType":"VariableDeclaration","scope":498,"src":"4863:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":482,"name":"uint256","nodeType":"ElementaryTypeName","src":"4863:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4832:47:1"},"returnParameters":{"id":487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":486,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":498,"src":"4898:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":485,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4898:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4897:9:1"},"scope":861,"src":"4804:175:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":548,"nodeType":"Block","src":"5704:576:1","statements":[{"assignments":[512],"declarations":[{"constant":false,"id":512,"mutability":"mutable","name":"nonce","nameLocation":"5718:5:1","nodeType":"VariableDeclaration","scope":548,"src":"5710:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":511,"name":"uint256","nodeType":"ElementaryTypeName","src":"5710:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":514,"initialValue":{"id":513,"name":"s_requestCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"5726:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5710:30:1"},{"expression":{"id":519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":515,"name":"s_requestCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"5746:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":516,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"5763:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5771:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5763:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5746:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":520,"nodeType":"ExpressionStatement","src":"5746:26:1"},{"assignments":[522],"declarations":[{"constant":false,"id":522,"mutability":"mutable","name":"encodedRequest","nameLocation":"5791:14:1","nodeType":"VariableDeclaration","scope":548,"src":"5778:27:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":521,"name":"bytes","nodeType":"ElementaryTypeName","src":"5778:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":540,"initialValue":{"arguments":[{"expression":{"expression":{"id":525,"name":"OperatorInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"5838:17:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_OperatorInterface_$1149_$","typeString":"type(contract OperatorInterface)"}},"id":526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"operatorRequest","nodeType":"MemberAccess","referencedDeclaration":1094,"src":"5838:33:1","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$_t_bytes4_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$__$","typeString":"function OperatorInterface.operatorRequest(address,uint256,bytes32,bytes4,uint256,uint256,bytes calldata)"}},"id":527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"5838:42:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":528,"name":"SENDER_OVERRIDE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"5888:15:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":529,"name":"AMOUNT_OVERRIDE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"5996:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":530,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":504,"src":"6101:3:1","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"id":531,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":15,"src":"6101:6:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":532,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":504,"src":"6115:3:1","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"id":533,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"callbackFunctionId","nodeType":"MemberAccess","referencedDeclaration":19,"src":"6115:22:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":534,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"6145:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":535,"name":"OPERATOR_ARGS_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"6158:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":536,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":504,"src":"6187:3:1","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"id":537,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":24,"src":"6187:7:1","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":538,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1201,"src":"6187:11:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":523,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5808:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"5808:22:1","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5808:396:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5778:426:1"},{"expression":{"arguments":[{"id":542,"name":"oracleAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"6229:13:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":543,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"6244:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":544,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"6251:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":545,"name":"encodedRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"6260:14:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":541,"name":"_rawRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"6217:11:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (address,uint256,uint256,bytes memory) returns (bytes32)"}},"id":546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6217:58:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":510,"id":547,"nodeType":"Return","src":"6210:65:1"}]},"documentation":{"id":499,"nodeType":"StructuredDocumentation","src":"4983:564:1","text":" @notice Creates a Chainlink request to the specified oracle address\n @dev This function supports multi-word response\n @dev Generates and stores a request ID, increments the local nonce, and uses `transferAndCall` to\n send LINK which creates a request on the target oracle contract.\n Emits ChainlinkRequested event.\n @param oracleAddress The address of the oracle for the request\n @param req The initialized Chainlink Request\n @param payment The amount of LINK to send for the request\n @return requestId The request ID"},"id":549,"implemented":true,"kind":"function","modifiers":[],"name":"sendOperatorRequestTo","nameLocation":"5559:21:1","nodeType":"FunctionDefinition","parameters":{"id":507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":501,"mutability":"mutable","name":"oracleAddress","nameLocation":"5594:13:1","nodeType":"VariableDeclaration","scope":549,"src":"5586:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":500,"name":"address","nodeType":"ElementaryTypeName","src":"5586:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":504,"mutability":"mutable","name":"req","nameLocation":"5638:3:1","nodeType":"VariableDeclaration","scope":549,"src":"5613:28:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request"},"typeName":{"id":503,"nodeType":"UserDefinedTypeName","pathNode":{"id":502,"name":"Chainlink.Request","nodeType":"IdentifierPath","referencedDeclaration":25,"src":"5613:17:1"},"referencedDeclaration":25,"src":"5613:17:1","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_storage_ptr","typeString":"struct Chainlink.Request"}},"visibility":"internal"},{"constant":false,"id":506,"mutability":"mutable","name":"payment","nameLocation":"5655:7:1","nodeType":"VariableDeclaration","scope":549,"src":"5647:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":505,"name":"uint256","nodeType":"ElementaryTypeName","src":"5647:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5580:86:1"},"returnParameters":{"id":510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":509,"mutability":"mutable","name":"requestId","nameLocation":"5693:9:1","nodeType":"VariableDeclaration","scope":549,"src":"5685:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":508,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5685:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5684:19:1"},"scope":861,"src":"5550:730:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":593,"nodeType":"Block","src":"6790:269:1","statements":[{"expression":{"id":571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":563,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"6796:9:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":567,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6835:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_ChainlinkClient_$861","typeString":"contract ChainlinkClient"}},{"id":568,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"6841:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ChainlinkClient_$861","typeString":"contract ChainlinkClient"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":565,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6818:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"6818:16:1","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6818:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":564,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6808:9:1","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6808:40:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6796:52:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":572,"nodeType":"ExpressionStatement","src":"6796:52:1"},{"expression":{"id":577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":573,"name":"s_pendingRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"6854:17:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":575,"indexExpression":{"id":574,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"6872:9:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6854:28:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":576,"name":"oracleAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"6885:13:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6854:44:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":578,"nodeType":"ExpressionStatement","src":"6854:44:1"},{"eventCall":{"arguments":[{"id":580,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"6928:9:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":579,"name":"ChainlinkRequested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"6909:18:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$returns$__$","typeString":"function (bytes32)"}},"id":581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6909:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":582,"nodeType":"EmitStatement","src":"6904:34:1"},{"expression":{"arguments":[{"arguments":[{"id":586,"name":"oracleAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"6975:13:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":587,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":556,"src":"6990:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":588,"name":"encodedRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"6999:14:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":584,"name":"s_link","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"6952:6:1","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$1069","typeString":"contract LinkTokenInterface"}},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferAndCall","nodeType":"MemberAccess","referencedDeclaration":1057,"src":"6952:22:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6952:62:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"756e61626c6520746f207472616e73666572416e6443616c6c20746f206f7261636c65","id":590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7016:37:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b3efd608222b424e5ed8427d7f6a272069793e6a1f5930c93db5c7960c3ce96","typeString":"literal_string \"unable to transferAndCall to oracle\""},"value":"unable to transferAndCall to oracle"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b3efd608222b424e5ed8427d7f6a272069793e6a1f5930c93db5c7960c3ce96","typeString":"literal_string \"unable to transferAndCall to oracle\""}],"id":583,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6944:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6944:110:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":592,"nodeType":"ExpressionStatement","src":"6944:110:1"}]},"documentation":{"id":550,"nodeType":"StructuredDocumentation","src":"6284:342:1","text":" @notice Make a request to an oracle\n @param oracleAddress The address of the oracle for the request\n @param nonce used to generate the request ID\n @param payment The amount of LINK to send for the request\n @param encodedRequest data encoded for request type specific format\n @return requestId The request ID"},"id":594,"implemented":true,"kind":"function","modifiers":[],"name":"_rawRequest","nameLocation":"6638:11:1","nodeType":"FunctionDefinition","parameters":{"id":559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":552,"mutability":"mutable","name":"oracleAddress","nameLocation":"6663:13:1","nodeType":"VariableDeclaration","scope":594,"src":"6655:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":551,"name":"address","nodeType":"ElementaryTypeName","src":"6655:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":554,"mutability":"mutable","name":"nonce","nameLocation":"6690:5:1","nodeType":"VariableDeclaration","scope":594,"src":"6682:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":553,"name":"uint256","nodeType":"ElementaryTypeName","src":"6682:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":556,"mutability":"mutable","name":"payment","nameLocation":"6709:7:1","nodeType":"VariableDeclaration","scope":594,"src":"6701:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":555,"name":"uint256","nodeType":"ElementaryTypeName","src":"6701:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":558,"mutability":"mutable","name":"encodedRequest","nameLocation":"6735:14:1","nodeType":"VariableDeclaration","scope":594,"src":"6722:27:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":557,"name":"bytes","nodeType":"ElementaryTypeName","src":"6722:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6649:104:1"},"returnParameters":{"id":562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":561,"mutability":"mutable","name":"requestId","nameLocation":"6779:9:1","nodeType":"VariableDeclaration","scope":594,"src":"6771:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":560,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6771:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6770:19:1"},"scope":861,"src":"6629:430:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":633,"nodeType":"Block","src":"7713:250:1","statements":[{"assignments":[608],"declarations":[{"constant":false,"id":608,"mutability":"mutable","name":"requested","nameLocation":"7737:9:1","nodeType":"VariableDeclaration","scope":633,"src":"7719:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_OperatorInterface_$1149","typeString":"contract OperatorInterface"},"typeName":{"id":607,"nodeType":"UserDefinedTypeName","pathNode":{"id":606,"name":"OperatorInterface","nodeType":"IdentifierPath","referencedDeclaration":1149,"src":"7719:17:1"},"referencedDeclaration":1149,"src":"7719:17:1","typeDescriptions":{"typeIdentifier":"t_contract$_OperatorInterface_$1149","typeString":"contract OperatorInterface"}},"visibility":"internal"}],"id":614,"initialValue":{"arguments":[{"baseExpression":{"id":610,"name":"s_pendingRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"7767:17:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":612,"indexExpression":{"id":611,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"7785:9:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7767:28:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":609,"name":"OperatorInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"7749:17:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_OperatorInterface_$1149_$","typeString":"type(contract OperatorInterface)"}},"id":613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7749:47:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_OperatorInterface_$1149","typeString":"contract OperatorInterface"}},"nodeType":"VariableDeclarationStatement","src":"7719:77:1"},{"expression":{"id":618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"7802:35:1","subExpression":{"baseExpression":{"id":615,"name":"s_pendingRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"7809:17:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":617,"indexExpression":{"id":616,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"7827:9:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7809:28:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":619,"nodeType":"ExpressionStatement","src":"7802:35:1"},{"eventCall":{"arguments":[{"id":621,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"7867:9:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":620,"name":"ChainlinkCancelled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"7848:18:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$returns$__$","typeString":"function (bytes32)"}},"id":622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7848:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":623,"nodeType":"EmitStatement","src":"7843:34:1"},{"expression":{"arguments":[{"id":627,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"7913:9:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":628,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":599,"src":"7924:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":629,"name":"callbackFunc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":601,"src":"7933:12:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":630,"name":"expiration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"7947:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":624,"name":"requested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"7883:9:1","typeDescriptions":{"typeIdentifier":"t_contract$_OperatorInterface_$1149","typeString":"contract OperatorInterface"}},"id":626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"cancelOracleRequest","nodeType":"MemberAccess","referencedDeclaration":893,"src":"7883:29:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_uint256_$_t_bytes4_$_t_uint256_$returns$__$","typeString":"function (bytes32,uint256,bytes4,uint256) external"}},"id":631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7883:75:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":632,"nodeType":"ExpressionStatement","src":"7883:75:1"}]},"documentation":{"id":595,"nodeType":"StructuredDocumentation","src":"7063:509:1","text":" @notice Allows a request to be cancelled if it has not been fulfilled\n @dev Requires keeping track of the expiration value emitted from the oracle contract.\n Deletes the request from the `pendingRequests` mapping.\n Emits ChainlinkCancelled event.\n @param requestId The request ID\n @param payment The amount of LINK sent for the request\n @param callbackFunc The callback function specified for the request\n @param expiration The time of the expiration for the request"},"id":634,"implemented":true,"kind":"function","modifiers":[],"name":"cancelChainlinkRequest","nameLocation":"7584:22:1","nodeType":"FunctionDefinition","parameters":{"id":604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":597,"mutability":"mutable","name":"requestId","nameLocation":"7620:9:1","nodeType":"VariableDeclaration","scope":634,"src":"7612:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":596,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7612:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":599,"mutability":"mutable","name":"payment","nameLocation":"7643:7:1","nodeType":"VariableDeclaration","scope":634,"src":"7635:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":598,"name":"uint256","nodeType":"ElementaryTypeName","src":"7635:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":601,"mutability":"mutable","name":"callbackFunc","nameLocation":"7663:12:1","nodeType":"VariableDeclaration","scope":634,"src":"7656:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":600,"name":"bytes4","nodeType":"ElementaryTypeName","src":"7656:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":603,"mutability":"mutable","name":"expiration","nameLocation":"7689:10:1","nodeType":"VariableDeclaration","scope":634,"src":"7681:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":602,"name":"uint256","nodeType":"ElementaryTypeName","src":"7681:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7606:97:1"},"returnParameters":{"id":605,"nodeType":"ParameterList","parameters":[],"src":"7713:0:1"},"scope":861,"src":"7575:388:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":642,"nodeType":"Block","src":"8238:32:1","statements":[{"expression":{"id":640,"name":"s_requestCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"8251:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":639,"id":641,"nodeType":"Return","src":"8244:21:1"}]},"documentation":{"id":635,"nodeType":"StructuredDocumentation","src":"7967:205:1","text":" @notice the next request count to be used in generating a nonce\n @dev starts at 1 in order to ensure consistent gas cost\n @return returns the next request count to be used in a nonce"},"id":643,"implemented":true,"kind":"function","modifiers":[],"name":"getNextRequestCount","nameLocation":"8184:19:1","nodeType":"FunctionDefinition","parameters":{"id":636,"nodeType":"ParameterList","parameters":[],"src":"8203:2:1"},"returnParameters":{"id":639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":638,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":643,"src":"8229:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":637,"name":"uint256","nodeType":"ElementaryTypeName","src":"8229:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8228:9:1"},"scope":861,"src":"8175:95:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":655,"nodeType":"Block","src":"8451:54:1","statements":[{"expression":{"id":653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":649,"name":"s_oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"8457:8:1","typeDescriptions":{"typeIdentifier":"t_contract$_OperatorInterface_$1149","typeString":"contract OperatorInterface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":651,"name":"oracleAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"8486:13:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":650,"name":"OperatorInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"8468:17:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_OperatorInterface_$1149_$","typeString":"type(contract OperatorInterface)"}},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8468:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_OperatorInterface_$1149","typeString":"contract OperatorInterface"}},"src":"8457:43:1","typeDescriptions":{"typeIdentifier":"t_contract$_OperatorInterface_$1149","typeString":"contract OperatorInterface"}},"id":654,"nodeType":"ExpressionStatement","src":"8457:43:1"}]},"documentation":{"id":644,"nodeType":"StructuredDocumentation","src":"8274:114:1","text":" @notice Sets the stored oracle address\n @param oracleAddress The address of the oracle contract"},"id":656,"implemented":true,"kind":"function","modifiers":[],"name":"setChainlinkOracle","nameLocation":"8400:18:1","nodeType":"FunctionDefinition","parameters":{"id":647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":646,"mutability":"mutable","name":"oracleAddress","nameLocation":"8427:13:1","nodeType":"VariableDeclaration","scope":656,"src":"8419:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":645,"name":"address","nodeType":"ElementaryTypeName","src":"8419:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8418:23:1"},"returnParameters":{"id":648,"nodeType":"ParameterList","parameters":[],"src":"8451:0:1"},"scope":861,"src":"8391:114:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":668,"nodeType":"Block","src":"8682:51:1","statements":[{"expression":{"id":666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":662,"name":"s_link","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"8688:6:1","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$1069","typeString":"contract LinkTokenInterface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":664,"name":"linkAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"8716:11:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":663,"name":"LinkTokenInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1069,"src":"8697:18:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LinkTokenInterface_$1069_$","typeString":"type(contract LinkTokenInterface)"}},"id":665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8697:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$1069","typeString":"contract LinkTokenInterface"}},"src":"8688:40:1","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$1069","typeString":"contract LinkTokenInterface"}},"id":667,"nodeType":"ExpressionStatement","src":"8688:40:1"}]},"documentation":{"id":657,"nodeType":"StructuredDocumentation","src":"8509:113:1","text":" @notice Sets the LINK token address\n @param linkAddress The address of the LINK token contract"},"id":669,"implemented":true,"kind":"function","modifiers":[],"name":"setChainlinkToken","nameLocation":"8634:17:1","nodeType":"FunctionDefinition","parameters":{"id":660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":659,"mutability":"mutable","name":"linkAddress","nameLocation":"8660:11:1","nodeType":"VariableDeclaration","scope":669,"src":"8652:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":658,"name":"address","nodeType":"ElementaryTypeName","src":"8652:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8651:21:1"},"returnParameters":{"id":661,"nodeType":"ParameterList","parameters":[],"src":"8682:0:1"},"scope":861,"src":"8625:108:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":681,"nodeType":"Block","src":"8900:79:1","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":675,"name":"LINK_TOKEN_POINTER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":316,"src":"8941:18:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":674,"name":"PointerInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"8924:16:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PointerInterface_$1196_$","typeString":"type(contract PointerInterface)"}},"id":676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8924:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_PointerInterface_$1196","typeString":"contract PointerInterface"}},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAddress","nodeType":"MemberAccess","referencedDeclaration":1195,"src":"8924:47:1","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8924:49:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":673,"name":"setChainlinkToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"8906:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8906:68:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":680,"nodeType":"ExpressionStatement","src":"8906:68:1"}]},"documentation":{"id":670,"nodeType":"StructuredDocumentation","src":"8737:116:1","text":" @notice Sets the Chainlink token address for the public\n network as given by the Pointer contract"},"id":682,"implemented":true,"kind":"function","modifiers":[],"name":"setPublicChainlinkToken","nameLocation":"8865:23:1","nodeType":"FunctionDefinition","parameters":{"id":671,"nodeType":"ParameterList","parameters":[],"src":"8888:2:1"},"returnParameters":{"id":672,"nodeType":"ParameterList","parameters":[],"src":"8900:0:1"},"scope":861,"src":"8856:123:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":693,"nodeType":"Block","src":"9163:33:1","statements":[{"expression":{"arguments":[{"id":690,"name":"s_link","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"9184:6:1","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$1069","typeString":"contract LinkTokenInterface"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LinkTokenInterface_$1069","typeString":"contract LinkTokenInterface"}],"id":689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9176:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":688,"name":"address","nodeType":"ElementaryTypeName","src":"9176:7:1","typeDescriptions":{}}},"id":691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9176:15:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":687,"id":692,"nodeType":"Return","src":"9169:22:1"}]},"documentation":{"id":683,"nodeType":"StructuredDocumentation","src":"8983:112:1","text":" @notice Retrieves the stored address of the LINK token\n @return The address of the LINK token"},"id":694,"implemented":true,"kind":"function","modifiers":[],"name":"chainlinkTokenAddress","nameLocation":"9107:21:1","nodeType":"FunctionDefinition","parameters":{"id":684,"nodeType":"ParameterList","parameters":[],"src":"9128:2:1"},"returnParameters":{"id":687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":686,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":694,"src":"9154:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":685,"name":"address","nodeType":"ElementaryTypeName","src":"9154:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9153:9:1"},"scope":861,"src":"9098:98:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":705,"nodeType":"Block","src":"9391:35:1","statements":[{"expression":{"arguments":[{"id":702,"name":"s_oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"9412:8:1","typeDescriptions":{"typeIdentifier":"t_contract$_OperatorInterface_$1149","typeString":"contract OperatorInterface"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_OperatorInterface_$1149","typeString":"contract OperatorInterface"}],"id":701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9404:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":700,"name":"address","nodeType":"ElementaryTypeName","src":"9404:7:1","typeDescriptions":{}}},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9404:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":699,"id":704,"nodeType":"Return","src":"9397:24:1"}]},"documentation":{"id":695,"nodeType":"StructuredDocumentation","src":"9200:122:1","text":" @notice Retrieves the stored address of the oracle contract\n @return The address of the oracle contract"},"id":706,"implemented":true,"kind":"function","modifiers":[],"name":"chainlinkOracleAddress","nameLocation":"9334:22:1","nodeType":"FunctionDefinition","parameters":{"id":696,"nodeType":"ParameterList","parameters":[],"src":"9356:2:1"},"returnParameters":{"id":699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":698,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":706,"src":"9382:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":697,"name":"address","nodeType":"ElementaryTypeName","src":"9382:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9381:9:1"},"scope":861,"src":"9325:101:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":723,"nodeType":"Block","src":"9819:55:1","statements":[{"expression":{"id":721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":717,"name":"s_pendingRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"9825:17:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":719,"indexExpression":{"id":718,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"9843:9:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9825:28:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":720,"name":"oracleAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"9856:13:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9825:44:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":722,"nodeType":"ExpressionStatement","src":"9825:44:1"}]},"documentation":{"id":707,"nodeType":"StructuredDocumentation","src":"9430:269:1","text":" @notice Allows for a request which was created on another contract to be fulfilled\n on this contract\n @param oracleAddress The address of the oracle contract that will fulfill the request\n @param requestId The request ID used for the response"},"id":724,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":714,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"9808:9:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":715,"kind":"modifierInvocation","modifierName":{"id":713,"name":"notPendingRequest","nodeType":"IdentifierPath","referencedDeclaration":860,"src":"9790:17:1"},"nodeType":"ModifierInvocation","src":"9790:28:1"}],"name":"addChainlinkExternalRequest","nameLocation":"9711:27:1","nodeType":"FunctionDefinition","parameters":{"id":712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":709,"mutability":"mutable","name":"oracleAddress","nameLocation":"9747:13:1","nodeType":"VariableDeclaration","scope":724,"src":"9739:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":708,"name":"address","nodeType":"ElementaryTypeName","src":"9739:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":711,"mutability":"mutable","name":"requestId","nameLocation":"9770:9:1","nodeType":"VariableDeclaration","scope":724,"src":"9762:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":710,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9762:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9738:42:1"},"returnParameters":{"id":716,"nodeType":"ParameterList","parameters":[],"src":"9819:0:1"},"scope":861,"src":"9702:172:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":772,"nodeType":"Block","src":"10207:326:1","statements":[{"expression":{"id":736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":732,"name":"s_ens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"10213:5:1","typeDescriptions":{"typeIdentifier":"t_contract$_ENSInterface_$974","typeString":"contract ENSInterface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":734,"name":"ensAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"10234:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":733,"name":"ENSInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"10221:12:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ENSInterface_$974_$","typeString":"type(contract ENSInterface)"}},"id":735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10221:24:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ENSInterface_$974","typeString":"contract ENSInterface"}},"src":"10213:32:1","typeDescriptions":{"typeIdentifier":"t_contract$_ENSInterface_$974","typeString":"contract ENSInterface"}},"id":737,"nodeType":"ExpressionStatement","src":"10213:32:1"},{"expression":{"id":740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":738,"name":"s_ensNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"10251:9:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":739,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"10263:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"10251:16:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":741,"nodeType":"ExpressionStatement","src":"10251:16:1"},{"assignments":[743],"declarations":[{"constant":false,"id":743,"mutability":"mutable","name":"linkSubnode","nameLocation":"10281:11:1","nodeType":"VariableDeclaration","scope":772,"src":"10273:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":742,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10273:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":751,"initialValue":{"arguments":[{"arguments":[{"id":747,"name":"s_ensNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"10322:9:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":748,"name":"ENS_TOKEN_SUBNAME","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"10333:17:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":745,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"10305:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"10305:16:1","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10305:46:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":744,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10295:9:1","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10295:57:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"10273:79:1"},{"assignments":[754],"declarations":[{"constant":false,"id":754,"mutability":"mutable","name":"resolver","nameLocation":"10380:8:1","nodeType":"VariableDeclaration","scope":772,"src":"10358:30:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ENSResolver_$2175","typeString":"contract ENSResolver"},"typeName":{"id":753,"nodeType":"UserDefinedTypeName","pathNode":{"id":752,"name":"ENSResolver_Chainlink","nodeType":"IdentifierPath","referencedDeclaration":2175,"src":"10358:21:1"},"referencedDeclaration":2175,"src":"10358:21:1","typeDescriptions":{"typeIdentifier":"t_contract$_ENSResolver_$2175","typeString":"contract ENSResolver"}},"visibility":"internal"}],"id":761,"initialValue":{"arguments":[{"arguments":[{"id":758,"name":"linkSubnode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"10428:11:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":756,"name":"s_ens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"10413:5:1","typeDescriptions":{"typeIdentifier":"t_contract$_ENSInterface_$974","typeString":"contract ENSInterface"}},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"resolver","nodeType":"MemberAccess","referencedDeclaration":966,"src":"10413:14:1","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view external returns (address)"}},"id":759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10413:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":755,"name":"ENSResolver_Chainlink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"10391:21:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ENSResolver_$2175_$","typeString":"type(contract ENSResolver)"}},"id":760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10391:50:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ENSResolver_$2175","typeString":"contract ENSResolver"}},"nodeType":"VariableDeclarationStatement","src":"10358:83:1"},{"expression":{"arguments":[{"arguments":[{"id":765,"name":"linkSubnode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"10479:11:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":763,"name":"resolver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"10465:8:1","typeDescriptions":{"typeIdentifier":"t_contract$_ENSResolver_$2175","typeString":"contract ENSResolver"}},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"addr","nodeType":"MemberAccess","referencedDeclaration":2174,"src":"10465:13:1","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view external returns (address)"}},"id":766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10465:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":762,"name":"setChainlinkToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"10447:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10447:45:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":768,"nodeType":"ExpressionStatement","src":"10447:45:1"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":769,"name":"updateChainlinkOracleWithENS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"10498:28:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10498:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":771,"nodeType":"ExpressionStatement","src":"10498:30:1"}]},"documentation":{"id":725,"nodeType":"StructuredDocumentation","src":"9878:254:1","text":" @notice Sets the stored oracle and LINK token contracts with the addresses resolved by ENS\n @dev Accounts for subnodes having different resolvers\n @param ensAddress The address of the ENS contract\n @param node The ENS node hash"},"id":773,"implemented":true,"kind":"function","modifiers":[],"name":"useChainlinkWithENS","nameLocation":"10144:19:1","nodeType":"FunctionDefinition","parameters":{"id":730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":727,"mutability":"mutable","name":"ensAddress","nameLocation":"10172:10:1","nodeType":"VariableDeclaration","scope":773,"src":"10164:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":726,"name":"address","nodeType":"ElementaryTypeName","src":"10164:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":729,"mutability":"mutable","name":"node","nameLocation":"10192:4:1","nodeType":"VariableDeclaration","scope":773,"src":"10184:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":728,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10184:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"10163:34:1"},"returnParameters":{"id":731,"nodeType":"ParameterList","parameters":[],"src":"10207:0:1"},"scope":861,"src":"10135:398:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":804,"nodeType":"Block","src":"10776:238:1","statements":[{"assignments":[778],"declarations":[{"constant":false,"id":778,"mutability":"mutable","name":"oracleSubnode","nameLocation":"10790:13:1","nodeType":"VariableDeclaration","scope":804,"src":"10782:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":777,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10782:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":786,"initialValue":{"arguments":[{"arguments":[{"id":782,"name":"s_ensNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"10833:9:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":783,"name":"ENS_ORACLE_SUBNAME","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"10844:18:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":780,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"10816:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"10816:16:1","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10816:47:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":779,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10806:9:1","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10806:58:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"10782:82:1"},{"assignments":[789],"declarations":[{"constant":false,"id":789,"mutability":"mutable","name":"resolver","nameLocation":"10892:8:1","nodeType":"VariableDeclaration","scope":804,"src":"10870:30:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ENSResolver_$2175","typeString":"contract ENSResolver"},"typeName":{"id":788,"nodeType":"UserDefinedTypeName","pathNode":{"id":787,"name":"ENSResolver_Chainlink","nodeType":"IdentifierPath","referencedDeclaration":2175,"src":"10870:21:1"},"referencedDeclaration":2175,"src":"10870:21:1","typeDescriptions":{"typeIdentifier":"t_contract$_ENSResolver_$2175","typeString":"contract ENSResolver"}},"visibility":"internal"}],"id":796,"initialValue":{"arguments":[{"arguments":[{"id":793,"name":"oracleSubnode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"10940:13:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":791,"name":"s_ens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"10925:5:1","typeDescriptions":{"typeIdentifier":"t_contract$_ENSInterface_$974","typeString":"contract ENSInterface"}},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"resolver","nodeType":"MemberAccess","referencedDeclaration":966,"src":"10925:14:1","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view external returns (address)"}},"id":794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10925:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":790,"name":"ENSResolver_Chainlink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"10903:21:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ENSResolver_$2175_$","typeString":"type(contract ENSResolver)"}},"id":795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10903:52:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ENSResolver_$2175","typeString":"contract ENSResolver"}},"nodeType":"VariableDeclarationStatement","src":"10870:85:1"},{"expression":{"arguments":[{"arguments":[{"id":800,"name":"oracleSubnode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"10994:13:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":798,"name":"resolver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"10980:8:1","typeDescriptions":{"typeIdentifier":"t_contract$_ENSResolver_$2175","typeString":"contract ENSResolver"}},"id":799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"addr","nodeType":"MemberAccess","referencedDeclaration":2174,"src":"10980:13:1","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view external returns (address)"}},"id":801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10980:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":797,"name":"setChainlinkOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"10961:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10961:48:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":803,"nodeType":"ExpressionStatement","src":"10961:48:1"}]},"documentation":{"id":774,"nodeType":"StructuredDocumentation","src":"10537:187:1","text":" @notice Sets the stored oracle contract with the address resolved by ENS\n @dev This may be called on its own as long as `useChainlinkWithENS` has been called previously"},"id":805,"implemented":true,"kind":"function","modifiers":[],"name":"updateChainlinkOracleWithENS","nameLocation":"10736:28:1","nodeType":"FunctionDefinition","parameters":{"id":775,"nodeType":"ParameterList","parameters":[],"src":"10764:2:1"},"returnParameters":{"id":776,"nodeType":"ParameterList","parameters":[],"src":"10776:0:1"},"scope":861,"src":"10727:287:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":814,"nodeType":"Block","src":"11402:6:1","statements":[]},"documentation":{"id":806,"nodeType":"StructuredDocumentation","src":"11018:223:1","text":" @notice Ensures that the fulfillment is valid for this contract\n @dev Use if the contract developer prefers methods instead of modifiers for validation\n @param requestId The request ID for fulfillment"},"id":815,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":811,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"11342:9:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":812,"kind":"modifierInvocation","modifierName":{"id":810,"name":"recordChainlinkFulfillment","nodeType":"IdentifierPath","referencedDeclaration":841,"src":"11315:26:1"},"nodeType":"ModifierInvocation","src":"11315:37:1"}],"name":"validateChainlinkCallback","nameLocation":"11253:25:1","nodeType":"FunctionDefinition","parameters":{"id":809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":808,"mutability":"mutable","name":"requestId","nameLocation":"11287:9:1","nodeType":"VariableDeclaration","scope":815,"src":"11279:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":807,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11279:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"11278:19:1"},"returnParameters":{"id":813,"nodeType":"ParameterList","parameters":[],"src":"11402:0:1"},"scope":861,"src":"11244:164:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":840,"nodeType":"Block","src":"11635:194:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":821,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11649:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"11649:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"baseExpression":{"id":823,"name":"s_pendingRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"11663:17:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":825,"indexExpression":{"id":824,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"11681:9:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11663:28:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11649:42:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536f75726365206d75737420626520746865206f7261636c65206f66207468652072657175657374","id":827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11693:42:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_d5cafe2745dab6273b51cca76f8727c7664db74ede49af049a5b5ca6a3b184e4","typeString":"literal_string \"Source must be the oracle of the request\""},"value":"Source must be the oracle of the request"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d5cafe2745dab6273b51cca76f8727c7664db74ede49af049a5b5ca6a3b184e4","typeString":"literal_string \"Source must be the oracle of the request\""}],"id":820,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11641:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11641:95:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":829,"nodeType":"ExpressionStatement","src":"11641:95:1"},{"expression":{"id":833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"11742:35:1","subExpression":{"baseExpression":{"id":830,"name":"s_pendingRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"11749:17:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":832,"indexExpression":{"id":831,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"11767:9:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11749:28:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":834,"nodeType":"ExpressionStatement","src":"11742:35:1"},{"eventCall":{"arguments":[{"id":836,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"11807:9:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":835,"name":"ChainlinkFulfilled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"11788:18:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$returns$__$","typeString":"function (bytes32)"}},"id":837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11788:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":838,"nodeType":"EmitStatement","src":"11783:34:1"},{"id":839,"nodeType":"PlaceholderStatement","src":"11823:1:1"}]},"documentation":{"id":816,"nodeType":"StructuredDocumentation","src":"11412:165:1","text":" @dev Reverts if the sender is not the oracle of the request.\n Emits ChainlinkFulfilled event.\n @param requestId The request ID for fulfillment"},"id":841,"name":"recordChainlinkFulfillment","nameLocation":"11589:26:1","nodeType":"ModifierDefinition","parameters":{"id":819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":818,"mutability":"mutable","name":"requestId","nameLocation":"11624:9:1","nodeType":"VariableDeclaration","scope":841,"src":"11616:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":817,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11616:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"11615:19:1"},"src":"11580:249:1","virtual":false,"visibility":"internal"},{"body":{"id":859,"nodeType":"Block","src":"11996:99:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":847,"name":"s_pendingRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"12010:17:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":849,"indexExpression":{"id":848,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"12028:9:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12010:28:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12050:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12042:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":850,"name":"address","nodeType":"ElementaryTypeName","src":"12042:7:1","typeDescriptions":{}}},"id":853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12042:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12010:42:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265717565737420697320616c72656164792070656e64696e67","id":855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12054:28:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_efa688de2ca2442cd2f76ca864c7a15bdcb24ac77ed3de01d4cf9f6afd58c7aa","typeString":"literal_string \"Request is already pending\""},"value":"Request is already pending"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_efa688de2ca2442cd2f76ca864c7a15bdcb24ac77ed3de01d4cf9f6afd58c7aa","typeString":"literal_string \"Request is already pending\""}],"id":846,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12002:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12002:81:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":857,"nodeType":"ExpressionStatement","src":"12002:81:1"},{"id":858,"nodeType":"PlaceholderStatement","src":"12089:1:1"}]},"documentation":{"id":842,"nodeType":"StructuredDocumentation","src":"11833:114:1","text":" @dev Reverts if the request is already pending\n @param requestId The request ID for fulfillment"},"id":860,"name":"notPendingRequest","nameLocation":"11959:17:1","nodeType":"ModifierDefinition","parameters":{"id":845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":844,"mutability":"mutable","name":"requestId","nameLocation":"11985:9:1","nodeType":"VariableDeclaration","scope":860,"src":"11977:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":843,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11977:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"11976:19:1"},"src":"11950:145:1","virtual":false,"visibility":"internal"}],"scope":862,"src":"549:11548:1","usedErrors":[]}],"src":"32:12066:1"},"id":1},"@chainlink/contracts/src/v0.8/interfaces/ChainlinkRequestInterface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/ChainlinkRequestInterface.sol","exportedSymbols":{"ChainlinkRequestInterface":[894]},"id":895,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":863,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:2"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":894,"linearizedBaseContracts":[894],"name":"ChainlinkRequestInterface","nameLocation":"67:25:2","nodeType":"ContractDefinition","nodes":[{"functionSelector":"40429946","id":882,"implemented":false,"kind":"function","modifiers":[],"name":"oracleRequest","nameLocation":"106:13:2","nodeType":"FunctionDefinition","parameters":{"id":880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":865,"mutability":"mutable","name":"sender","nameLocation":"133:6:2","nodeType":"VariableDeclaration","scope":882,"src":"125:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":864,"name":"address","nodeType":"ElementaryTypeName","src":"125:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":867,"mutability":"mutable","name":"requestPrice","nameLocation":"153:12:2","nodeType":"VariableDeclaration","scope":882,"src":"145:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":866,"name":"uint256","nodeType":"ElementaryTypeName","src":"145:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":869,"mutability":"mutable","name":"serviceAgreementID","nameLocation":"179:18:2","nodeType":"VariableDeclaration","scope":882,"src":"171:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":868,"name":"bytes32","nodeType":"ElementaryTypeName","src":"171:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":871,"mutability":"mutable","name":"callbackAddress","nameLocation":"211:15:2","nodeType":"VariableDeclaration","scope":882,"src":"203:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":870,"name":"address","nodeType":"ElementaryTypeName","src":"203:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":873,"mutability":"mutable","name":"callbackFunctionId","nameLocation":"239:18:2","nodeType":"VariableDeclaration","scope":882,"src":"232:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":872,"name":"bytes4","nodeType":"ElementaryTypeName","src":"232:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":875,"mutability":"mutable","name":"nonce","nameLocation":"271:5:2","nodeType":"VariableDeclaration","scope":882,"src":"263:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":874,"name":"uint256","nodeType":"ElementaryTypeName","src":"263:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":877,"mutability":"mutable","name":"dataVersion","nameLocation":"290:11:2","nodeType":"VariableDeclaration","scope":882,"src":"282:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":876,"name":"uint256","nodeType":"ElementaryTypeName","src":"282:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":879,"mutability":"mutable","name":"data","nameLocation":"322:4:2","nodeType":"VariableDeclaration","scope":882,"src":"307:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":878,"name":"bytes","nodeType":"ElementaryTypeName","src":"307:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"119:211:2"},"returnParameters":{"id":881,"nodeType":"ParameterList","parameters":[],"src":"339:0:2"},"scope":894,"src":"97:243:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"6ee4d553","id":893,"implemented":false,"kind":"function","modifiers":[],"name":"cancelOracleRequest","nameLocation":"353:19:2","nodeType":"FunctionDefinition","parameters":{"id":891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":884,"mutability":"mutable","name":"requestId","nameLocation":"386:9:2","nodeType":"VariableDeclaration","scope":893,"src":"378:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":883,"name":"bytes32","nodeType":"ElementaryTypeName","src":"378:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":886,"mutability":"mutable","name":"payment","nameLocation":"409:7:2","nodeType":"VariableDeclaration","scope":893,"src":"401:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":885,"name":"uint256","nodeType":"ElementaryTypeName","src":"401:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":888,"mutability":"mutable","name":"callbackFunctionId","nameLocation":"429:18:2","nodeType":"VariableDeclaration","scope":893,"src":"422:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":887,"name":"bytes4","nodeType":"ElementaryTypeName","src":"422:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":890,"mutability":"mutable","name":"expiration","nameLocation":"461:10:2","nodeType":"VariableDeclaration","scope":893,"src":"453:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":889,"name":"uint256","nodeType":"ElementaryTypeName","src":"453:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"372:103:2"},"returnParameters":{"id":892,"nodeType":"ParameterList","parameters":[],"src":"484:0:2"},"scope":894,"src":"344:141:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":895,"src":"57:430:2","usedErrors":[]}],"src":"32:456:2"},"id":2},"@chainlink/contracts/src/v0.8/interfaces/ENSInterface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/ENSInterface.sol","exportedSymbols":{"ENSInterface":[974]},"id":975,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":896,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:3"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":974,"linearizedBaseContracts":[974],"name":"ENSInterface","nameLocation":"67:12:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"id":904,"name":"NewOwner","nameLocation":"161:8:3","nodeType":"EventDefinition","parameters":{"id":903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":898,"indexed":true,"mutability":"mutable","name":"node","nameLocation":"186:4:3","nodeType":"VariableDeclaration","scope":904,"src":"170:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":897,"name":"bytes32","nodeType":"ElementaryTypeName","src":"170:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":900,"indexed":true,"mutability":"mutable","name":"label","nameLocation":"208:5:3","nodeType":"VariableDeclaration","scope":904,"src":"192:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":899,"name":"bytes32","nodeType":"ElementaryTypeName","src":"192:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":902,"indexed":false,"mutability":"mutable","name":"owner","nameLocation":"223:5:3","nodeType":"VariableDeclaration","scope":904,"src":"215:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":901,"name":"address","nodeType":"ElementaryTypeName","src":"215:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"169:60:3"},"src":"155:75:3"},{"anonymous":false,"id":910,"name":"Transfer","nameLocation":"315:8:3","nodeType":"EventDefinition","parameters":{"id":909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":906,"indexed":true,"mutability":"mutable","name":"node","nameLocation":"340:4:3","nodeType":"VariableDeclaration","scope":910,"src":"324:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":905,"name":"bytes32","nodeType":"ElementaryTypeName","src":"324:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":908,"indexed":false,"mutability":"mutable","name":"owner","nameLocation":"354:5:3","nodeType":"VariableDeclaration","scope":910,"src":"346:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":907,"name":"address","nodeType":"ElementaryTypeName","src":"346:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"323:37:3"},"src":"309:52:3"},{"anonymous":false,"id":916,"name":"NewResolver","nameLocation":"421:11:3","nodeType":"EventDefinition","parameters":{"id":915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":912,"indexed":true,"mutability":"mutable","name":"node","nameLocation":"449:4:3","nodeType":"VariableDeclaration","scope":916,"src":"433:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":911,"name":"bytes32","nodeType":"ElementaryTypeName","src":"433:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":914,"indexed":false,"mutability":"mutable","name":"resolver","nameLocation":"463:8:3","nodeType":"VariableDeclaration","scope":916,"src":"455:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":913,"name":"address","nodeType":"ElementaryTypeName","src":"455:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"432:40:3"},"src":"415:58:3"},{"anonymous":false,"id":922,"name":"NewTTL","nameLocation":"526:6:3","nodeType":"EventDefinition","parameters":{"id":921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":918,"indexed":true,"mutability":"mutable","name":"node","nameLocation":"549:4:3","nodeType":"VariableDeclaration","scope":922,"src":"533:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":917,"name":"bytes32","nodeType":"ElementaryTypeName","src":"533:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":920,"indexed":false,"mutability":"mutable","name":"ttl","nameLocation":"562:3:3","nodeType":"VariableDeclaration","scope":922,"src":"555:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":919,"name":"uint64","nodeType":"ElementaryTypeName","src":"555:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"532:34:3"},"src":"520:47:3"},{"functionSelector":"06ab5923","id":931,"implemented":false,"kind":"function","modifiers":[],"name":"setSubnodeOwner","nameLocation":"580:15:3","nodeType":"FunctionDefinition","parameters":{"id":929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":924,"mutability":"mutable","name":"node","nameLocation":"609:4:3","nodeType":"VariableDeclaration","scope":931,"src":"601:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":923,"name":"bytes32","nodeType":"ElementaryTypeName","src":"601:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":926,"mutability":"mutable","name":"label","nameLocation":"627:5:3","nodeType":"VariableDeclaration","scope":931,"src":"619:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":925,"name":"bytes32","nodeType":"ElementaryTypeName","src":"619:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":928,"mutability":"mutable","name":"owner","nameLocation":"646:5:3","nodeType":"VariableDeclaration","scope":931,"src":"638:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":927,"name":"address","nodeType":"ElementaryTypeName","src":"638:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"595:60:3"},"returnParameters":{"id":930,"nodeType":"ParameterList","parameters":[],"src":"664:0:3"},"scope":974,"src":"571:94:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"1896f70a","id":938,"implemented":false,"kind":"function","modifiers":[],"name":"setResolver","nameLocation":"678:11:3","nodeType":"FunctionDefinition","parameters":{"id":936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":933,"mutability":"mutable","name":"node","nameLocation":"698:4:3","nodeType":"VariableDeclaration","scope":938,"src":"690:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":932,"name":"bytes32","nodeType":"ElementaryTypeName","src":"690:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":935,"mutability":"mutable","name":"resolver","nameLocation":"712:8:3","nodeType":"VariableDeclaration","scope":938,"src":"704:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":934,"name":"address","nodeType":"ElementaryTypeName","src":"704:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"689:32:3"},"returnParameters":{"id":937,"nodeType":"ParameterList","parameters":[],"src":"730:0:3"},"scope":974,"src":"669:62:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"5b0fc9c3","id":945,"implemented":false,"kind":"function","modifiers":[],"name":"setOwner","nameLocation":"744:8:3","nodeType":"FunctionDefinition","parameters":{"id":943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":940,"mutability":"mutable","name":"node","nameLocation":"761:4:3","nodeType":"VariableDeclaration","scope":945,"src":"753:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":939,"name":"bytes32","nodeType":"ElementaryTypeName","src":"753:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":942,"mutability":"mutable","name":"owner","nameLocation":"775:5:3","nodeType":"VariableDeclaration","scope":945,"src":"767:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":941,"name":"address","nodeType":"ElementaryTypeName","src":"767:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:29:3"},"returnParameters":{"id":944,"nodeType":"ParameterList","parameters":[],"src":"790:0:3"},"scope":974,"src":"735:56:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"14ab9038","id":952,"implemented":false,"kind":"function","modifiers":[],"name":"setTTL","nameLocation":"804:6:3","nodeType":"FunctionDefinition","parameters":{"id":950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":947,"mutability":"mutable","name":"node","nameLocation":"819:4:3","nodeType":"VariableDeclaration","scope":952,"src":"811:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":946,"name":"bytes32","nodeType":"ElementaryTypeName","src":"811:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":949,"mutability":"mutable","name":"ttl","nameLocation":"832:3:3","nodeType":"VariableDeclaration","scope":952,"src":"825:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":948,"name":"uint64","nodeType":"ElementaryTypeName","src":"825:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"810:26:3"},"returnParameters":{"id":951,"nodeType":"ParameterList","parameters":[],"src":"845:0:3"},"scope":974,"src":"795:51:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"02571be3","id":959,"implemented":false,"kind":"function","modifiers":[],"name":"owner","nameLocation":"859:5:3","nodeType":"FunctionDefinition","parameters":{"id":955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":954,"mutability":"mutable","name":"node","nameLocation":"873:4:3","nodeType":"VariableDeclaration","scope":959,"src":"865:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":953,"name":"bytes32","nodeType":"ElementaryTypeName","src":"865:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"864:14:3"},"returnParameters":{"id":958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":957,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":959,"src":"902:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":956,"name":"address","nodeType":"ElementaryTypeName","src":"902:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"901:9:3"},"scope":974,"src":"850:61:3","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"0178b8bf","id":966,"implemented":false,"kind":"function","modifiers":[],"name":"resolver","nameLocation":"924:8:3","nodeType":"FunctionDefinition","parameters":{"id":962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":961,"mutability":"mutable","name":"node","nameLocation":"941:4:3","nodeType":"VariableDeclaration","scope":966,"src":"933:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":960,"name":"bytes32","nodeType":"ElementaryTypeName","src":"933:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"932:14:3"},"returnParameters":{"id":965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":964,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":966,"src":"970:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":963,"name":"address","nodeType":"ElementaryTypeName","src":"970:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"969:9:3"},"scope":974,"src":"915:64:3","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"16a25cbd","id":973,"implemented":false,"kind":"function","modifiers":[],"name":"ttl","nameLocation":"992:3:3","nodeType":"FunctionDefinition","parameters":{"id":969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":968,"mutability":"mutable","name":"node","nameLocation":"1004:4:3","nodeType":"VariableDeclaration","scope":973,"src":"996:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":967,"name":"bytes32","nodeType":"ElementaryTypeName","src":"996:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"995:14:3"},"returnParameters":{"id":972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":971,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":973,"src":"1033:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":970,"name":"uint64","nodeType":"ElementaryTypeName","src":"1033:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"1032:8:3"},"scope":974,"src":"983:58:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":975,"src":"57:986:3","usedErrors":[]}],"src":"32:1012:3"},"id":3},"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol","exportedSymbols":{"LinkTokenInterface":[1069]},"id":1070,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":976,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:4"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1069,"linearizedBaseContracts":[1069],"name":"LinkTokenInterface","nameLocation":"67:18:4","nodeType":"ContractDefinition","nodes":[{"functionSelector":"dd62ed3e","id":985,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"99:9:4","nodeType":"FunctionDefinition","parameters":{"id":981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":978,"mutability":"mutable","name":"owner","nameLocation":"117:5:4","nodeType":"VariableDeclaration","scope":985,"src":"109:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":977,"name":"address","nodeType":"ElementaryTypeName","src":"109:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":980,"mutability":"mutable","name":"spender","nameLocation":"132:7:4","nodeType":"VariableDeclaration","scope":985,"src":"124:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":979,"name":"address","nodeType":"ElementaryTypeName","src":"124:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"108:32:4"},"returnParameters":{"id":984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":983,"mutability":"mutable","name":"remaining","nameLocation":"172:9:4","nodeType":"VariableDeclaration","scope":985,"src":"164:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":982,"name":"uint256","nodeType":"ElementaryTypeName","src":"164:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"163:19:4"},"scope":1069,"src":"90:93:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"095ea7b3","id":994,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"196:7:4","nodeType":"FunctionDefinition","parameters":{"id":990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":987,"mutability":"mutable","name":"spender","nameLocation":"212:7:4","nodeType":"VariableDeclaration","scope":994,"src":"204:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":986,"name":"address","nodeType":"ElementaryTypeName","src":"204:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":989,"mutability":"mutable","name":"value","nameLocation":"229:5:4","nodeType":"VariableDeclaration","scope":994,"src":"221:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":988,"name":"uint256","nodeType":"ElementaryTypeName","src":"221:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"203:32:4"},"returnParameters":{"id":993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":992,"mutability":"mutable","name":"success","nameLocation":"259:7:4","nodeType":"VariableDeclaration","scope":994,"src":"254:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":991,"name":"bool","nodeType":"ElementaryTypeName","src":"254:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"253:14:4"},"scope":1069,"src":"187:81:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"70a08231","id":1001,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"281:9:4","nodeType":"FunctionDefinition","parameters":{"id":997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":996,"mutability":"mutable","name":"owner","nameLocation":"299:5:4","nodeType":"VariableDeclaration","scope":1001,"src":"291:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":995,"name":"address","nodeType":"ElementaryTypeName","src":"291:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"290:15:4"},"returnParameters":{"id":1000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":999,"mutability":"mutable","name":"balance","nameLocation":"337:7:4","nodeType":"VariableDeclaration","scope":1001,"src":"329:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":998,"name":"uint256","nodeType":"ElementaryTypeName","src":"329:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"328:17:4"},"scope":1069,"src":"272:74:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"313ce567","id":1006,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"359:8:4","nodeType":"FunctionDefinition","parameters":{"id":1002,"nodeType":"ParameterList","parameters":[],"src":"367:2:4"},"returnParameters":{"id":1005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1004,"mutability":"mutable","name":"decimalPlaces","nameLocation":"399:13:4","nodeType":"VariableDeclaration","scope":1006,"src":"393:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1003,"name":"uint8","nodeType":"ElementaryTypeName","src":"393:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"392:21:4"},"scope":1069,"src":"350:64:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"66188463","id":1015,"implemented":false,"kind":"function","modifiers":[],"name":"decreaseApproval","nameLocation":"427:16:4","nodeType":"FunctionDefinition","parameters":{"id":1011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1008,"mutability":"mutable","name":"spender","nameLocation":"452:7:4","nodeType":"VariableDeclaration","scope":1015,"src":"444:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1007,"name":"address","nodeType":"ElementaryTypeName","src":"444:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1010,"mutability":"mutable","name":"addedValue","nameLocation":"469:10:4","nodeType":"VariableDeclaration","scope":1015,"src":"461:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1009,"name":"uint256","nodeType":"ElementaryTypeName","src":"461:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"443:37:4"},"returnParameters":{"id":1014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1013,"mutability":"mutable","name":"success","nameLocation":"504:7:4","nodeType":"VariableDeclaration","scope":1015,"src":"499:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1012,"name":"bool","nodeType":"ElementaryTypeName","src":"499:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"498:14:4"},"scope":1069,"src":"418:95:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"d73dd623","id":1022,"implemented":false,"kind":"function","modifiers":[],"name":"increaseApproval","nameLocation":"526:16:4","nodeType":"FunctionDefinition","parameters":{"id":1020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1017,"mutability":"mutable","name":"spender","nameLocation":"551:7:4","nodeType":"VariableDeclaration","scope":1022,"src":"543:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1016,"name":"address","nodeType":"ElementaryTypeName","src":"543:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1019,"mutability":"mutable","name":"subtractedValue","nameLocation":"568:15:4","nodeType":"VariableDeclaration","scope":1022,"src":"560:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1018,"name":"uint256","nodeType":"ElementaryTypeName","src":"560:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"542:42:4"},"returnParameters":{"id":1021,"nodeType":"ParameterList","parameters":[],"src":"593:0:4"},"scope":1069,"src":"517:77:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"06fdde03","id":1027,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"607:4:4","nodeType":"FunctionDefinition","parameters":{"id":1023,"nodeType":"ParameterList","parameters":[],"src":"611:2:4"},"returnParameters":{"id":1026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1025,"mutability":"mutable","name":"tokenName","nameLocation":"651:9:4","nodeType":"VariableDeclaration","scope":1027,"src":"637:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1024,"name":"string","nodeType":"ElementaryTypeName","src":"637:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"636:25:4"},"scope":1069,"src":"598:64:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"95d89b41","id":1032,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"675:6:4","nodeType":"FunctionDefinition","parameters":{"id":1028,"nodeType":"ParameterList","parameters":[],"src":"681:2:4"},"returnParameters":{"id":1031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1030,"mutability":"mutable","name":"tokenSymbol","nameLocation":"721:11:4","nodeType":"VariableDeclaration","scope":1032,"src":"707:25:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1029,"name":"string","nodeType":"ElementaryTypeName","src":"707:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"706:27:4"},"scope":1069,"src":"666:68:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"18160ddd","id":1037,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"747:11:4","nodeType":"FunctionDefinition","parameters":{"id":1033,"nodeType":"ParameterList","parameters":[],"src":"758:2:4"},"returnParameters":{"id":1036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1035,"mutability":"mutable","name":"totalTokensIssued","nameLocation":"792:17:4","nodeType":"VariableDeclaration","scope":1037,"src":"784:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1034,"name":"uint256","nodeType":"ElementaryTypeName","src":"784:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"783:27:4"},"scope":1069,"src":"738:73:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"a9059cbb","id":1046,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"824:8:4","nodeType":"FunctionDefinition","parameters":{"id":1042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1039,"mutability":"mutable","name":"to","nameLocation":"841:2:4","nodeType":"VariableDeclaration","scope":1046,"src":"833:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1038,"name":"address","nodeType":"ElementaryTypeName","src":"833:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1041,"mutability":"mutable","name":"value","nameLocation":"853:5:4","nodeType":"VariableDeclaration","scope":1046,"src":"845:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1040,"name":"uint256","nodeType":"ElementaryTypeName","src":"845:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"832:27:4"},"returnParameters":{"id":1045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1044,"mutability":"mutable","name":"success","nameLocation":"883:7:4","nodeType":"VariableDeclaration","scope":1046,"src":"878:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1043,"name":"bool","nodeType":"ElementaryTypeName","src":"878:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"877:14:4"},"scope":1069,"src":"815:77:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"4000aea0","id":1057,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"905:15:4","nodeType":"FunctionDefinition","parameters":{"id":1053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1048,"mutability":"mutable","name":"to","nameLocation":"934:2:4","nodeType":"VariableDeclaration","scope":1057,"src":"926:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1047,"name":"address","nodeType":"ElementaryTypeName","src":"926:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1050,"mutability":"mutable","name":"value","nameLocation":"950:5:4","nodeType":"VariableDeclaration","scope":1057,"src":"942:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1049,"name":"uint256","nodeType":"ElementaryTypeName","src":"942:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1052,"mutability":"mutable","name":"data","nameLocation":"976:4:4","nodeType":"VariableDeclaration","scope":1057,"src":"961:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1051,"name":"bytes","nodeType":"ElementaryTypeName","src":"961:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"920:64:4"},"returnParameters":{"id":1056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1055,"mutability":"mutable","name":"success","nameLocation":"1008:7:4","nodeType":"VariableDeclaration","scope":1057,"src":"1003:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1054,"name":"bool","nodeType":"ElementaryTypeName","src":"1003:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1002:14:4"},"scope":1069,"src":"896:121:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"23b872dd","id":1068,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"1030:12:4","nodeType":"FunctionDefinition","parameters":{"id":1064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1059,"mutability":"mutable","name":"from","nameLocation":"1056:4:4","nodeType":"VariableDeclaration","scope":1068,"src":"1048:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1058,"name":"address","nodeType":"ElementaryTypeName","src":"1048:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1061,"mutability":"mutable","name":"to","nameLocation":"1074:2:4","nodeType":"VariableDeclaration","scope":1068,"src":"1066:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1060,"name":"address","nodeType":"ElementaryTypeName","src":"1066:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1063,"mutability":"mutable","name":"value","nameLocation":"1090:5:4","nodeType":"VariableDeclaration","scope":1068,"src":"1082:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1062,"name":"uint256","nodeType":"ElementaryTypeName","src":"1082:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:57:4"},"returnParameters":{"id":1067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1066,"mutability":"mutable","name":"success","nameLocation":"1123:7:4","nodeType":"VariableDeclaration","scope":1068,"src":"1118:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1065,"name":"bool","nodeType":"ElementaryTypeName","src":"1118:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1117:14:4"},"scope":1069,"src":"1021:111:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1070,"src":"57:1077:4","usedErrors":[]}],"src":"32:1103:4"},"id":4},"@chainlink/contracts/src/v0.8/interfaces/OperatorInterface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/OperatorInterface.sol","exportedSymbols":{"ChainlinkRequestInterface":[894],"OperatorInterface":[1149],"OracleInterface":[1188]},"id":1150,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1071,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:5"},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/OracleInterface.sol","file":"./OracleInterface.sol","id":1072,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1150,"sourceUnit":1189,"src":"57:31:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/ChainlinkRequestInterface.sol","file":"./ChainlinkRequestInterface.sol","id":1073,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1150,"sourceUnit":895,"src":"89:41:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1074,"name":"OracleInterface","nodeType":"IdentifierPath","referencedDeclaration":1188,"src":"163:15:5"},"id":1075,"nodeType":"InheritanceSpecifier","src":"163:15:5"},{"baseName":{"id":1076,"name":"ChainlinkRequestInterface","nodeType":"IdentifierPath","referencedDeclaration":894,"src":"180:25:5"},"id":1077,"nodeType":"InheritanceSpecifier","src":"180:25:5"}],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1149,"linearizedBaseContracts":[1149,894,1188],"name":"OperatorInterface","nameLocation":"142:17:5","nodeType":"ContractDefinition","nodes":[{"functionSelector":"3c6d41b9","id":1094,"implemented":false,"kind":"function","modifiers":[],"name":"operatorRequest","nameLocation":"219:15:5","nodeType":"FunctionDefinition","parameters":{"id":1092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1079,"mutability":"mutable","name":"sender","nameLocation":"248:6:5","nodeType":"VariableDeclaration","scope":1094,"src":"240:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1078,"name":"address","nodeType":"ElementaryTypeName","src":"240:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1081,"mutability":"mutable","name":"payment","nameLocation":"268:7:5","nodeType":"VariableDeclaration","scope":1094,"src":"260:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1080,"name":"uint256","nodeType":"ElementaryTypeName","src":"260:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1083,"mutability":"mutable","name":"specId","nameLocation":"289:6:5","nodeType":"VariableDeclaration","scope":1094,"src":"281:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1082,"name":"bytes32","nodeType":"ElementaryTypeName","src":"281:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1085,"mutability":"mutable","name":"callbackFunctionId","nameLocation":"308:18:5","nodeType":"VariableDeclaration","scope":1094,"src":"301:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1084,"name":"bytes4","nodeType":"ElementaryTypeName","src":"301:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":1087,"mutability":"mutable","name":"nonce","nameLocation":"340:5:5","nodeType":"VariableDeclaration","scope":1094,"src":"332:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1086,"name":"uint256","nodeType":"ElementaryTypeName","src":"332:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1089,"mutability":"mutable","name":"dataVersion","nameLocation":"359:11:5","nodeType":"VariableDeclaration","scope":1094,"src":"351:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1088,"name":"uint256","nodeType":"ElementaryTypeName","src":"351:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1091,"mutability":"mutable","name":"data","nameLocation":"391:4:5","nodeType":"VariableDeclaration","scope":1094,"src":"376:19:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1090,"name":"bytes","nodeType":"ElementaryTypeName","src":"376:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"234:165:5"},"returnParameters":{"id":1093,"nodeType":"ParameterList","parameters":[],"src":"408:0:5"},"scope":1149,"src":"210:199:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"6ae0bc76","id":1111,"implemented":false,"kind":"function","modifiers":[],"name":"fulfillOracleRequest2","nameLocation":"422:21:5","nodeType":"FunctionDefinition","parameters":{"id":1107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1096,"mutability":"mutable","name":"requestId","nameLocation":"457:9:5","nodeType":"VariableDeclaration","scope":1111,"src":"449:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1095,"name":"bytes32","nodeType":"ElementaryTypeName","src":"449:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1098,"mutability":"mutable","name":"payment","nameLocation":"480:7:5","nodeType":"VariableDeclaration","scope":1111,"src":"472:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1097,"name":"uint256","nodeType":"ElementaryTypeName","src":"472:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1100,"mutability":"mutable","name":"callbackAddress","nameLocation":"501:15:5","nodeType":"VariableDeclaration","scope":1111,"src":"493:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1099,"name":"address","nodeType":"ElementaryTypeName","src":"493:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1102,"mutability":"mutable","name":"callbackFunctionId","nameLocation":"529:18:5","nodeType":"VariableDeclaration","scope":1111,"src":"522:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1101,"name":"bytes4","nodeType":"ElementaryTypeName","src":"522:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":1104,"mutability":"mutable","name":"expiration","nameLocation":"561:10:5","nodeType":"VariableDeclaration","scope":1111,"src":"553:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1103,"name":"uint256","nodeType":"ElementaryTypeName","src":"553:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1106,"mutability":"mutable","name":"data","nameLocation":"592:4:5","nodeType":"VariableDeclaration","scope":1111,"src":"577:19:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1105,"name":"bytes","nodeType":"ElementaryTypeName","src":"577:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"443:157:5"},"returnParameters":{"id":1110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1109,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1111,"src":"619:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1108,"name":"bool","nodeType":"ElementaryTypeName","src":"619:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"618:6:5"},"scope":1149,"src":"413:212:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"902fc370","id":1122,"implemented":false,"kind":"function","modifiers":[],"name":"ownerTransferAndCall","nameLocation":"638:20:5","nodeType":"FunctionDefinition","parameters":{"id":1118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1113,"mutability":"mutable","name":"to","nameLocation":"672:2:5","nodeType":"VariableDeclaration","scope":1122,"src":"664:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1112,"name":"address","nodeType":"ElementaryTypeName","src":"664:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1115,"mutability":"mutable","name":"value","nameLocation":"688:5:5","nodeType":"VariableDeclaration","scope":1122,"src":"680:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1114,"name":"uint256","nodeType":"ElementaryTypeName","src":"680:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1117,"mutability":"mutable","name":"data","nameLocation":"714:4:5","nodeType":"VariableDeclaration","scope":1122,"src":"699:19:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1116,"name":"bytes","nodeType":"ElementaryTypeName","src":"699:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"658:64:5"},"returnParameters":{"id":1121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1120,"mutability":"mutable","name":"success","nameLocation":"746:7:5","nodeType":"VariableDeclaration","scope":1122,"src":"741:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1119,"name":"bool","nodeType":"ElementaryTypeName","src":"741:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"740:14:5"},"scope":1149,"src":"629:126:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"6bd59ec0","id":1131,"implemented":false,"kind":"function","modifiers":[],"name":"distributeFunds","nameLocation":"768:15:5","nodeType":"FunctionDefinition","parameters":{"id":1129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1125,"mutability":"mutable","name":"receivers","nameLocation":"811:9:5","nodeType":"VariableDeclaration","scope":1131,"src":"784:36:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_calldata_ptr","typeString":"address payable[]"},"typeName":{"baseType":{"id":1123,"name":"address","nodeType":"ElementaryTypeName","src":"784:15:5","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1124,"nodeType":"ArrayTypeName","src":"784:17:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage_ptr","typeString":"address payable[]"}},"visibility":"internal"},{"constant":false,"id":1128,"mutability":"mutable","name":"amounts","nameLocation":"841:7:5","nodeType":"VariableDeclaration","scope":1131,"src":"822:26:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1126,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1127,"nodeType":"ArrayTypeName","src":"822:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"783:66:5"},"returnParameters":{"id":1130,"nodeType":"ParameterList","parameters":[],"src":"866:0:5"},"scope":1149,"src":"759:108:5","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"2408afaa","id":1137,"implemented":false,"kind":"function","modifiers":[],"name":"getAuthorizedSenders","nameLocation":"880:20:5","nodeType":"FunctionDefinition","parameters":{"id":1132,"nodeType":"ParameterList","parameters":[],"src":"900:2:5"},"returnParameters":{"id":1136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1135,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1137,"src":"921:16:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1133,"name":"address","nodeType":"ElementaryTypeName","src":"921:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1134,"nodeType":"ArrayTypeName","src":"921:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"920:18:5"},"scope":1149,"src":"871:68:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"ee56997b","id":1143,"implemented":false,"kind":"function","modifiers":[],"name":"setAuthorizedSenders","nameLocation":"952:20:5","nodeType":"FunctionDefinition","parameters":{"id":1141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1140,"mutability":"mutable","name":"senders","nameLocation":"992:7:5","nodeType":"VariableDeclaration","scope":1143,"src":"973:26:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1138,"name":"address","nodeType":"ElementaryTypeName","src":"973:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1139,"nodeType":"ArrayTypeName","src":"973:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"972:28:5"},"returnParameters":{"id":1142,"nodeType":"ParameterList","parameters":[],"src":"1009:0:5"},"scope":1149,"src":"943:67:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a0042526","id":1148,"implemented":false,"kind":"function","modifiers":[],"name":"getForwarder","nameLocation":"1023:12:5","nodeType":"FunctionDefinition","parameters":{"id":1144,"nodeType":"ParameterList","parameters":[],"src":"1035:2:5"},"returnParameters":{"id":1147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1146,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1148,"src":"1056:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1145,"name":"address","nodeType":"ElementaryTypeName","src":"1056:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1055:9:5"},"scope":1149,"src":"1014:51:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1150,"src":"132:935:5","usedErrors":[]}],"src":"32:1036:5"},"id":5},"@chainlink/contracts/src/v0.8/interfaces/OracleInterface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/OracleInterface.sol","exportedSymbols":{"OracleInterface":[1188]},"id":1189,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1151,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:6"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1188,"linearizedBaseContracts":[1188],"name":"OracleInterface","nameLocation":"67:15:6","nodeType":"ContractDefinition","nodes":[{"functionSelector":"4ab0d190","id":1168,"implemented":false,"kind":"function","modifiers":[],"name":"fulfillOracleRequest","nameLocation":"96:20:6","nodeType":"FunctionDefinition","parameters":{"id":1164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1153,"mutability":"mutable","name":"requestId","nameLocation":"130:9:6","nodeType":"VariableDeclaration","scope":1168,"src":"122:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1152,"name":"bytes32","nodeType":"ElementaryTypeName","src":"122:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1155,"mutability":"mutable","name":"payment","nameLocation":"153:7:6","nodeType":"VariableDeclaration","scope":1168,"src":"145:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1154,"name":"uint256","nodeType":"ElementaryTypeName","src":"145:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1157,"mutability":"mutable","name":"callbackAddress","nameLocation":"174:15:6","nodeType":"VariableDeclaration","scope":1168,"src":"166:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1156,"name":"address","nodeType":"ElementaryTypeName","src":"166:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1159,"mutability":"mutable","name":"callbackFunctionId","nameLocation":"202:18:6","nodeType":"VariableDeclaration","scope":1168,"src":"195:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1158,"name":"bytes4","nodeType":"ElementaryTypeName","src":"195:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":1161,"mutability":"mutable","name":"expiration","nameLocation":"234:10:6","nodeType":"VariableDeclaration","scope":1168,"src":"226:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1160,"name":"uint256","nodeType":"ElementaryTypeName","src":"226:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1163,"mutability":"mutable","name":"data","nameLocation":"258:4:6","nodeType":"VariableDeclaration","scope":1168,"src":"250:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1162,"name":"bytes32","nodeType":"ElementaryTypeName","src":"250:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"116:150:6"},"returnParameters":{"id":1167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1168,"src":"285:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1165,"name":"bool","nodeType":"ElementaryTypeName","src":"285:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"284:6:6"},"scope":1188,"src":"87:204:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"fa00763a","id":1175,"implemented":false,"kind":"function","modifiers":[],"name":"isAuthorizedSender","nameLocation":"304:18:6","nodeType":"FunctionDefinition","parameters":{"id":1171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1170,"mutability":"mutable","name":"node","nameLocation":"331:4:6","nodeType":"VariableDeclaration","scope":1175,"src":"323:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1169,"name":"address","nodeType":"ElementaryTypeName","src":"323:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"322:14:6"},"returnParameters":{"id":1174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1173,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1175,"src":"360:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1172,"name":"bool","nodeType":"ElementaryTypeName","src":"360:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"359:6:6"},"scope":1188,"src":"295:71:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f3fef3a3","id":1182,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"379:8:6","nodeType":"FunctionDefinition","parameters":{"id":1180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1177,"mutability":"mutable","name":"recipient","nameLocation":"396:9:6","nodeType":"VariableDeclaration","scope":1182,"src":"388:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1176,"name":"address","nodeType":"ElementaryTypeName","src":"388:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1179,"mutability":"mutable","name":"amount","nameLocation":"415:6:6","nodeType":"VariableDeclaration","scope":1182,"src":"407:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1178,"name":"uint256","nodeType":"ElementaryTypeName","src":"407:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"387:35:6"},"returnParameters":{"id":1181,"nodeType":"ParameterList","parameters":[],"src":"431:0:6"},"scope":1188,"src":"370:62:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"50188301","id":1187,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawable","nameLocation":"445:12:6","nodeType":"FunctionDefinition","parameters":{"id":1183,"nodeType":"ParameterList","parameters":[],"src":"457:2:6"},"returnParameters":{"id":1186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1185,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1187,"src":"483:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1184,"name":"uint256","nodeType":"ElementaryTypeName","src":"483:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"482:9:6"},"scope":1188,"src":"436:56:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1189,"src":"57:437:6","usedErrors":[]}],"src":"32:463:6"},"id":6},"@chainlink/contracts/src/v0.8/interfaces/PointerInterface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/PointerInterface.sol","exportedSymbols":{"PointerInterface":[1196]},"id":1197,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1190,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:7"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1196,"linearizedBaseContracts":[1196],"name":"PointerInterface","nameLocation":"67:16:7","nodeType":"ContractDefinition","nodes":[{"functionSelector":"38cc4831","id":1195,"implemented":false,"kind":"function","modifiers":[],"name":"getAddress","nameLocation":"97:10:7","nodeType":"FunctionDefinition","parameters":{"id":1191,"nodeType":"ParameterList","parameters":[],"src":"107:2:7"},"returnParameters":{"id":1194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1193,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1195,"src":"133:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1192,"name":"address","nodeType":"ElementaryTypeName","src":"133:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"132:9:7"},"scope":1196,"src":"88:54:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1197,"src":"57:87:7","usedErrors":[]}],"src":"32:113:7"},"id":7},"@chainlink/contracts/src/v0.8/vendor/BufferChainlink.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vendor/BufferChainlink.sol","exportedSymbols":{"BufferChainlink":[1718]},"id":1719,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1198,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:8"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":1199,"nodeType":"StructuredDocumentation","src":"57:383:8","text":" @dev A library for working with mutable byte buffers in Solidity.\n Byte buffers are mutable and expandable, and provide a variety of primitives\n for writing to them. At any time you can fetch a bytes object containing the\n current contents of the buffer. The bytes object should not be stored between\n operations, as it may change due to resizing of the buffer."},"fullyImplemented":true,"id":1718,"linearizedBaseContracts":[1718],"name":"BufferChainlink","nameLocation":"449:15:8","nodeType":"ContractDefinition","nodes":[{"canonicalName":"BufferChainlink.buffer","id":1204,"members":[{"constant":false,"id":1201,"mutability":"mutable","name":"buf","nameLocation":"743:3:8","nodeType":"VariableDeclaration","scope":1204,"src":"737:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1200,"name":"bytes","nodeType":"ElementaryTypeName","src":"737:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1203,"mutability":"mutable","name":"capacity","nameLocation":"760:8:8","nodeType":"VariableDeclaration","scope":1204,"src":"752:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1202,"name":"uint256","nodeType":"ElementaryTypeName","src":"752:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"buffer","nameLocation":"724:6:8","nodeType":"StructDefinition","scope":1718,"src":"717:56:8","visibility":"public"},{"body":{"id":1241,"nodeType":"Block","src":"1090:310:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1216,"name":"capacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"1100:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"3332","id":1217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1111:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"1100:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1117:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1100:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1231,"nodeType":"IfStatement","src":"1096:71:8","trueBody":{"id":1230,"nodeType":"Block","src":"1120:47:8","statements":[{"expression":{"id":1228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1221,"name":"capacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"1128:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":1222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1140:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1223,"name":"capacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"1146:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"3332","id":1224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1157:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"1146:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1226,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1145:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1140:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1128:32:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1229,"nodeType":"ExpressionStatement","src":"1128:32:8"}]}},{"expression":{"id":1236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1232,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"1214:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":1234,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"capacity","nodeType":"MemberAccess","referencedDeclaration":1203,"src":"1214:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1235,"name":"capacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"1229:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1214:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1237,"nodeType":"ExpressionStatement","src":"1214:23:8"},{"AST":{"nodeType":"YulBlock","src":"1252:128:8","statements":[{"nodeType":"YulVariableDeclaration","src":"1260:22:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1277:4:8","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1271:5:8"},"nodeType":"YulFunctionCall","src":"1271:11:8"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"1264:3:8","type":""}]},{"expression":{"arguments":[{"name":"buf","nodeType":"YulIdentifier","src":"1296:3:8"},{"name":"ptr","nodeType":"YulIdentifier","src":"1301:3:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1289:6:8"},"nodeType":"YulFunctionCall","src":"1289:16:8"},"nodeType":"YulExpressionStatement","src":"1289:16:8"},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1319:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"1324:1:8","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1312:6:8"},"nodeType":"YulFunctionCall","src":"1312:14:8"},"nodeType":"YulExpressionStatement","src":"1312:14:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1340:4:8","type":"","value":"0x40"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1350:2:8","type":"","value":"32"},{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1358:3:8"},{"name":"capacity","nodeType":"YulIdentifier","src":"1363:8:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1354:3:8"},"nodeType":"YulFunctionCall","src":"1354:18:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1346:3:8"},"nodeType":"YulFunctionCall","src":"1346:27:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1333:6:8"},"nodeType":"YulFunctionCall","src":"1333:41:8"},"nodeType":"YulExpressionStatement","src":"1333:41:8"}]},"evmVersion":"berlin","externalReferences":[{"declaration":1208,"isOffset":false,"isSlot":false,"src":"1296:3:8","valueSize":1},{"declaration":1210,"isOffset":false,"isSlot":false,"src":"1363:8:8","valueSize":1}],"id":1238,"nodeType":"InlineAssembly","src":"1243:137:8"},{"expression":{"id":1239,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"1392:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"functionReturnParameters":1215,"id":1240,"nodeType":"Return","src":"1385:10:8"}]},"documentation":{"id":1205,"nodeType":"StructuredDocumentation","src":"777:221:8","text":" @dev Initializes a buffer with an initial capacity.\n @param buf The buffer to initialize.\n @param capacity The number of bytes of space to allocate the buffer.\n @return The buffer, for chaining."},"id":1242,"implemented":true,"kind":"function","modifiers":[],"name":"init","nameLocation":"1010:4:8","nodeType":"FunctionDefinition","parameters":{"id":1211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1208,"mutability":"mutable","name":"buf","nameLocation":"1029:3:8","nodeType":"VariableDeclaration","scope":1242,"src":"1015:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":1207,"nodeType":"UserDefinedTypeName","pathNode":{"id":1206,"name":"buffer","nodeType":"IdentifierPath","referencedDeclaration":1204,"src":"1015:6:8"},"referencedDeclaration":1204,"src":"1015:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"},{"constant":false,"id":1210,"mutability":"mutable","name":"capacity","nameLocation":"1042:8:8","nodeType":"VariableDeclaration","scope":1242,"src":"1034:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1209,"name":"uint256","nodeType":"ElementaryTypeName","src":"1034:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1014:37:8"},"returnParameters":{"id":1215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1214,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1242,"src":"1075:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":1213,"nodeType":"UserDefinedTypeName","pathNode":{"id":1212,"name":"buffer","nodeType":"IdentifierPath","referencedDeclaration":1204,"src":"1075:6:8"},"referencedDeclaration":1204,"src":"1075:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"}],"src":"1074:15:8"},"scope":1718,"src":"1001:399:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1270,"nodeType":"Block","src":"1707:90:8","statements":[{"assignments":[1253],"declarations":[{"constant":false,"id":1253,"mutability":"mutable","name":"buf","nameLocation":"1727:3:8","nodeType":"VariableDeclaration","scope":1270,"src":"1713:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":1252,"nodeType":"UserDefinedTypeName","pathNode":{"id":1251,"name":"buffer","nodeType":"IdentifierPath","referencedDeclaration":1204,"src":"1713:6:8"},"referencedDeclaration":1204,"src":"1713:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"}],"id":1254,"nodeType":"VariableDeclarationStatement","src":"1713:17:8"},{"expression":{"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1255,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"1736:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":1257,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1201,"src":"1736:7:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1258,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"1746:1:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"1736:11:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1260,"nodeType":"ExpressionStatement","src":"1736:11:8"},{"expression":{"id":1266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1261,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"1753:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":1263,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"capacity","nodeType":"MemberAccess","referencedDeclaration":1203,"src":"1753:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1264,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"1768:1:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1768:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1753:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1267,"nodeType":"ExpressionStatement","src":"1753:23:8"},{"expression":{"id":1268,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"1789:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"functionReturnParameters":1250,"id":1269,"nodeType":"Return","src":"1782:10:8"}]},"documentation":{"id":1243,"nodeType":"StructuredDocumentation","src":"1404:227:8","text":" @dev Initializes a new buffer from an existing bytes object.\n      Changes to the buffer may mutate the original value.\n @param b The bytes object to initialize the buffer with.\n @return A new buffer."},"id":1271,"implemented":true,"kind":"function","modifiers":[],"name":"fromBytes","nameLocation":"1643:9:8","nodeType":"FunctionDefinition","parameters":{"id":1246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1245,"mutability":"mutable","name":"b","nameLocation":"1666:1:8","nodeType":"VariableDeclaration","scope":1271,"src":"1653:14:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1244,"name":"bytes","nodeType":"ElementaryTypeName","src":"1653:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1652:16:8"},"returnParameters":{"id":1250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1249,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1271,"src":"1692:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":1248,"nodeType":"UserDefinedTypeName","pathNode":{"id":1247,"name":"buffer","nodeType":"IdentifierPath","referencedDeclaration":1204,"src":"1692:6:8"},"referencedDeclaration":1204,"src":"1692:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"}],"src":"1691:15:8"},"scope":1718,"src":"1634:163:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1294,"nodeType":"Block","src":"1867:90:8","statements":[{"assignments":[1280],"declarations":[{"constant":false,"id":1280,"mutability":"mutable","name":"oldbuf","nameLocation":"1886:6:8","nodeType":"VariableDeclaration","scope":1294,"src":"1873:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1279,"name":"bytes","nodeType":"ElementaryTypeName","src":"1873:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1283,"initialValue":{"expression":{"id":1281,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"1895:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":1282,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1201,"src":"1895:7:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1873:29:8"},{"expression":{"arguments":[{"id":1285,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"1913:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},{"id":1286,"name":"capacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"1918:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1284,"name":"init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"1908:4:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1204_memory_ptr_$_t_uint256_$returns$_t_struct$_buffer_$1204_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,uint256) pure returns (struct BufferChainlink.buffer memory)"}},"id":1287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1908:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":1288,"nodeType":"ExpressionStatement","src":"1908:19:8"},{"expression":{"arguments":[{"id":1290,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"1940:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},{"id":1291,"name":"oldbuf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"1945:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1289,"name":"append","nodeType":"Identifier","overloadedDeclarations":[1438,1461],"referencedDeclaration":1461,"src":"1933:6:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1204_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_struct$_buffer_$1204_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,bytes memory) pure returns (struct BufferChainlink.buffer memory)"}},"id":1292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1933:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":1293,"nodeType":"ExpressionStatement","src":"1933:19:8"}]},"id":1295,"implemented":true,"kind":"function","modifiers":[],"name":"resize","nameLocation":"1810:6:8","nodeType":"FunctionDefinition","parameters":{"id":1277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1274,"mutability":"mutable","name":"buf","nameLocation":"1831:3:8","nodeType":"VariableDeclaration","scope":1295,"src":"1817:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":1273,"nodeType":"UserDefinedTypeName","pathNode":{"id":1272,"name":"buffer","nodeType":"IdentifierPath","referencedDeclaration":1204,"src":"1817:6:8"},"referencedDeclaration":1204,"src":"1817:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"},{"constant":false,"id":1276,"mutability":"mutable","name":"capacity","nameLocation":"1844:8:8","nodeType":"VariableDeclaration","scope":1295,"src":"1836:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1275,"name":"uint256","nodeType":"ElementaryTypeName","src":"1836:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1816:37:8"},"returnParameters":{"id":1278,"nodeType":"ParameterList","parameters":[],"src":"1867:0:8"},"scope":1718,"src":"1801:156:8","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1313,"nodeType":"Block","src":"2027:58:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1304,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"2037:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1305,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"2041:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2037:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1310,"nodeType":"IfStatement","src":"2033:34:8","trueBody":{"id":1309,"nodeType":"Block","src":"2044:23:8","statements":[{"expression":{"id":1307,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"2059:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1303,"id":1308,"nodeType":"Return","src":"2052:8:8"}]}},{"expression":{"id":1311,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"2079:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1303,"id":1312,"nodeType":"Return","src":"2072:8:8"}]},"id":1314,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1970:3:8","nodeType":"FunctionDefinition","parameters":{"id":1300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1297,"mutability":"mutable","name":"a","nameLocation":"1982:1:8","nodeType":"VariableDeclaration","scope":1314,"src":"1974:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1296,"name":"uint256","nodeType":"ElementaryTypeName","src":"1974:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1299,"mutability":"mutable","name":"b","nameLocation":"1993:1:8","nodeType":"VariableDeclaration","scope":1314,"src":"1985:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1298,"name":"uint256","nodeType":"ElementaryTypeName","src":"1985:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1973:22:8"},"returnParameters":{"id":1303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1302,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1314,"src":"2018:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1301,"name":"uint256","nodeType":"ElementaryTypeName","src":"2018:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2017:9:8"},"scope":1718,"src":"1961:124:8","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1327,"nodeType":"Block","src":"2300:97:8","statements":[{"AST":{"nodeType":"YulBlock","src":"2315:62:8","statements":[{"nodeType":"YulVariableDeclaration","src":"2323:24:8","value":{"arguments":[{"name":"buf","nodeType":"YulIdentifier","src":"2343:3:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2337:5:8"},"nodeType":"YulFunctionCall","src":"2337:10:8"},"variables":[{"name":"bufptr","nodeType":"YulTypedName","src":"2327:6:8","type":""}]},{"expression":{"arguments":[{"name":"bufptr","nodeType":"YulIdentifier","src":"2361:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"2369:1:8","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2354:6:8"},"nodeType":"YulFunctionCall","src":"2354:17:8"},"nodeType":"YulExpressionStatement","src":"2354:17:8"}]},"evmVersion":"berlin","externalReferences":[{"declaration":1318,"isOffset":false,"isSlot":false,"src":"2343:3:8","valueSize":1}],"id":1324,"nodeType":"InlineAssembly","src":"2306:71:8"},{"expression":{"id":1325,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"2389:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"functionReturnParameters":1323,"id":1326,"nodeType":"Return","src":"2382:10:8"}]},"documentation":{"id":1315,"nodeType":"StructuredDocumentation","src":"2089:133:8","text":" @dev Sets buffer length to 0.\n @param buf The buffer to truncate.\n @return The original buffer, for chaining.."},"id":1328,"implemented":true,"kind":"function","modifiers":[],"name":"truncate","nameLocation":"2234:8:8","nodeType":"FunctionDefinition","parameters":{"id":1319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1318,"mutability":"mutable","name":"buf","nameLocation":"2257:3:8","nodeType":"VariableDeclaration","scope":1328,"src":"2243:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":1317,"nodeType":"UserDefinedTypeName","pathNode":{"id":1316,"name":"buffer","nodeType":"IdentifierPath","referencedDeclaration":1204,"src":"2243:6:8"},"referencedDeclaration":1204,"src":"2243:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"}],"src":"2242:19:8"},"returnParameters":{"id":1323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1322,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1328,"src":"2285:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":1321,"nodeType":"UserDefinedTypeName","pathNode":{"id":1320,"name":"buffer","nodeType":"IdentifierPath","referencedDeclaration":1204,"src":"2285:6:8"},"referencedDeclaration":1204,"src":"2285:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"}],"src":"2284:15:8"},"scope":1718,"src":"2225:172:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1413,"nodeType":"Block","src":"2882:1073:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1345,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1338,"src":"2896:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":1346,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1336,"src":"2903:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2903:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2896:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1344,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2888:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2888:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1350,"nodeType":"ExpressionStatement","src":"2888:27:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1351,"name":"off","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"2926:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1352,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1338,"src":"2932:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2926:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":1354,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"2938:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":1355,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"capacity","nodeType":"MemberAccess","referencedDeclaration":1203,"src":"2938:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2926:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1371,"nodeType":"IfStatement","src":"2922:90:8","trueBody":{"id":1370,"nodeType":"Block","src":"2952:60:8","statements":[{"expression":{"arguments":[{"id":1358,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"2967:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":1360,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"2976:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":1361,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"capacity","nodeType":"MemberAccess","referencedDeclaration":1203,"src":"2976:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1362,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1338,"src":"2990:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1363,"name":"off","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"2996:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2990:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1359,"name":"max","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"2972:3:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2972:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":1366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3003:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2972:32:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1357,"name":"resize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"2960:6:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1204_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (struct BufferChainlink.buffer memory,uint256) pure"}},"id":1368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2960:45:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1369,"nodeType":"ExpressionStatement","src":"2960:45:8"}]}},{"assignments":[1373],"declarations":[{"constant":false,"id":1373,"mutability":"mutable","name":"dest","nameLocation":"3026:4:8","nodeType":"VariableDeclaration","scope":1413,"src":"3018:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1372,"name":"uint256","nodeType":"ElementaryTypeName","src":"3018:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1374,"nodeType":"VariableDeclarationStatement","src":"3018:12:8"},{"assignments":[1376],"declarations":[{"constant":false,"id":1376,"mutability":"mutable","name":"src","nameLocation":"3044:3:8","nodeType":"VariableDeclaration","scope":1413,"src":"3036:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1375,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1377,"nodeType":"VariableDeclarationStatement","src":"3036:11:8"},{"AST":{"nodeType":"YulBlock","src":"3062:430:8","statements":[{"nodeType":"YulVariableDeclaration","src":"3113:24:8","value":{"arguments":[{"name":"buf","nodeType":"YulIdentifier","src":"3133:3:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3127:5:8"},"nodeType":"YulFunctionCall","src":"3127:10:8"},"variables":[{"name":"bufptr","nodeType":"YulTypedName","src":"3117:6:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3184:27:8","value":{"arguments":[{"name":"bufptr","nodeType":"YulIdentifier","src":"3204:6:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3198:5:8"},"nodeType":"YulFunctionCall","src":"3198:13:8"},"variables":[{"name":"buflen","nodeType":"YulTypedName","src":"3188:6:8","type":""}]},{"nodeType":"YulAssignment","src":"3291:33:8","value":{"arguments":[{"arguments":[{"name":"bufptr","nodeType":"YulIdentifier","src":"3307:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"3315:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3303:3:8"},"nodeType":"YulFunctionCall","src":"3303:15:8"},{"name":"off","nodeType":"YulIdentifier","src":"3320:3:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3299:3:8"},"nodeType":"YulFunctionCall","src":"3299:25:8"},"variableNames":[{"name":"dest","nodeType":"YulIdentifier","src":"3291:4:8"}]},{"body":{"nodeType":"YulBlock","src":"3412:47:8","statements":[{"expression":{"arguments":[{"name":"bufptr","nodeType":"YulIdentifier","src":"3429:6:8"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"3441:3:8"},{"name":"off","nodeType":"YulIdentifier","src":"3446:3:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3437:3:8"},"nodeType":"YulFunctionCall","src":"3437:13:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3422:6:8"},"nodeType":"YulFunctionCall","src":"3422:29:8"},"nodeType":"YulExpressionStatement","src":"3422:29:8"}]},"condition":{"arguments":[{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"3393:3:8"},{"name":"off","nodeType":"YulIdentifier","src":"3398:3:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3389:3:8"},"nodeType":"YulFunctionCall","src":"3389:13:8"},{"name":"buflen","nodeType":"YulIdentifier","src":"3404:6:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3386:2:8"},"nodeType":"YulFunctionCall","src":"3386:25:8"},"nodeType":"YulIf","src":"3383:2:8"},{"nodeType":"YulAssignment","src":"3466:20:8","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3477:4:8"},{"kind":"number","nodeType":"YulLiteral","src":"3483:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3473:3:8"},"nodeType":"YulFunctionCall","src":"3473:13:8"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"3466:3:8"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":1332,"isOffset":false,"isSlot":false,"src":"3133:3:8","valueSize":1},{"declaration":1336,"isOffset":false,"isSlot":false,"src":"3477:4:8","valueSize":1},{"declaration":1373,"isOffset":false,"isSlot":false,"src":"3291:4:8","valueSize":1},{"declaration":1338,"isOffset":false,"isSlot":false,"src":"3393:3:8","valueSize":1},{"declaration":1338,"isOffset":false,"isSlot":false,"src":"3441:3:8","valueSize":1},{"declaration":1334,"isOffset":false,"isSlot":false,"src":"3320:3:8","valueSize":1},{"declaration":1334,"isOffset":false,"isSlot":false,"src":"3398:3:8","valueSize":1},{"declaration":1334,"isOffset":false,"isSlot":false,"src":"3446:3:8","valueSize":1},{"declaration":1376,"isOffset":false,"isSlot":false,"src":"3466:3:8","valueSize":1}],"id":1378,"nodeType":"InlineAssembly","src":"3053:439:8"},{"body":{"id":1395,"nodeType":"Block","src":"3573:100:8","statements":[{"AST":{"nodeType":"YulBlock","src":"3590:42:8","statements":[{"expression":{"arguments":[{"name":"dest","nodeType":"YulIdentifier","src":"3607:4:8"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3619:3:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3613:5:8"},"nodeType":"YulFunctionCall","src":"3613:10:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3600:6:8"},"nodeType":"YulFunctionCall","src":"3600:24:8"},"nodeType":"YulExpressionStatement","src":"3600:24:8"}]},"evmVersion":"berlin","externalReferences":[{"declaration":1373,"isOffset":false,"isSlot":false,"src":"3607:4:8","valueSize":1},{"declaration":1376,"isOffset":false,"isSlot":false,"src":"3619:3:8","valueSize":1}],"id":1386,"nodeType":"InlineAssembly","src":"3581:51:8"},{"expression":{"id":1389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1387,"name":"dest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"3639:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3647:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3639:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1390,"nodeType":"ExpressionStatement","src":"3639:10:8"},{"expression":{"id":1393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1391,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"3657:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3664:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3657:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1394,"nodeType":"ExpressionStatement","src":"3657:9:8"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1379,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1338,"src":"3551:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3332","id":1380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3558:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3551:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1396,"loopExpression":{"expression":{"id":1384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1382,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1338,"src":"3562:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3332","id":1383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3569:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3562:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1385,"nodeType":"ExpressionStatement","src":"3562:9:8"},"nodeType":"ForStatement","src":"3544:129:8"},{"id":1410,"nodeType":"UncheckedBlock","src":"3707:227:8","statements":[{"assignments":[1398],"declarations":[{"constant":false,"id":1398,"mutability":"mutable","name":"mask","nameLocation":"3733:4:8","nodeType":"VariableDeclaration","scope":1410,"src":"3725:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1397,"name":"uint256","nodeType":"ElementaryTypeName","src":"3725:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1408,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":1399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3741:3:8","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":1400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3747:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1401,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1338,"src":"3752:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3747:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1403,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3746:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3741:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1405,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3740:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3760:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3740:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3725:36:8"},{"AST":{"nodeType":"YulBlock","src":"3778:150:8","statements":[{"nodeType":"YulVariableDeclaration","src":"3788:41:8","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3813:3:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3807:5:8"},"nodeType":"YulFunctionCall","src":"3807:10:8"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"3823:4:8"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3819:3:8"},"nodeType":"YulFunctionCall","src":"3819:9:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3803:3:8"},"nodeType":"YulFunctionCall","src":"3803:26:8"},"variables":[{"name":"srcpart","nodeType":"YulTypedName","src":"3792:7:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3838:38:8","value":{"arguments":[{"arguments":[{"name":"dest","nodeType":"YulIdentifier","src":"3864:4:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3858:5:8"},"nodeType":"YulFunctionCall","src":"3858:11:8"},{"name":"mask","nodeType":"YulIdentifier","src":"3871:4:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3854:3:8"},"nodeType":"YulFunctionCall","src":"3854:22:8"},"variables":[{"name":"destpart","nodeType":"YulTypedName","src":"3842:8:8","type":""}]},{"expression":{"arguments":[{"name":"dest","nodeType":"YulIdentifier","src":"3892:4:8"},{"arguments":[{"name":"destpart","nodeType":"YulIdentifier","src":"3901:8:8"},{"name":"srcpart","nodeType":"YulIdentifier","src":"3911:7:8"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3898:2:8"},"nodeType":"YulFunctionCall","src":"3898:21:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3885:6:8"},"nodeType":"YulFunctionCall","src":"3885:35:8"},"nodeType":"YulExpressionStatement","src":"3885:35:8"}]},"evmVersion":"berlin","externalReferences":[{"declaration":1373,"isOffset":false,"isSlot":false,"src":"3864:4:8","valueSize":1},{"declaration":1373,"isOffset":false,"isSlot":false,"src":"3892:4:8","valueSize":1},{"declaration":1398,"isOffset":false,"isSlot":false,"src":"3823:4:8","valueSize":1},{"declaration":1398,"isOffset":false,"isSlot":false,"src":"3871:4:8","valueSize":1},{"declaration":1376,"isOffset":false,"isSlot":false,"src":"3813:3:8","valueSize":1}],"id":1409,"nodeType":"InlineAssembly","src":"3769:159:8"}]},{"expression":{"id":1411,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"3947:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"functionReturnParameters":1343,"id":1412,"nodeType":"Return","src":"3940:10:8"}]},"documentation":{"id":1329,"nodeType":"StructuredDocumentation","src":"2401:341:8","text":" @dev Writes a byte string to a buffer. Resizes if doing so would exceed\n      the capacity of the buffer.\n @param buf The buffer to append to.\n @param off The start offset to write to.\n @param data The data to append.\n @param len The number of bytes to copy.\n @return The original buffer, for chaining."},"id":1414,"implemented":true,"kind":"function","modifiers":[],"name":"write","nameLocation":"2754:5:8","nodeType":"FunctionDefinition","parameters":{"id":1339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1332,"mutability":"mutable","name":"buf","nameLocation":"2779:3:8","nodeType":"VariableDeclaration","scope":1414,"src":"2765:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":1331,"nodeType":"UserDefinedTypeName","pathNode":{"id":1330,"name":"buffer","nodeType":"IdentifierPath","referencedDeclaration":1204,"src":"2765:6:8"},"referencedDeclaration":1204,"src":"2765:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"},{"constant":false,"id":1334,"mutability":"mutable","name":"off","nameLocation":"2796:3:8","nodeType":"VariableDeclaration","scope":1414,"src":"2788:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1333,"name":"uint256","nodeType":"ElementaryTypeName","src":"2788:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1336,"mutability":"mutable","name":"data","nameLocation":"2818:4:8","nodeType":"VariableDeclaration","scope":1414,"src":"2805:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1335,"name":"bytes","nodeType":"ElementaryTypeName","src":"2805:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1338,"mutability":"mutable","name":"len","nameLocation":"2836:3:8","nodeType":"VariableDeclaration","scope":1414,"src":"2828:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1337,"name":"uint256","nodeType":"ElementaryTypeName","src":"2828:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2759:84:8"},"returnParameters":{"id":1343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1342,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1414,"src":"2867:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":1341,"nodeType":"UserDefinedTypeName","pathNode":{"id":1340,"name":"buffer","nodeType":"IdentifierPath","referencedDeclaration":1204,"src":"2867:6:8"},"referencedDeclaration":1204,"src":"2867:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"}],"src":"2866:15:8"},"scope":1718,"src":"2745:1210:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1437,"nodeType":"Block","src":"4379:55:8","statements":[{"expression":{"arguments":[{"id":1429,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"4398:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},{"expression":{"expression":{"id":1430,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"4403:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":1431,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1201,"src":"4403:7:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4403:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1433,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"4419:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1434,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1422,"src":"4425:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1428,"name":"write","nodeType":"Identifier","overloadedDeclarations":[1414,1574],"referencedDeclaration":1414,"src":"4392:5:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1204_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_struct$_buffer_$1204_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,uint256,bytes memory,uint256) pure returns (struct BufferChainlink.buffer memory)"}},"id":1435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4392:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"functionReturnParameters":1427,"id":1436,"nodeType":"Return","src":"4385:44:8"}]},"documentation":{"id":1415,"nodeType":"StructuredDocumentation","src":"3959:296:8","text":" @dev Appends a byte string to a buffer. Resizes if doing so would exceed\n      the capacity of the buffer.\n @param buf The buffer to append to.\n @param data The data to append.\n @param len The number of bytes to copy.\n @return The original buffer, for chaining."},"id":1438,"implemented":true,"kind":"function","modifiers":[],"name":"append","nameLocation":"4267:6:8","nodeType":"FunctionDefinition","parameters":{"id":1423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1418,"mutability":"mutable","name":"buf","nameLocation":"4293:3:8","nodeType":"VariableDeclaration","scope":1438,"src":"4279:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":1417,"nodeType":"UserDefinedTypeName","pathNode":{"id":1416,"name":"buffer","nodeType":"IdentifierPath","referencedDeclaration":1204,"src":"4279:6:8"},"referencedDeclaration":1204,"src":"4279:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"},{"constant":false,"id":1420,"mutability":"mutable","name":"data","nameLocation":"4315:4:8","nodeType":"VariableDeclaration","scope":1438,"src":"4302:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1419,"name":"bytes","nodeType":"ElementaryTypeName","src":"4302:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1422,"mutability":"mutable","name":"len","nameLocation":"4333:3:8","nodeType":"VariableDeclaration","scope":1438,"src":"4325:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1421,"name":"uint256","nodeType":"ElementaryTypeName","src":"4325:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4273:67:8"},"returnParameters":{"id":1427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1426,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1438,"src":"4364:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":1425,"nodeType":"UserDefinedTypeName","pathNode":{"id":1424,"name":"buffer","nodeType":"IdentifierPath","referencedDeclaration":1204,"src":"4364:6:8"},"referencedDeclaration":1204,"src":"4364:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"}],"src":"4363:15:8"},"scope":1718,"src":"4258:176:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1460,"nodeType":"Block","src":"4784:63:8","statements":[{"expression":{"arguments":[{"id":1451,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"4803:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},{"expression":{"expression":{"id":1452,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"4808:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":1453,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1201,"src":"4808:7:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4808:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1455,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"4824:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"id":1456,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"4830:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4830:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1450,"name":"write","nodeType":"Identifier","overloadedDeclarations":[1414,1574],"referencedDeclaration":1414,"src":"4797:5:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1204_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_struct$_buffer_$1204_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,uint256,bytes memory,uint256) pure returns (struct BufferChainlink.buffer memory)"}},"id":1458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4797:45:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"functionReturnParameters":1449,"id":1459,"nodeType":"Return","src":"4790:52:8"}]},"documentation":{"id":1439,"nodeType":"StructuredDocumentation","src":"4438:251:8","text":" @dev Appends a byte string to a buffer. Resizes if doing so would exceed\n      the capacity of the buffer.\n @param buf The buffer to append to.\n @param data The data to append.\n @return The original buffer, for chaining."},"id":1461,"implemented":true,"kind":"function","modifiers":[],"name":"append","nameLocation":"4701:6:8","nodeType":"FunctionDefinition","parameters":{"id":1445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1442,"mutability":"mutable","name":"buf","nameLocation":"4722:3:8","nodeType":"VariableDeclaration","scope":1461,"src":"4708:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":1441,"nodeType":"UserDefinedTypeName","pathNode":{"id":1440,"name":"buffer","nodeType":"IdentifierPath","referencedDeclaration":1204,"src":"4708:6:8"},"referencedDeclaration":1204,"src":"4708:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"},{"constant":false,"id":1444,"mutability":"mutable","name":"data","nameLocation":"4740:4:8","nodeType":"VariableDeclaration","scope":1461,"src":"4727:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1443,"name":"bytes","nodeType":"ElementaryTypeName","src":"4727:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4707:38:8"},"returnParameters":{"id":1449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1448,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1461,"src":"4769:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":1447,"nodeType":"UserDefinedTypeName","pathNode":{"id":1446,"name":"buffer","nodeType":"IdentifierPath","referencedDeclaration":1204,"src":"4769:6:8"},"referencedDeclaration":1204,"src":"4769:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"}],"src":"4768:15:8"},"scope":1718,"src":"4692:155:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1492,"nodeType":"Block","src":"5266:521:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1475,"name":"off","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"5276:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":1476,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"5283:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":1477,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"capacity","nodeType":"MemberAccess","referencedDeclaration":1203,"src":"5283:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5276:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1488,"nodeType":"IfStatement","src":"5272:69:8","trueBody":{"id":1487,"nodeType":"Block","src":"5297:44:8","statements":[{"expression":{"arguments":[{"id":1480,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"5312:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1481,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"5317:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":1482,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"capacity","nodeType":"MemberAccess","referencedDeclaration":1203,"src":"5317:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":1483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5332:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5317:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1479,"name":"resize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"5305:6:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1204_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (struct BufferChainlink.buffer memory,uint256) pure"}},"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5305:29:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1486,"nodeType":"ExpressionStatement","src":"5305:29:8"}]}},{"AST":{"nodeType":"YulBlock","src":"5356:411:8","statements":[{"nodeType":"YulVariableDeclaration","src":"5407:24:8","value":{"arguments":[{"name":"buf","nodeType":"YulIdentifier","src":"5427:3:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5421:5:8"},"nodeType":"YulFunctionCall","src":"5421:10:8"},"variables":[{"name":"bufptr","nodeType":"YulTypedName","src":"5411:6:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5478:27:8","value":{"arguments":[{"name":"bufptr","nodeType":"YulIdentifier","src":"5498:6:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5492:5:8"},"nodeType":"YulFunctionCall","src":"5492:13:8"},"variables":[{"name":"buflen","nodeType":"YulTypedName","src":"5482:6:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5576:37:8","value":{"arguments":[{"arguments":[{"name":"bufptr","nodeType":"YulIdentifier","src":"5596:6:8"},{"name":"off","nodeType":"YulIdentifier","src":"5604:3:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5592:3:8"},"nodeType":"YulFunctionCall","src":"5592:16:8"},{"kind":"number","nodeType":"YulLiteral","src":"5610:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5588:3:8"},"nodeType":"YulFunctionCall","src":"5588:25:8"},"variables":[{"name":"dest","nodeType":"YulTypedName","src":"5580:4:8","type":""}]},{"expression":{"arguments":[{"name":"dest","nodeType":"YulIdentifier","src":"5628:4:8"},{"name":"data","nodeType":"YulIdentifier","src":"5634:4:8"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"5620:7:8"},"nodeType":"YulFunctionCall","src":"5620:19:8"},"nodeType":"YulExpressionStatement","src":"5620:19:8"},{"body":{"nodeType":"YulBlock","src":"5713:48:8","statements":[{"expression":{"arguments":[{"name":"bufptr","nodeType":"YulIdentifier","src":"5730:6:8"},{"arguments":[{"name":"buflen","nodeType":"YulIdentifier","src":"5742:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"5750:1:8","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5738:3:8"},"nodeType":"YulFunctionCall","src":"5738:14:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5723:6:8"},"nodeType":"YulFunctionCall","src":"5723:30:8"},"nodeType":"YulExpressionStatement","src":"5723:30:8"}]},"condition":{"arguments":[{"name":"off","nodeType":"YulIdentifier","src":"5700:3:8"},{"name":"buflen","nodeType":"YulIdentifier","src":"5705:6:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5697:2:8"},"nodeType":"YulFunctionCall","src":"5697:15:8"},"nodeType":"YulIf","src":"5694:2:8"}]},"evmVersion":"berlin","externalReferences":[{"declaration":1465,"isOffset":false,"isSlot":false,"src":"5427:3:8","valueSize":1},{"declaration":1469,"isOffset":false,"isSlot":false,"src":"5634:4:8","valueSize":1},{"declaration":1467,"isOffset":false,"isSlot":false,"src":"5604:3:8","valueSize":1},{"declaration":1467,"isOffset":false,"isSlot":false,"src":"5700:3:8","valueSize":1}],"id":1489,"nodeType":"InlineAssembly","src":"5347:420:8"},{"expression":{"id":1490,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"5779:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"functionReturnParameters":1474,"id":1491,"nodeType":"Return","src":"5772:10:8"}]},"documentation":{"id":1462,"nodeType":"StructuredDocumentation","src":"4851:294:8","text":" @dev Writes a byte to the buffer. Resizes if doing so would exceed the\n      capacity of the buffer.\n @param buf The buffer to append to.\n @param off The offset to write the byte at.\n @param data The data to append.\n @return The original buffer, for chaining."},"id":1493,"implemented":true,"kind":"function","modifiers":[],"name":"writeUint8","nameLocation":"5157:10:8","nodeType":"FunctionDefinition","parameters":{"id":1470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1465,"mutability":"mutable","name":"buf","nameLocation":"5187:3:8","nodeType":"VariableDeclaration","scope":1493,"src":"5173:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":1464,"nodeType":"UserDefinedTypeName","pathNode":{"id":1463,"name":"buffer","nodeType":"IdentifierPath","referencedDeclaration":1204,"src":"5173:6:8"},"referencedDeclaration":1204,"src":"5173:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"},{"constant":false,"id":1467,"mutability":"mutable","name":"off","nameLocation":"5204:3:8","nodeType":"VariableDeclaration","scope":1493,"src":"5196:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1466,"name":"uint256","nodeType":"ElementaryTypeName","src":"5196:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1469,"mutability":"mutable","name":"data","nameLocation":"5219:4:8","nodeType":"VariableDeclaration","scope":1493,"src":"5213:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1468,"name":"uint8","nodeType":"ElementaryTypeName","src":"5213:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"5167:60:8"},"returnParameters":{"id":1474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1473,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1493,"src":"5251:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":1472,"nodeType":"UserDefinedTypeName","pathNode":{"id":1471,"name":"buffer","nodeType":"IdentifierPath","referencedDeclaration":1204,"src":"5251:6:8"},"referencedDeclaration":1204,"src":"5251:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"}],"src":"5250:15:8"},"scope":1718,"src":"5148:639:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1513,"nodeType":"Block","src":"6130:55:8","statements":[{"expression":{"arguments":[{"id":1506,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"6154:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},{"expression":{"expression":{"id":1507,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"6159:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":1508,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1201,"src":"6159:7:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6159:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1510,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"6175:4:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1505,"name":"writeUint8","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"6143:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1204_memory_ptr_$_t_uint256_$_t_uint8_$returns$_t_struct$_buffer_$1204_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,uint256,uint8) pure returns (struct BufferChainlink.buffer memory)"}},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6143:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"functionReturnParameters":1504,"id":1512,"nodeType":"Return","src":"6136:44:8"}]},"documentation":{"id":1494,"nodeType":"StructuredDocumentation","src":"5791:246:8","text":" @dev Appends a byte to the buffer. Resizes if doing so would exceed the\n      capacity of the buffer.\n @param buf The buffer to append to.\n @param data The data to append.\n @return The original buffer, for chaining."},"id":1514,"implemented":true,"kind":"function","modifiers":[],"name":"appendUint8","nameLocation":"6049:11:8","nodeType":"FunctionDefinition","parameters":{"id":1500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1497,"mutability":"mutable","name":"buf","nameLocation":"6075:3:8","nodeType":"VariableDeclaration","scope":1514,"src":"6061:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":1496,"nodeType":"UserDefinedTypeName","pathNode":{"id":1495,"name":"buffer","nodeType":"IdentifierPath","referencedDeclaration":1204,"src":"6061:6:8"},"referencedDeclaration":1204,"src":"6061:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"},{"constant":false,"id":1499,"mutability":"mutable","name":"data","nameLocation":"6086:4:8","nodeType":"VariableDeclaration","scope":1514,"src":"6080:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1498,"name":"uint8","nodeType":"ElementaryTypeName","src":"6080:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"6060:31:8"},"returnParameters":{"id":1504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1503,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1514,"src":"6115:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":1502,"nodeType":"UserDefinedTypeName","pathNode":{"id":1501,"name":"buffer","nodeType":"IdentifierPath","referencedDeclaration":1204,"src":"6115:6:8"},"referencedDeclaration":1204,"src":"6115:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"}],"src":"6114:15:8"},"scope":1718,"src":"6040:145:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1573,"nodeType":"Block","src":"6677:652:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1530,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"6687:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1531,"name":"off","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1520,"src":"6693:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6687:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":1533,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1518,"src":"6699:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":1534,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"capacity","nodeType":"MemberAccess","referencedDeclaration":1203,"src":"6699:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6687:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1547,"nodeType":"IfStatement","src":"6683:73:8","trueBody":{"id":1546,"nodeType":"Block","src":"6713:43:8","statements":[{"expression":{"arguments":[{"id":1537,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1518,"src":"6728:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1538,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"6734:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1539,"name":"off","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1520,"src":"6740:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6734:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1541,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6733:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":1542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6747:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"6733:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1536,"name":"resize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"6721:6:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1204_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (struct BufferChainlink.buffer memory,uint256) pure"}},"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6721:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1545,"nodeType":"ExpressionStatement","src":"6721:28:8"}]}},{"id":1570,"nodeType":"UncheckedBlock","src":"6762:547:8","statements":[{"assignments":[1549],"declarations":[{"constant":false,"id":1549,"mutability":"mutable","name":"mask","nameLocation":"6788:4:8","nodeType":"VariableDeclaration","scope":1570,"src":"6780:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1548,"name":"uint256","nodeType":"ElementaryTypeName","src":"6780:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1556,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":1550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6796:3:8","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":1551,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"6801:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6796:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1553,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6795:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6808:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6795:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6780:29:8"},{"expression":{"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1557,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"6843:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1558,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"6850:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":1559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6859:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":1560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6864:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1561,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"6869:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6864:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1563,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6863:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6859:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1565,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6858:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6850:24:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6843:31:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1568,"nodeType":"ExpressionStatement","src":"6843:31:8"},{"AST":{"nodeType":"YulBlock","src":"6891:412:8","statements":[{"nodeType":"YulVariableDeclaration","src":"6946:24:8","value":{"arguments":[{"name":"buf","nodeType":"YulIdentifier","src":"6966:3:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6960:5:8"},"nodeType":"YulFunctionCall","src":"6960:10:8"},"variables":[{"name":"bufptr","nodeType":"YulTypedName","src":"6950:6:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7051:38:8","value":{"arguments":[{"arguments":[{"name":"bufptr","nodeType":"YulIdentifier","src":"7071:6:8"},{"name":"off","nodeType":"YulIdentifier","src":"7079:3:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7067:3:8"},"nodeType":"YulFunctionCall","src":"7067:16:8"},{"name":"len","nodeType":"YulIdentifier","src":"7085:3:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7063:3:8"},"nodeType":"YulFunctionCall","src":"7063:26:8"},"variables":[{"name":"dest","nodeType":"YulTypedName","src":"7055:4:8","type":""}]},{"expression":{"arguments":[{"name":"dest","nodeType":"YulIdentifier","src":"7105:4:8"},{"arguments":[{"arguments":[{"arguments":[{"name":"dest","nodeType":"YulIdentifier","src":"7124:4:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7118:5:8"},"nodeType":"YulFunctionCall","src":"7118:11:8"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"7135:4:8"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7131:3:8"},"nodeType":"YulFunctionCall","src":"7131:9:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7114:3:8"},"nodeType":"YulFunctionCall","src":"7114:27:8"},{"name":"data","nodeType":"YulIdentifier","src":"7143:4:8"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7111:2:8"},"nodeType":"YulFunctionCall","src":"7111:37:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7098:6:8"},"nodeType":"YulFunctionCall","src":"7098:51:8"},"nodeType":"YulExpressionStatement","src":"7098:51:8"},{"body":{"nodeType":"YulBlock","src":"7244:51:8","statements":[{"expression":{"arguments":[{"name":"bufptr","nodeType":"YulIdentifier","src":"7263:6:8"},{"arguments":[{"name":"off","nodeType":"YulIdentifier","src":"7275:3:8"},{"name":"len","nodeType":"YulIdentifier","src":"7280:3:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7271:3:8"},"nodeType":"YulFunctionCall","src":"7271:13:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7256:6:8"},"nodeType":"YulFunctionCall","src":"7256:29:8"},"nodeType":"YulExpressionStatement","src":"7256:29:8"}]},"condition":{"arguments":[{"arguments":[{"name":"off","nodeType":"YulIdentifier","src":"7218:3:8"},{"name":"len","nodeType":"YulIdentifier","src":"7223:3:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7214:3:8"},"nodeType":"YulFunctionCall","src":"7214:13:8"},{"arguments":[{"name":"bufptr","nodeType":"YulIdentifier","src":"7235:6:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7229:5:8"},"nodeType":"YulFunctionCall","src":"7229:13:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7211:2:8"},"nodeType":"YulFunctionCall","src":"7211:32:8"},"nodeType":"YulIf","src":"7208:2:8"}]},"evmVersion":"berlin","externalReferences":[{"declaration":1518,"isOffset":false,"isSlot":false,"src":"6966:3:8","valueSize":1},{"declaration":1522,"isOffset":false,"isSlot":false,"src":"7143:4:8","valueSize":1},{"declaration":1524,"isOffset":false,"isSlot":false,"src":"7085:3:8","valueSize":1},{"declaration":1524,"isOffset":false,"isSlot":false,"src":"7223:3:8","valueSize":1},{"declaration":1524,"isOffset":false,"isSlot":false,"src":"7280:3:8","valueSize":1},{"declaration":1549,"isOffset":false,"isSlot":false,"src":"7135:4:8","valueSize":1},{"declaration":1520,"isOffset":false,"isSlot":false,"src":"7079:3:8","valueSize":1},{"declaration":1520,"isOffset":false,"isSlot":false,"src":"7218:3:8","valueSize":1},{"declaration":1520,"isOffset":false,"isSlot":false,"src":"7275:3:8","valueSize":1}],"id":1569,"nodeType":"InlineAssembly","src":"6882:421:8"}]},{"expression":{"id":1571,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1518,"src":"7321:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"functionReturnParameters":1529,"id":1572,"nodeType":"Return","src":"7314:10:8"}]},"documentation":{"id":1515,"nodeType":"StructuredDocumentation","src":"6189:354:8","text":" @dev Writes up to 32 bytes to the buffer. Resizes if doing so would\n      exceed the capacity of the buffer.\n @param buf The buffer to append to.\n @param off The offset to write at.\n @param data The data to append.\n @param len The number of bytes to write (left-aligned).\n @return The original buffer, for chaining."},"id":1574,"implemented":true,"kind":"function","modifiers":[],"name":"write","nameLocation":"6555:5:8","nodeType":"FunctionDefinition","parameters":{"id":1525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1518,"mutability":"mutable","name":"buf","nameLocation":"6580:3:8","nodeType":"VariableDeclaration","scope":1574,"src":"6566:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":1517,"nodeType":"UserDefinedTypeName","pathNode":{"id":1516,"name":"buffer","nodeType":"IdentifierPath","referencedDeclaration":1204,"src":"6566:6:8"},"referencedDeclaration":1204,"src":"6566:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"},{"constant":false,"id":1520,"mutability":"mutable","name":"off","nameLocation":"6597:3:8","nodeType":"VariableDeclaration","scope":1574,"src":"6589:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1519,"name":"uint256","nodeType":"ElementaryTypeName","src":"6589:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1522,"mutability":"mutable","name":"data","nameLocation":"6614:4:8","nodeType":"VariableDeclaration","scope":1574,"src":"6606:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1521,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6606:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1524,"mutability":"mutable","name":"len","nameLocation":"6632:3:8","nodeType":"VariableDeclaration","scope":1574,"src":"6624:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1523,"name":"uint256","nodeType":"ElementaryTypeName","src":"6624:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6560:79:8"},"returnParameters":{"id":1529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1528,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1574,"src":"6662:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":1527,"nodeType":"UserDefinedTypeName","pathNode":{"id":1526,"name":"buffer","nodeType":"IdentifierPath","referencedDeclaration":1204,"src":"6662:6:8"},"referencedDeclaration":1204,"src":"6662:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"}],"src":"6661:15:8"},"scope":1718,"src":"6546:783:8","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1598,"nodeType":"Block","src":"7746:52:8","statements":[{"expression":{"arguments":[{"id":1589,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1578,"src":"7765:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},{"id":1590,"name":"off","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"7770:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1593,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"7783:4:8","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"id":1592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7775:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1591,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7775:7:8","typeDescriptions":{}}},"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7775:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"3230","id":1595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7790:2:8","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"}],"id":1588,"name":"write","nodeType":"Identifier","overloadedDeclarations":[1414,1574],"referencedDeclaration":1574,"src":"7759:5:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1204_memory_ptr_$_t_uint256_$_t_bytes32_$_t_uint256_$returns$_t_struct$_buffer_$1204_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,uint256,bytes32,uint256) pure returns (struct BufferChainlink.buffer memory)"}},"id":1596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7759:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"functionReturnParameters":1587,"id":1597,"nodeType":"Return","src":"7752:41:8"}]},"documentation":{"id":1575,"nodeType":"StructuredDocumentation","src":"7333:288:8","text":" @dev Writes a bytes20 to the buffer. Resizes if doing so would exceed the\n      capacity of the buffer.\n @param buf The buffer to append to.\n @param off The offset to write at.\n @param data The data to append.\n @return The original buffer, for chaining."},"id":1599,"implemented":true,"kind":"function","modifiers":[],"name":"writeBytes20","nameLocation":"7633:12:8","nodeType":"FunctionDefinition","parameters":{"id":1583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1578,"mutability":"mutable","name":"buf","nameLocation":"7665:3:8","nodeType":"VariableDeclaration","scope":1599,"src":"7651:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":1577,"nodeType":"UserDefinedTypeName","pathNode":{"id":1576,"name":"buffer","nodeType":"IdentifierPath","referencedDeclaration":1204,"src":"7651:6:8"},"referencedDeclaration":1204,"src":"7651:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"},{"constant":false,"id":1580,"mutability":"mutable","name":"off","nameLocation":"7682:3:8","nodeType":"VariableDeclaration","scope":1599,"src":"7674:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1579,"name":"uint256","nodeType":"ElementaryTypeName","src":"7674:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1582,"mutability":"mutable","name":"data","nameLocation":"7699:4:8","nodeType":"VariableDeclaration","scope":1599,"src":"7691:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"},"typeName":{"id":1581,"name":"bytes20","nodeType":"ElementaryTypeName","src":"7691:7:8","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}},"visibility":"internal"}],"src":"7645:62:8"},"returnParameters":{"id":1587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1586,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1599,"src":"7731:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":1585,"nodeType":"UserDefinedTypeName","pathNode":{"id":1584,"name":"buffer","nodeType":"IdentifierPath","referencedDeclaration":1204,"src":"7731:6:8"},"referencedDeclaration":1204,"src":"7731:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"}],"src":"7730:15:8"},"scope":1718,"src":"7624:174:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1623,"nodeType":"Block","src":"8149:63:8","statements":[{"expression":{"arguments":[{"id":1612,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1603,"src":"8168:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},{"expression":{"expression":{"id":1613,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1603,"src":"8173:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":1614,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1201,"src":"8173:7:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8173:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1618,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"8197:4:8","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"id":1617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8189:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1616,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8189:7:8","typeDescriptions":{}}},"id":1619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8189:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"3230","id":1620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8204:2:8","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"}],"id":1611,"name":"write","nodeType":"Identifier","overloadedDeclarations":[1414,1574],"referencedDeclaration":1574,"src":"8162:5:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1204_memory_ptr_$_t_uint256_$_t_bytes32_$_t_uint256_$returns$_t_struct$_buffer_$1204_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,uint256,bytes32,uint256) pure returns (struct BufferChainlink.buffer memory)"}},"id":1621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8162:45:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"functionReturnParameters":1610,"id":1622,"nodeType":"Return","src":"8155:52:8"}]},"documentation":{"id":1600,"nodeType":"StructuredDocumentation","src":"7802:250:8","text":" @dev Appends a bytes20 to the buffer. Resizes if doing so would exceed\n      the capacity of the buffer.\n @param buf The buffer to append to.\n @param data The data to append.\n @return The original buffer, for chhaining."},"id":1624,"implemented":true,"kind":"function","modifiers":[],"name":"appendBytes20","nameLocation":"8064:13:8","nodeType":"FunctionDefinition","parameters":{"id":1606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1603,"mutability":"mutable","name":"buf","nameLocation":"8092:3:8","nodeType":"VariableDeclaration","scope":1624,"src":"8078:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":1602,"nodeType":"UserDefinedTypeName","pathNode":{"id":1601,"name":"buffer","nodeType":"IdentifierPath","referencedDeclaration":1204,"src":"8078:6:8"},"referencedDeclaration":1204,"src":"8078:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"},{"constant":false,"id":1605,"mutability":"mutable","name":"data","nameLocation":"8105:4:8","nodeType":"VariableDeclaration","scope":1624,"src":"8097:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"},"typeName":{"id":1604,"name":"bytes20","nodeType":"ElementaryTypeName","src":"8097:7:8","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}},"visibility":"internal"}],"src":"8077:33:8"},"returnParameters":{"id":1610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1609,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1624,"src":"8134:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":1608,"nodeType":"UserDefinedTypeName","pathNode":{"id":1607,"name":"buffer","nodeType":"IdentifierPath","referencedDeclaration":1204,"src":"8134:6:8"},"referencedDeclaration":1204,"src":"8134:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"}],"src":"8133:15:8"},"scope":1718,"src":"8055:157:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1645,"nodeType":"Block","src":"8562:54:8","statements":[{"expression":{"arguments":[{"id":1637,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"8581:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},{"expression":{"expression":{"id":1638,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"8586:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":1639,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1201,"src":"8586:7:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8586:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1641,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"8602:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"3332","id":1642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8608:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":1636,"name":"write","nodeType":"Identifier","overloadedDeclarations":[1414,1574],"referencedDeclaration":1574,"src":"8575:5:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1204_memory_ptr_$_t_uint256_$_t_bytes32_$_t_uint256_$returns$_t_struct$_buffer_$1204_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,uint256,bytes32,uint256) pure returns (struct BufferChainlink.buffer memory)"}},"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8575:36:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"functionReturnParameters":1635,"id":1644,"nodeType":"Return","src":"8568:43:8"}]},"documentation":{"id":1625,"nodeType":"StructuredDocumentation","src":"8216:249:8","text":" @dev Appends a bytes32 to the buffer. Resizes if doing so would exceed\n      the capacity of the buffer.\n @param buf The buffer to append to.\n @param data The data to append.\n @return The original buffer, for chaining."},"id":1646,"implemented":true,"kind":"function","modifiers":[],"name":"appendBytes32","nameLocation":"8477:13:8","nodeType":"FunctionDefinition","parameters":{"id":1631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1628,"mutability":"mutable","name":"buf","nameLocation":"8505:3:8","nodeType":"VariableDeclaration","scope":1646,"src":"8491:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":1627,"nodeType":"UserDefinedTypeName","pathNode":{"id":1626,"name":"buffer","nodeType":"IdentifierPath","referencedDeclaration":1204,"src":"8491:6:8"},"referencedDeclaration":1204,"src":"8491:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"},{"constant":false,"id":1630,"mutability":"mutable","name":"data","nameLocation":"8518:4:8","nodeType":"VariableDeclaration","scope":1646,"src":"8510:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1629,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8510:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8490:33:8"},"returnParameters":{"id":1635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1634,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1646,"src":"8547:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":1633,"nodeType":"UserDefinedTypeName","pathNode":{"id":1632,"name":"buffer","nodeType":"IdentifierPath","referencedDeclaration":1204,"src":"8547:6:8"},"referencedDeclaration":1204,"src":"8547:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"}],"src":"8546:15:8"},"scope":1718,"src":"8468:148:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1692,"nodeType":"Block","src":"9108:541:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1662,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1656,"src":"9118:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1663,"name":"off","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"9124:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9118:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":1665,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"9130:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":1666,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"capacity","nodeType":"MemberAccess","referencedDeclaration":1203,"src":"9130:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9118:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1679,"nodeType":"IfStatement","src":"9114:73:8","trueBody":{"id":1678,"nodeType":"Block","src":"9144:43:8","statements":[{"expression":{"arguments":[{"id":1669,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"9159:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1670,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1656,"src":"9165:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1671,"name":"off","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"9171:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9165:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1673,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9164:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":1674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9178:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9164:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1668,"name":"resize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"9152:6:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1204_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (struct BufferChainlink.buffer memory,uint256) pure"}},"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9152:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1677,"nodeType":"ExpressionStatement","src":"9152:28:8"}]}},{"assignments":[1681],"declarations":[{"constant":false,"id":1681,"mutability":"mutable","name":"mask","nameLocation":"9201:4:8","nodeType":"VariableDeclaration","scope":1692,"src":"9193:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1680,"name":"uint256","nodeType":"ElementaryTypeName","src":"9193:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1688,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":1682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9209:3:8","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":1683,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1656,"src":"9214:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9209:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1685,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9208:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9221:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9208:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9193:29:8"},{"AST":{"nodeType":"YulBlock","src":"9237:392:8","statements":[{"nodeType":"YulVariableDeclaration","src":"9288:24:8","value":{"arguments":[{"name":"buf","nodeType":"YulIdentifier","src":"9308:3:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9302:5:8"},"nodeType":"YulFunctionCall","src":"9302:10:8"},"variables":[{"name":"bufptr","nodeType":"YulTypedName","src":"9292:6:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9389:38:8","value":{"arguments":[{"arguments":[{"name":"bufptr","nodeType":"YulIdentifier","src":"9409:6:8"},{"name":"off","nodeType":"YulIdentifier","src":"9417:3:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9405:3:8"},"nodeType":"YulFunctionCall","src":"9405:16:8"},{"name":"len","nodeType":"YulIdentifier","src":"9423:3:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9401:3:8"},"nodeType":"YulFunctionCall","src":"9401:26:8"},"variables":[{"name":"dest","nodeType":"YulTypedName","src":"9393:4:8","type":""}]},{"expression":{"arguments":[{"name":"dest","nodeType":"YulIdentifier","src":"9441:4:8"},{"arguments":[{"arguments":[{"arguments":[{"name":"dest","nodeType":"YulIdentifier","src":"9460:4:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9454:5:8"},"nodeType":"YulFunctionCall","src":"9454:11:8"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"9471:4:8"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9467:3:8"},"nodeType":"YulFunctionCall","src":"9467:9:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9450:3:8"},"nodeType":"YulFunctionCall","src":"9450:27:8"},{"name":"data","nodeType":"YulIdentifier","src":"9479:4:8"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"9447:2:8"},"nodeType":"YulFunctionCall","src":"9447:37:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9434:6:8"},"nodeType":"YulFunctionCall","src":"9434:51:8"},"nodeType":"YulExpressionStatement","src":"9434:51:8"},{"body":{"nodeType":"YulBlock","src":"9576:47:8","statements":[{"expression":{"arguments":[{"name":"bufptr","nodeType":"YulIdentifier","src":"9593:6:8"},{"arguments":[{"name":"off","nodeType":"YulIdentifier","src":"9605:3:8"},{"name":"len","nodeType":"YulIdentifier","src":"9610:3:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9601:3:8"},"nodeType":"YulFunctionCall","src":"9601:13:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9586:6:8"},"nodeType":"YulFunctionCall","src":"9586:29:8"},"nodeType":"YulExpressionStatement","src":"9586:29:8"}]},"condition":{"arguments":[{"arguments":[{"name":"off","nodeType":"YulIdentifier","src":"9550:3:8"},{"name":"len","nodeType":"YulIdentifier","src":"9555:3:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9546:3:8"},"nodeType":"YulFunctionCall","src":"9546:13:8"},{"arguments":[{"name":"bufptr","nodeType":"YulIdentifier","src":"9567:6:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9561:5:8"},"nodeType":"YulFunctionCall","src":"9561:13:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9543:2:8"},"nodeType":"YulFunctionCall","src":"9543:32:8"},"nodeType":"YulIf","src":"9540:2:8"}]},"evmVersion":"berlin","externalReferences":[{"declaration":1650,"isOffset":false,"isSlot":false,"src":"9308:3:8","valueSize":1},{"declaration":1654,"isOffset":false,"isSlot":false,"src":"9479:4:8","valueSize":1},{"declaration":1656,"isOffset":false,"isSlot":false,"src":"9423:3:8","valueSize":1},{"declaration":1656,"isOffset":false,"isSlot":false,"src":"9555:3:8","valueSize":1},{"declaration":1656,"isOffset":false,"isSlot":false,"src":"9610:3:8","valueSize":1},{"declaration":1681,"isOffset":false,"isSlot":false,"src":"9471:4:8","valueSize":1},{"declaration":1652,"isOffset":false,"isSlot":false,"src":"9417:3:8","valueSize":1},{"declaration":1652,"isOffset":false,"isSlot":false,"src":"9550:3:8","valueSize":1},{"declaration":1652,"isOffset":false,"isSlot":false,"src":"9605:3:8","valueSize":1}],"id":1689,"nodeType":"InlineAssembly","src":"9228:401:8"},{"expression":{"id":1690,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"9641:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"functionReturnParameters":1661,"id":1691,"nodeType":"Return","src":"9634:10:8"}]},"documentation":{"id":1647,"nodeType":"StructuredDocumentation","src":"8620:351:8","text":" @dev Writes an integer to the buffer. Resizes if doing so would exceed\n      the capacity of the buffer.\n @param buf The buffer to append to.\n @param off The offset to write at.\n @param data The data to append.\n @param len The number of bytes to write (right-aligned).\n @return The original buffer, for chaining."},"id":1693,"implemented":true,"kind":"function","modifiers":[],"name":"writeInt","nameLocation":"8983:8:8","nodeType":"FunctionDefinition","parameters":{"id":1657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1650,"mutability":"mutable","name":"buf","nameLocation":"9011:3:8","nodeType":"VariableDeclaration","scope":1693,"src":"8997:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":1649,"nodeType":"UserDefinedTypeName","pathNode":{"id":1648,"name":"buffer","nodeType":"IdentifierPath","referencedDeclaration":1204,"src":"8997:6:8"},"referencedDeclaration":1204,"src":"8997:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"},{"constant":false,"id":1652,"mutability":"mutable","name":"off","nameLocation":"9028:3:8","nodeType":"VariableDeclaration","scope":1693,"src":"9020:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1651,"name":"uint256","nodeType":"ElementaryTypeName","src":"9020:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1654,"mutability":"mutable","name":"data","nameLocation":"9045:4:8","nodeType":"VariableDeclaration","scope":1693,"src":"9037:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1653,"name":"uint256","nodeType":"ElementaryTypeName","src":"9037:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1656,"mutability":"mutable","name":"len","nameLocation":"9063:3:8","nodeType":"VariableDeclaration","scope":1693,"src":"9055:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1655,"name":"uint256","nodeType":"ElementaryTypeName","src":"9055:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8991:79:8"},"returnParameters":{"id":1661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1660,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1693,"src":"9093:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":1659,"nodeType":"UserDefinedTypeName","pathNode":{"id":1658,"name":"buffer","nodeType":"IdentifierPath","referencedDeclaration":1204,"src":"9093:6:8"},"referencedDeclaration":1204,"src":"9093:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"}],"src":"9092:15:8"},"scope":1718,"src":"8974:675:8","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1716,"nodeType":"Block","src":"10013:58:8","statements":[{"expression":{"arguments":[{"id":1708,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"10035:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},{"expression":{"expression":{"id":1709,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"10040:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":1710,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1201,"src":"10040:7:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"10040:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1712,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"10056:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1713,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"10062:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1707,"name":"writeInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"10026:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1204_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_struct$_buffer_$1204_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,uint256,uint256,uint256) pure returns (struct BufferChainlink.buffer memory)"}},"id":1714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10026:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"functionReturnParameters":1706,"id":1715,"nodeType":"Return","src":"10019:47:8"}]},"documentation":{"id":1694,"nodeType":"StructuredDocumentation","src":"9653:238:8","text":" @dev Appends a byte to the end of the buffer. Resizes if doing so would\n exceed the capacity of the buffer.\n @param buf The buffer to append to.\n @param data The data to append.\n @return The original buffer."},"id":1717,"implemented":true,"kind":"function","modifiers":[],"name":"appendInt","nameLocation":"9903:9:8","nodeType":"FunctionDefinition","parameters":{"id":1702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1697,"mutability":"mutable","name":"buf","nameLocation":"9932:3:8","nodeType":"VariableDeclaration","scope":1717,"src":"9918:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":1696,"nodeType":"UserDefinedTypeName","pathNode":{"id":1695,"name":"buffer","nodeType":"IdentifierPath","referencedDeclaration":1204,"src":"9918:6:8"},"referencedDeclaration":1204,"src":"9918:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"},{"constant":false,"id":1699,"mutability":"mutable","name":"data","nameLocation":"9949:4:8","nodeType":"VariableDeclaration","scope":1717,"src":"9941:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1698,"name":"uint256","nodeType":"ElementaryTypeName","src":"9941:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1701,"mutability":"mutable","name":"len","nameLocation":"9967:3:8","nodeType":"VariableDeclaration","scope":1717,"src":"9959:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1700,"name":"uint256","nodeType":"ElementaryTypeName","src":"9959:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9912:62:8"},"returnParameters":{"id":1706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1705,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1717,"src":"9998:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":1704,"nodeType":"UserDefinedTypeName","pathNode":{"id":1703,"name":"buffer","nodeType":"IdentifierPath","referencedDeclaration":1204,"src":"9998:6:8"},"referencedDeclaration":1204,"src":"9998:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"}],"src":"9997:15:8"},"scope":1718,"src":"9894:177:8","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1719,"src":"441:9632:8","usedErrors":[]}],"src":"32:10042:8"},"id":8},"@chainlink/contracts/src/v0.8/vendor/CBORChainlink.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vendor/CBORChainlink.sol","exportedSymbols":{"BufferChainlink":[1718],"CBORChainlink":[2165]},"id":2166,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1720,"literals":["solidity",">=","0.4",".19"],"nodeType":"PragmaDirective","src":"32:25:9"},{"absolutePath":"@chainlink/contracts/src/v0.8/vendor/BufferChainlink.sol","file":"./BufferChainlink.sol","id":1722,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2166,"sourceUnit":1719,"src":"59:54:9","symbolAliases":[{"foreign":{"id":1721,"name":"BufferChainlink","nodeType":"Identifier","overloadedDeclarations":[],"src":"67:15:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":2165,"linearizedBaseContracts":[2165],"name":"CBORChainlink","nameLocation":"123:13:9","nodeType":"ContractDefinition","nodes":[{"id":1726,"libraryName":{"id":1723,"name":"BufferChainlink","nodeType":"IdentifierPath","referencedDeclaration":1718,"src":"147:15:9"},"nodeType":"UsingForDirective","src":"141:49:9","typeName":{"id":1725,"nodeType":"UserDefinedTypeName","pathNode":{"id":1724,"name":"BufferChainlink.buffer","nodeType":"IdentifierPath","referencedDeclaration":1204,"src":"167:22:9"},"referencedDeclaration":1204,"src":"167:22:9","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_storage_ptr","typeString":"struct BufferChainlink.buffer"}}},{"constant":true,"id":1729,"mutability":"constant","name":"MAJOR_TYPE_INT","nameLocation":"217:14:9","nodeType":"VariableDeclaration","scope":2165,"src":"194:41:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1727,"name":"uint8","nodeType":"ElementaryTypeName","src":"194:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"30","id":1728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"234:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"private"},{"constant":true,"id":1732,"mutability":"constant","name":"MAJOR_TYPE_NEGATIVE_INT","nameLocation":"262:23:9","nodeType":"VariableDeclaration","scope":2165,"src":"239:50:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1730,"name":"uint8","nodeType":"ElementaryTypeName","src":"239:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"31","id":1731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"288:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":1735,"mutability":"constant","name":"MAJOR_TYPE_BYTES","nameLocation":"316:16:9","nodeType":"VariableDeclaration","scope":2165,"src":"293:43:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1733,"name":"uint8","nodeType":"ElementaryTypeName","src":"293:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"32","id":1734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"335:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":true,"id":1738,"mutability":"constant","name":"MAJOR_TYPE_STRING","nameLocation":"363:17:9","nodeType":"VariableDeclaration","scope":2165,"src":"340:44:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1736,"name":"uint8","nodeType":"ElementaryTypeName","src":"340:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"33","id":1737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"383:1:9","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"private"},{"constant":true,"id":1741,"mutability":"constant","name":"MAJOR_TYPE_ARRAY","nameLocation":"411:16:9","nodeType":"VariableDeclaration","scope":2165,"src":"388:43:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1739,"name":"uint8","nodeType":"ElementaryTypeName","src":"388:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"34","id":1740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"430:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"visibility":"private"},{"constant":true,"id":1744,"mutability":"constant","name":"MAJOR_TYPE_MAP","nameLocation":"458:14:9","nodeType":"VariableDeclaration","scope":2165,"src":"435:41:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1742,"name":"uint8","nodeType":"ElementaryTypeName","src":"435:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"35","id":1743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"475:1:9","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"visibility":"private"},{"constant":true,"id":1747,"mutability":"constant","name":"MAJOR_TYPE_TAG","nameLocation":"503:14:9","nodeType":"VariableDeclaration","scope":2165,"src":"480:41:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1745,"name":"uint8","nodeType":"ElementaryTypeName","src":"480:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"36","id":1746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"520:1:9","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"visibility":"private"},{"constant":true,"id":1750,"mutability":"constant","name":"MAJOR_TYPE_CONTENT_FREE","nameLocation":"548:23:9","nodeType":"VariableDeclaration","scope":2165,"src":"525:50:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1748,"name":"uint8","nodeType":"ElementaryTypeName","src":"525:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"37","id":1749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"574:1:9","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"visibility":"private"},{"constant":true,"id":1753,"mutability":"constant","name":"TAG_TYPE_BIGNUM","nameLocation":"603:15:9","nodeType":"VariableDeclaration","scope":2165,"src":"580:42:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1751,"name":"uint8","nodeType":"ElementaryTypeName","src":"580:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"32","id":1752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"621:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":true,"id":1756,"mutability":"constant","name":"TAG_TYPE_NEGATIVE_BIGNUM","nameLocation":"649:24:9","nodeType":"VariableDeclaration","scope":2165,"src":"626:51:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1754,"name":"uint8","nodeType":"ElementaryTypeName","src":"626:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"33","id":1755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"676:1:9","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"private"},{"body":{"id":1885,"nodeType":"Block","src":"785:522:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":1768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1766,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"794:5:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"3233","id":1767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"803:2:9","typeDescriptions":{"typeIdentifier":"t_rational_23_by_1","typeString":"int_const 23"},"value":"23"},"src":"794:11:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":1786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1784,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"876:5:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30784646","id":1785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"885:4:9","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"876:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1809,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"988:5:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"307846464646","id":1810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"997:6:9","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xFFFF"},"src":"988:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":1836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1834,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"1102:5:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30784646464646464646","id":1835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1111:10:9","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xFFFFFFFF"},"src":"1102:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1880,"nodeType":"Block","src":"1216:87:9","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1864,"name":"major","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"1247:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":1865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1256:1:9","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"1247:10:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1867,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1246:12:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"hexValue":"3237","id":1868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1261:2:9","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"1246:17:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1863,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1240:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1862,"name":"uint8","nodeType":"ElementaryTypeName","src":"1240:5:9","typeDescriptions":{}}},"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1240:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"id":1859,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"1224:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":1861,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"appendUint8","nodeType":"MemberAccess","referencedDeclaration":1514,"src":"1224:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1204_memory_ptr_$_t_uint8_$returns$_t_struct$_buffer_$1204_memory_ptr_$bound_to$_t_struct$_buffer_$1204_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,uint8) pure returns (struct BufferChainlink.buffer memory)"}},"id":1871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1224:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":1872,"nodeType":"ExpressionStatement","src":"1224:41:9"},{"expression":{"arguments":[{"id":1876,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"1287:5:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"hexValue":"38","id":1877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1294:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"}],"expression":{"id":1873,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"1273:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":1875,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"appendInt","nodeType":"MemberAccess","referencedDeclaration":1717,"src":"1273:13:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1204_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_struct$_buffer_$1204_memory_ptr_$bound_to$_t_struct$_buffer_$1204_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,uint256,uint256) pure returns (struct BufferChainlink.buffer memory)"}},"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1273:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":1879,"nodeType":"ExpressionStatement","src":"1273:23:9"}]},"id":1881,"nodeType":"IfStatement","src":"1098:205:9","trueBody":{"id":1858,"nodeType":"Block","src":"1123:87:9","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1842,"name":"major","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"1154:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":1843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1163:1:9","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"1154:10:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1845,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1153:12:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"hexValue":"3236","id":1846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1168:2:9","typeDescriptions":{"typeIdentifier":"t_rational_26_by_1","typeString":"int_const 26"},"value":"26"},"src":"1153:17:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1147:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1840,"name":"uint8","nodeType":"ElementaryTypeName","src":"1147:5:9","typeDescriptions":{}}},"id":1848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1147:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"id":1837,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"1131:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":1839,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"appendUint8","nodeType":"MemberAccess","referencedDeclaration":1514,"src":"1131:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1204_memory_ptr_$_t_uint8_$returns$_t_struct$_buffer_$1204_memory_ptr_$bound_to$_t_struct$_buffer_$1204_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,uint8) pure returns (struct BufferChainlink.buffer memory)"}},"id":1849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1131:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":1850,"nodeType":"ExpressionStatement","src":"1131:41:9"},{"expression":{"arguments":[{"id":1854,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"1194:5:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"hexValue":"34","id":1855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1201:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}],"expression":{"id":1851,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"1180:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":1853,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"appendInt","nodeType":"MemberAccess","referencedDeclaration":1717,"src":"1180:13:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1204_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_struct$_buffer_$1204_memory_ptr_$bound_to$_t_struct$_buffer_$1204_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,uint256,uint256) pure returns (struct BufferChainlink.buffer memory)"}},"id":1856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1180:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":1857,"nodeType":"ExpressionStatement","src":"1180:23:9"}]}},"id":1882,"nodeType":"IfStatement","src":"984:319:9","trueBody":{"id":1833,"nodeType":"Block","src":"1005:87:9","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1817,"name":"major","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"1036:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":1818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1045:1:9","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"1036:10:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1820,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1035:12:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"hexValue":"3235","id":1821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1050:2:9","typeDescriptions":{"typeIdentifier":"t_rational_25_by_1","typeString":"int_const 25"},"value":"25"},"src":"1035:17:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1029:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1815,"name":"uint8","nodeType":"ElementaryTypeName","src":"1029:5:9","typeDescriptions":{}}},"id":1823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1029:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"id":1812,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"1013:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":1814,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"appendUint8","nodeType":"MemberAccess","referencedDeclaration":1514,"src":"1013:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1204_memory_ptr_$_t_uint8_$returns$_t_struct$_buffer_$1204_memory_ptr_$bound_to$_t_struct$_buffer_$1204_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,uint8) pure returns (struct BufferChainlink.buffer memory)"}},"id":1824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1013:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":1825,"nodeType":"ExpressionStatement","src":"1013:41:9"},{"expression":{"arguments":[{"id":1829,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"1076:5:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"hexValue":"32","id":1830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1083:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"expression":{"id":1826,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"1062:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":1828,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"appendInt","nodeType":"MemberAccess","referencedDeclaration":1717,"src":"1062:13:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1204_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_struct$_buffer_$1204_memory_ptr_$bound_to$_t_struct$_buffer_$1204_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,uint256,uint256) pure returns (struct BufferChainlink.buffer memory)"}},"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1062:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":1832,"nodeType":"ExpressionStatement","src":"1062:23:9"}]}},"id":1883,"nodeType":"IfStatement","src":"872:431:9","trueBody":{"id":1808,"nodeType":"Block","src":"891:87:9","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1792,"name":"major","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"922:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":1793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"931:1:9","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"922:10:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1795,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"921:12:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"hexValue":"3234","id":1796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"936:2:9","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},"src":"921:17:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1791,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"915:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1790,"name":"uint8","nodeType":"ElementaryTypeName","src":"915:5:9","typeDescriptions":{}}},"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"915:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"id":1787,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"899:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":1789,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"appendUint8","nodeType":"MemberAccess","referencedDeclaration":1514,"src":"899:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1204_memory_ptr_$_t_uint8_$returns$_t_struct$_buffer_$1204_memory_ptr_$bound_to$_t_struct$_buffer_$1204_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,uint8) pure returns (struct BufferChainlink.buffer memory)"}},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"899:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":1800,"nodeType":"ExpressionStatement","src":"899:41:9"},{"expression":{"arguments":[{"id":1804,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"962:5:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"hexValue":"31","id":1805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"969:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":1801,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"948:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":1803,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"appendInt","nodeType":"MemberAccess","referencedDeclaration":1717,"src":"948:13:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1204_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_struct$_buffer_$1204_memory_ptr_$bound_to$_t_struct$_buffer_$1204_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,uint256,uint256) pure returns (struct BufferChainlink.buffer memory)"}},"id":1806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"948:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":1807,"nodeType":"ExpressionStatement","src":"948:23:9"}]}},"id":1884,"nodeType":"IfStatement","src":"791:512:9","trueBody":{"id":1783,"nodeType":"Block","src":"807:59:9","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":1779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1774,"name":"major","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"838:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":1775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"847:1:9","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"838:10:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1777,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"837:12:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"id":1778,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"852:5:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"837:20:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":1773,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"831:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1772,"name":"uint8","nodeType":"ElementaryTypeName","src":"831:5:9","typeDescriptions":{}}},"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"831:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"id":1769,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"815:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":1771,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"appendUint8","nodeType":"MemberAccess","referencedDeclaration":1514,"src":"815:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1204_memory_ptr_$_t_uint8_$returns$_t_struct$_buffer_$1204_memory_ptr_$bound_to$_t_struct$_buffer_$1204_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,uint8) pure returns (struct BufferChainlink.buffer memory)"}},"id":1781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"815:44:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":1782,"nodeType":"ExpressionStatement","src":"815:44:9"}]}}]},"id":1886,"implemented":true,"kind":"function","modifiers":[],"name":"encodeFixedNumeric","nameLocation":"691:18:9","nodeType":"FunctionDefinition","parameters":{"id":1764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1759,"mutability":"mutable","name":"buf","nameLocation":"740:3:9","nodeType":"VariableDeclaration","scope":1886,"src":"710:33:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":1758,"nodeType":"UserDefinedTypeName","pathNode":{"id":1757,"name":"BufferChainlink.buffer","nodeType":"IdentifierPath","referencedDeclaration":1204,"src":"710:22:9"},"referencedDeclaration":1204,"src":"710:22:9","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"},{"constant":false,"id":1761,"mutability":"mutable","name":"major","nameLocation":"751:5:9","nodeType":"VariableDeclaration","scope":1886,"src":"745:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1760,"name":"uint8","nodeType":"ElementaryTypeName","src":"745:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1763,"mutability":"mutable","name":"value","nameLocation":"765:5:9","nodeType":"VariableDeclaration","scope":1886,"src":"758:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1762,"name":"uint64","nodeType":"ElementaryTypeName","src":"758:6:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"709:62:9"},"returnParameters":{"id":1765,"nodeType":"ParameterList","parameters":[],"src":"785:0:9"},"scope":2165,"src":"682:625:9","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1908,"nodeType":"Block","src":"1408:52:9","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1899,"name":"major","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"1437:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":1900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1446:1:9","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"1437:10:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1902,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1436:12:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"hexValue":"3331","id":1903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1451:2:9","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1436:17:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1430:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1897,"name":"uint8","nodeType":"ElementaryTypeName","src":"1430:5:9","typeDescriptions":{}}},"id":1905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1430:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"id":1894,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"1414:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":1896,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"appendUint8","nodeType":"MemberAccess","referencedDeclaration":1514,"src":"1414:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1204_memory_ptr_$_t_uint8_$returns$_t_struct$_buffer_$1204_memory_ptr_$bound_to$_t_struct$_buffer_$1204_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,uint8) pure returns (struct BufferChainlink.buffer memory)"}},"id":1906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1414:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":1907,"nodeType":"ExpressionStatement","src":"1414:41:9"}]},"id":1909,"implemented":true,"kind":"function","modifiers":[],"name":"encodeIndefiniteLengthType","nameLocation":"1320:26:9","nodeType":"FunctionDefinition","parameters":{"id":1892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1889,"mutability":"mutable","name":"buf","nameLocation":"1377:3:9","nodeType":"VariableDeclaration","scope":1909,"src":"1347:33:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":1888,"nodeType":"UserDefinedTypeName","pathNode":{"id":1887,"name":"BufferChainlink.buffer","nodeType":"IdentifierPath","referencedDeclaration":1204,"src":"1347:22:9"},"referencedDeclaration":1204,"src":"1347:22:9","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"},{"constant":false,"id":1891,"mutability":"mutable","name":"major","nameLocation":"1388:5:9","nodeType":"VariableDeclaration","scope":1909,"src":"1382:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1890,"name":"uint8","nodeType":"ElementaryTypeName","src":"1382:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"1346:48:9"},"returnParameters":{"id":1893,"nodeType":"ParameterList","parameters":[],"src":"1408:0:9"},"scope":2165,"src":"1311:149:9","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1937,"nodeType":"Block","src":"1545:155:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1917,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"1554:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307846464646464646464646464646464646","id":1918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1562:18:9","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xFFFFFFFFFFFFFFFF"},"src":"1554:26:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1935,"nodeType":"Block","src":"1627:69:9","statements":[{"expression":{"arguments":[{"id":1927,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"1654:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},{"id":1928,"name":"MAJOR_TYPE_INT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"1659:14:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"arguments":[{"id":1931,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"1682:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1675:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":1929,"name":"uint64","nodeType":"ElementaryTypeName","src":"1675:6:9","typeDescriptions":{}}},"id":1932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1675:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":1926,"name":"encodeFixedNumeric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"1635:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1204_memory_ptr_$_t_uint8_$_t_uint64_$returns$__$","typeString":"function (struct BufferChainlink.buffer memory,uint8,uint64) pure"}},"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1635:54:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1934,"nodeType":"ExpressionStatement","src":"1635:54:9"}]},"id":1936,"nodeType":"IfStatement","src":"1551:145:9","trueBody":{"id":1925,"nodeType":"Block","src":"1582:39:9","statements":[{"expression":{"arguments":[{"id":1921,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"1603:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},{"id":1922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"1608:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1920,"name":"encodeBigNum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"1590:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1204_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (struct BufferChainlink.buffer memory,uint256) pure"}},"id":1923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1590:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1924,"nodeType":"ExpressionStatement","src":"1590:24:9"}]}}]},"id":1938,"implemented":true,"kind":"function","modifiers":[],"name":"encodeUInt","nameLocation":"1473:10:9","nodeType":"FunctionDefinition","parameters":{"id":1915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1912,"mutability":"mutable","name":"buf","nameLocation":"1514:3:9","nodeType":"VariableDeclaration","scope":1938,"src":"1484:33:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":1911,"nodeType":"UserDefinedTypeName","pathNode":{"id":1910,"name":"BufferChainlink.buffer","nodeType":"IdentifierPath","referencedDeclaration":1204,"src":"1484:22:9"},"referencedDeclaration":1204,"src":"1484:22:9","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"},{"constant":false,"id":1914,"mutability":"mutable","name":"value","nameLocation":"1524:5:9","nodeType":"VariableDeclaration","scope":1938,"src":"1519:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1913,"name":"uint","nodeType":"ElementaryTypeName","src":"1519:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1483:47:9"},"returnParameters":{"id":1916,"nodeType":"ParameterList","parameters":[],"src":"1545:0:9"},"scope":2165,"src":"1464:236:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2003,"nodeType":"Block","src":"1783:367:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1946,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"1792:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1800:20:9","subExpression":{"hexValue":"30783130303030303030303030303030303030","id":1947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1801:19:9","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"value":"0x10000000000000000"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_18446744073709551616_by_1","typeString":"int_const -18446744073709551616"}},"src":"1792:28:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1956,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"1876:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307846464646464646464646464646464646","id":1957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1884:18:9","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xFFFFFFFFFFFFFFFF"},"src":"1876:26:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1968,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"1958:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":1969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1967:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1958:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1999,"nodeType":"Block","src":"2054:92:9","statements":[{"expression":{"arguments":[{"id":1985,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"2081:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},{"id":1986,"name":"MAJOR_TYPE_NEGATIVE_INT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"2086:23:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"2126:2:9","subExpression":{"hexValue":"31","id":1991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2127:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1993,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"2131:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2126:10:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2118:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1989,"name":"uint256","nodeType":"ElementaryTypeName","src":"2118:7:9","typeDescriptions":{}}},"id":1995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2118:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2111:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":1987,"name":"uint64","nodeType":"ElementaryTypeName","src":"2111:6:9","typeDescriptions":{}}},"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2111:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":1984,"name":"encodeFixedNumeric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"2062:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1204_memory_ptr_$_t_uint8_$_t_uint64_$returns$__$","typeString":"function (struct BufferChainlink.buffer memory,uint8,uint64) pure"}},"id":1997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2062:77:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1998,"nodeType":"ExpressionStatement","src":"2062:77:9"}]},"id":2000,"nodeType":"IfStatement","src":"1955:191:9","trueBody":{"id":1983,"nodeType":"Block","src":"1970:78:9","statements":[{"expression":{"arguments":[{"id":1972,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"1997:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},{"id":1973,"name":"MAJOR_TYPE_INT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"2002:14:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"arguments":[{"arguments":[{"id":1978,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"2033:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2025:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1976,"name":"uint256","nodeType":"ElementaryTypeName","src":"2025:7:9","typeDescriptions":{}}},"id":1979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2025:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2018:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":1974,"name":"uint64","nodeType":"ElementaryTypeName","src":"2018:6:9","typeDescriptions":{}}},"id":1980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2018:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":1971,"name":"encodeFixedNumeric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"1978:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1204_memory_ptr_$_t_uint8_$_t_uint64_$returns$__$","typeString":"function (struct BufferChainlink.buffer memory,uint8,uint64) pure"}},"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1978:63:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1982,"nodeType":"ExpressionStatement","src":"1978:63:9"}]}},"id":2001,"nodeType":"IfStatement","src":"1873:273:9","trueBody":{"id":1967,"nodeType":"Block","src":"1904:45:9","statements":[{"expression":{"arguments":[{"id":1960,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"1925:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},{"arguments":[{"id":1963,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"1935:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1930:4:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1961,"name":"uint","nodeType":"ElementaryTypeName","src":"1930:4:9","typeDescriptions":{}}},"id":1964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1930:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1959,"name":"encodeBigNum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"1912:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1204_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (struct BufferChainlink.buffer memory,uint256) pure"}},"id":1965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1912:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1966,"nodeType":"ExpressionStatement","src":"1912:30:9"}]}},"id":2002,"nodeType":"IfStatement","src":"1789:357:9","trueBody":{"id":1955,"nodeType":"Block","src":"1822:45:9","statements":[{"expression":{"arguments":[{"id":1951,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"1849:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},{"id":1952,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"1854:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1950,"name":"encodeSignedBigNum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"1830:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1204_memory_ptr_$_t_int256_$returns$__$","typeString":"function (struct BufferChainlink.buffer memory,int256) pure"}},"id":1953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1830:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1954,"nodeType":"ExpressionStatement","src":"1830:30:9"}]}}]},"id":2004,"implemented":true,"kind":"function","modifiers":[],"name":"encodeInt","nameLocation":"1713:9:9","nodeType":"FunctionDefinition","parameters":{"id":1944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1941,"mutability":"mutable","name":"buf","nameLocation":"1753:3:9","nodeType":"VariableDeclaration","scope":2004,"src":"1723:33:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":1940,"nodeType":"UserDefinedTypeName","pathNode":{"id":1939,"name":"BufferChainlink.buffer","nodeType":"IdentifierPath","referencedDeclaration":1204,"src":"1723:22:9"},"referencedDeclaration":1204,"src":"1723:22:9","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"},{"constant":false,"id":1943,"mutability":"mutable","name":"value","nameLocation":"1762:5:9","nodeType":"VariableDeclaration","scope":2004,"src":"1758:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1942,"name":"int","nodeType":"ElementaryTypeName","src":"1758:3:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1722:46:9"},"returnParameters":{"id":1945,"nodeType":"ParameterList","parameters":[],"src":"1783:0:9"},"scope":2165,"src":"1704:446:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2028,"nodeType":"Block","src":"2244:97:9","statements":[{"expression":{"arguments":[{"id":2013,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"2269:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},{"id":2014,"name":"MAJOR_TYPE_BYTES","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"2274:16:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"arguments":[{"expression":{"id":2017,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"2299:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2299:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2292:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":2015,"name":"uint64","nodeType":"ElementaryTypeName","src":"2292:6:9","typeDescriptions":{}}},"id":2019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2292:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":2012,"name":"encodeFixedNumeric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"2250:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1204_memory_ptr_$_t_uint8_$_t_uint64_$returns$__$","typeString":"function (struct BufferChainlink.buffer memory,uint8,uint64) pure"}},"id":2020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2250:63:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2021,"nodeType":"ExpressionStatement","src":"2250:63:9"},{"expression":{"arguments":[{"id":2025,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"2330:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2022,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"2319:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":2024,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"append","nodeType":"MemberAccess","referencedDeclaration":1461,"src":"2319:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1204_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_struct$_buffer_$1204_memory_ptr_$bound_to$_t_struct$_buffer_$1204_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,bytes memory) pure returns (struct BufferChainlink.buffer memory)"}},"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2319:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":2027,"nodeType":"ExpressionStatement","src":"2319:17:9"}]},"id":2029,"implemented":true,"kind":"function","modifiers":[],"name":"encodeBytes","nameLocation":"2163:11:9","nodeType":"FunctionDefinition","parameters":{"id":2010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2007,"mutability":"mutable","name":"buf","nameLocation":"2205:3:9","nodeType":"VariableDeclaration","scope":2029,"src":"2175:33:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":2006,"nodeType":"UserDefinedTypeName","pathNode":{"id":2005,"name":"BufferChainlink.buffer","nodeType":"IdentifierPath","referencedDeclaration":1204,"src":"2175:22:9"},"referencedDeclaration":1204,"src":"2175:22:9","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"},{"constant":false,"id":2009,"mutability":"mutable","name":"value","nameLocation":"2223:5:9","nodeType":"VariableDeclaration","scope":2029,"src":"2210:18:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2008,"name":"bytes","nodeType":"ElementaryTypeName","src":"2210:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2174:55:9"},"returnParameters":{"id":2011,"nodeType":"ParameterList","parameters":[],"src":"2244:0:9"},"scope":2165,"src":"2154:187:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2059,"nodeType":"Block","src":"2428:115:9","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":2042,"name":"MAJOR_TYPE_TAG","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"2457:14:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":2043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2475:1:9","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"2457:19:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2045,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2456:21:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"id":2046,"name":"TAG_TYPE_BIGNUM","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"2480:15:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"2456:39:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2450:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2040,"name":"uint8","nodeType":"ElementaryTypeName","src":"2450:5:9","typeDescriptions":{}}},"id":2048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2450:46:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"id":2037,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"2434:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":2039,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"appendUint8","nodeType":"MemberAccess","referencedDeclaration":1514,"src":"2434:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1204_memory_ptr_$_t_uint8_$returns$_t_struct$_buffer_$1204_memory_ptr_$bound_to$_t_struct$_buffer_$1204_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,uint8) pure returns (struct BufferChainlink.buffer memory)"}},"id":2049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2434:63:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":2050,"nodeType":"ExpressionStatement","src":"2434:63:9"},{"expression":{"arguments":[{"id":2052,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"2515:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},{"arguments":[{"id":2055,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"2531:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2053,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2520:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"2520:10:9","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2520:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2051,"name":"encodeBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"2503:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1204_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct BufferChainlink.buffer memory,bytes memory) pure"}},"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2503:35:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2058,"nodeType":"ExpressionStatement","src":"2503:35:9"}]},"id":2060,"implemented":true,"kind":"function","modifiers":[],"name":"encodeBigNum","nameLocation":"2354:12:9","nodeType":"FunctionDefinition","parameters":{"id":2035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2032,"mutability":"mutable","name":"buf","nameLocation":"2397:3:9","nodeType":"VariableDeclaration","scope":2060,"src":"2367:33:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":2031,"nodeType":"UserDefinedTypeName","pathNode":{"id":2030,"name":"BufferChainlink.buffer","nodeType":"IdentifierPath","referencedDeclaration":1204,"src":"2367:22:9"},"referencedDeclaration":1204,"src":"2367:22:9","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"},{"constant":false,"id":2034,"mutability":"mutable","name":"value","nameLocation":"2407:5:9","nodeType":"VariableDeclaration","scope":2060,"src":"2402:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2033,"name":"uint","nodeType":"ElementaryTypeName","src":"2402:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2366:47:9"},"returnParameters":{"id":2036,"nodeType":"ParameterList","parameters":[],"src":"2428:0:9"},"scope":2165,"src":"2345:198:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2096,"nodeType":"Block","src":"2635:138:9","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":2073,"name":"MAJOR_TYPE_TAG","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"2664:14:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":2074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2682:1:9","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"2664:19:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2076,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2663:21:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"id":2077,"name":"TAG_TYPE_NEGATIVE_BIGNUM","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"2687:24:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"2663:48:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2657:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2071,"name":"uint8","nodeType":"ElementaryTypeName","src":"2657:5:9","typeDescriptions":{}}},"id":2079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2657:55:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"id":2068,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"2641:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":2070,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"appendUint8","nodeType":"MemberAccess","referencedDeclaration":1514,"src":"2641:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1204_memory_ptr_$_t_uint8_$returns$_t_struct$_buffer_$1204_memory_ptr_$bound_to$_t_struct$_buffer_$1204_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,uint8) pure returns (struct BufferChainlink.buffer memory)"}},"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2641:72:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":2081,"nodeType":"ExpressionStatement","src":"2641:72:9"},{"expression":{"arguments":[{"id":2083,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"2731:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"2755:2:9","subExpression":{"hexValue":"31","id":2088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2756:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2090,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"2760:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2755:10:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2747:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2086,"name":"uint256","nodeType":"ElementaryTypeName","src":"2747:7:9","typeDescriptions":{}}},"id":2092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2747:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2084,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2736:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"2736:10:9","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2736:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2082,"name":"encodeBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"2719:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1204_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct BufferChainlink.buffer memory,bytes memory) pure"}},"id":2094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2719:49:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2095,"nodeType":"ExpressionStatement","src":"2719:49:9"}]},"id":2097,"implemented":true,"kind":"function","modifiers":[],"name":"encodeSignedBigNum","nameLocation":"2556:18:9","nodeType":"FunctionDefinition","parameters":{"id":2066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2063,"mutability":"mutable","name":"buf","nameLocation":"2605:3:9","nodeType":"VariableDeclaration","scope":2097,"src":"2575:33:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":2062,"nodeType":"UserDefinedTypeName","pathNode":{"id":2061,"name":"BufferChainlink.buffer","nodeType":"IdentifierPath","referencedDeclaration":1204,"src":"2575:22:9"},"referencedDeclaration":1204,"src":"2575:22:9","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"},{"constant":false,"id":2065,"mutability":"mutable","name":"input","nameLocation":"2614:5:9","nodeType":"VariableDeclaration","scope":2097,"src":"2610:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2064,"name":"int","nodeType":"ElementaryTypeName","src":"2610:3:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2574:46:9"},"returnParameters":{"id":2067,"nodeType":"ParameterList","parameters":[],"src":"2635:0:9"},"scope":2165,"src":"2547:226:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2127,"nodeType":"Block","src":"2869:112:9","statements":[{"expression":{"arguments":[{"id":2106,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"2894:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},{"id":2107,"name":"MAJOR_TYPE_STRING","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"2899:17:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"arguments":[{"expression":{"arguments":[{"id":2112,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2102,"src":"2931:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2111,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2925:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2110,"name":"bytes","nodeType":"ElementaryTypeName","src":"2925:5:9","typeDescriptions":{}}},"id":2113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2925:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2925:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2918:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":2108,"name":"uint64","nodeType":"ElementaryTypeName","src":"2918:6:9","typeDescriptions":{}}},"id":2115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2918:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":2105,"name":"encodeFixedNumeric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"2875:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1204_memory_ptr_$_t_uint8_$_t_uint64_$returns$__$","typeString":"function (struct BufferChainlink.buffer memory,uint8,uint64) pure"}},"id":2116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2875:71:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2117,"nodeType":"ExpressionStatement","src":"2875:71:9"},{"expression":{"arguments":[{"arguments":[{"id":2123,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2102,"src":"2969:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2963:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2121,"name":"bytes","nodeType":"ElementaryTypeName","src":"2963:5:9","typeDescriptions":{}}},"id":2124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2963:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2118,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"2952:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":2120,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"append","nodeType":"MemberAccess","referencedDeclaration":1461,"src":"2952:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1204_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_struct$_buffer_$1204_memory_ptr_$bound_to$_t_struct$_buffer_$1204_memory_ptr_$","typeString":"function (struct BufferChainlink.buffer memory,bytes memory) pure returns (struct BufferChainlink.buffer memory)"}},"id":2125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2952:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},"id":2126,"nodeType":"ExpressionStatement","src":"2952:24:9"}]},"id":2128,"implemented":true,"kind":"function","modifiers":[],"name":"encodeString","nameLocation":"2786:12:9","nodeType":"FunctionDefinition","parameters":{"id":2103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2100,"mutability":"mutable","name":"buf","nameLocation":"2829:3:9","nodeType":"VariableDeclaration","scope":2128,"src":"2799:33:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":2099,"nodeType":"UserDefinedTypeName","pathNode":{"id":2098,"name":"BufferChainlink.buffer","nodeType":"IdentifierPath","referencedDeclaration":1204,"src":"2799:22:9"},"referencedDeclaration":1204,"src":"2799:22:9","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"},{"constant":false,"id":2102,"mutability":"mutable","name":"value","nameLocation":"2848:5:9","nodeType":"VariableDeclaration","scope":2128,"src":"2834:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2101,"name":"string","nodeType":"ElementaryTypeName","src":"2834:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2798:56:9"},"returnParameters":{"id":2104,"nodeType":"ParameterList","parameters":[],"src":"2869:0:9"},"scope":2165,"src":"2777:204:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2139,"nodeType":"Block","src":"3054:60:9","statements":[{"expression":{"arguments":[{"id":2135,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2131,"src":"3087:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},{"id":2136,"name":"MAJOR_TYPE_ARRAY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1741,"src":"3092:16:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2134,"name":"encodeIndefiniteLengthType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"3060:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1204_memory_ptr_$_t_uint8_$returns$__$","typeString":"function (struct BufferChainlink.buffer memory,uint8) pure"}},"id":2137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3060:49:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2138,"nodeType":"ExpressionStatement","src":"3060:49:9"}]},"id":2140,"implemented":true,"kind":"function","modifiers":[],"name":"startArray","nameLocation":"2994:10:9","nodeType":"FunctionDefinition","parameters":{"id":2132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2131,"mutability":"mutable","name":"buf","nameLocation":"3035:3:9","nodeType":"VariableDeclaration","scope":2140,"src":"3005:33:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":2130,"nodeType":"UserDefinedTypeName","pathNode":{"id":2129,"name":"BufferChainlink.buffer","nodeType":"IdentifierPath","referencedDeclaration":1204,"src":"3005:22:9"},"referencedDeclaration":1204,"src":"3005:22:9","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"}],"src":"3004:35:9"},"returnParameters":{"id":2133,"nodeType":"ParameterList","parameters":[],"src":"3054:0:9"},"scope":2165,"src":"2985:129:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2151,"nodeType":"Block","src":"3185:58:9","statements":[{"expression":{"arguments":[{"id":2147,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2143,"src":"3218:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},{"id":2148,"name":"MAJOR_TYPE_MAP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"3223:14:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2146,"name":"encodeIndefiniteLengthType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"3191:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1204_memory_ptr_$_t_uint8_$returns$__$","typeString":"function (struct BufferChainlink.buffer memory,uint8) pure"}},"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3191:47:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2150,"nodeType":"ExpressionStatement","src":"3191:47:9"}]},"id":2152,"implemented":true,"kind":"function","modifiers":[],"name":"startMap","nameLocation":"3127:8:9","nodeType":"FunctionDefinition","parameters":{"id":2144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2143,"mutability":"mutable","name":"buf","nameLocation":"3166:3:9","nodeType":"VariableDeclaration","scope":2152,"src":"3136:33:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":2142,"nodeType":"UserDefinedTypeName","pathNode":{"id":2141,"name":"BufferChainlink.buffer","nodeType":"IdentifierPath","referencedDeclaration":1204,"src":"3136:22:9"},"referencedDeclaration":1204,"src":"3136:22:9","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"}],"src":"3135:35:9"},"returnParameters":{"id":2145,"nodeType":"ParameterList","parameters":[],"src":"3185:0:9"},"scope":2165,"src":"3118:125:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2163,"nodeType":"Block","src":"3317:67:9","statements":[{"expression":{"arguments":[{"id":2159,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"3350:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"}},{"id":2160,"name":"MAJOR_TYPE_CONTENT_FREE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"3355:23:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2158,"name":"encodeIndefiniteLengthType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"3323:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1204_memory_ptr_$_t_uint8_$returns$__$","typeString":"function (struct BufferChainlink.buffer memory,uint8) pure"}},"id":2161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3323:56:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2162,"nodeType":"ExpressionStatement","src":"3323:56:9"}]},"id":2164,"implemented":true,"kind":"function","modifiers":[],"name":"endSequence","nameLocation":"3256:11:9","nodeType":"FunctionDefinition","parameters":{"id":2156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2155,"mutability":"mutable","name":"buf","nameLocation":"3298:3:9","nodeType":"VariableDeclaration","scope":2164,"src":"3268:33:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_memory_ptr","typeString":"struct BufferChainlink.buffer"},"typeName":{"id":2154,"nodeType":"UserDefinedTypeName","pathNode":{"id":2153,"name":"BufferChainlink.buffer","nodeType":"IdentifierPath","referencedDeclaration":1204,"src":"3268:22:9"},"referencedDeclaration":1204,"src":"3268:22:9","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1204_storage_ptr","typeString":"struct BufferChainlink.buffer"}},"visibility":"internal"}],"src":"3267:35:9"},"returnParameters":{"id":2157,"nodeType":"ParameterList","parameters":[],"src":"3317:0:9"},"scope":2165,"src":"3247:137:9","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2166,"src":"115:3271:9","usedErrors":[]}],"src":"32:3355:9"},"id":9},"@chainlink/contracts/src/v0.8/vendor/ENSResolver.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vendor/ENSResolver.sol","exportedSymbols":{"ENSResolver":[2175]},"id":2176,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2167,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:10"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","fullyImplemented":false,"id":2175,"linearizedBaseContracts":[2175],"name":"ENSResolver","nameLocation":"75:11:10","nodeType":"ContractDefinition","nodes":[{"functionSelector":"3b3b57de","id":2174,"implemented":false,"kind":"function","modifiers":[],"name":"addr","nameLocation":"100:4:10","nodeType":"FunctionDefinition","parameters":{"id":2170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2169,"mutability":"mutable","name":"node","nameLocation":"113:4:10","nodeType":"VariableDeclaration","scope":2174,"src":"105:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"105:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"104:14:10"},"returnParameters":{"id":2173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2172,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2174,"src":"148:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2171,"name":"address","nodeType":"ElementaryTypeName","src":"148:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"147:9:10"},"scope":2175,"src":"91:66:10","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2176,"src":"57:102:10","usedErrors":[]}],"src":"32:128:10"},"id":10},"contracts/connectors/Twitter.sol":{"ast":{"absolutePath":"contracts/connectors/Twitter.sol","exportedSymbols":{"BufferChainlink":[1718],"CBORChainlink":[2165],"Chainlink":[268],"ChainlinkClient":[861],"ChainlinkRequestInterface":[894],"Clones":[3206],"Context":[3360],"Counters":[3434],"ENSInterface":[974],"ENSResolver_Chainlink":[2175],"EnumerableMap":[3914],"EnumerableSet":[4513],"LinkTokenInterface":[1069],"OperatorInterface":[1149],"OracleInterface":[1188],"Ownable":[3126],"Pausable":[3298],"PointerInterface":[1196],"ReentrancyGuard":[3338],"TwitterV1":[3021]},"id":3022,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2177,"literals":["solidity",">=","0.8",".6"],"nodeType":"PragmaDirective","src":"32:24:11"},{"absolutePath":"@chainlink/contracts/src/v0.8/ChainlinkClient.sol","file":"@chainlink/contracts/src/v0.8/ChainlinkClient.sol","id":2178,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3022,"sourceUnit":862,"src":"58:59:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"vendor/openzeppelin/contracts/access/Ownable.sol","file":"../../vendor/openzeppelin/contracts/access/Ownable.sol","id":2179,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3022,"sourceUnit":3127,"src":"119:64:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"vendor/openzeppelin/contracts/proxy/Clones.sol","file":"../../vendor/openzeppelin/contracts/proxy/Clones.sol","id":2180,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3022,"sourceUnit":3207,"src":"184:62:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"vendor/openzeppelin/contracts/security/Pausable.sol","file":"../../vendor/openzeppelin/contracts/security/Pausable.sol","id":2181,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3022,"sourceUnit":3299,"src":"247:67:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"vendor/openzeppelin/contracts/security/ReentrancyGuard.sol","file":"../../vendor/openzeppelin/contracts/security/ReentrancyGuard.sol","id":2182,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3022,"sourceUnit":3339,"src":"316:74:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"vendor/openzeppelin/contracts/utils/structs/EnumerableMap.sol","file":"../../vendor/openzeppelin/contracts/utils/structs/EnumerableMap.sol","id":2183,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3022,"sourceUnit":3915,"src":"392:77:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"vendor/openzeppelin/contracts/utils/Counters.sol","file":"../../vendor/openzeppelin/contracts/utils/Counters.sol","id":2184,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3022,"sourceUnit":3435,"src":"470:64:11","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2185,"name":"Pausable","nodeType":"IdentifierPath","referencedDeclaration":3298,"src":"558:8:11"},"id":2186,"nodeType":"InheritanceSpecifier","src":"558:8:11"},{"baseName":{"id":2187,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":3126,"src":"568:7:11"},"id":2188,"nodeType":"InheritanceSpecifier","src":"568:7:11"},{"baseName":{"id":2189,"name":"ReentrancyGuard","nodeType":"IdentifierPath","referencedDeclaration":3338,"src":"577:15:11"},"id":2190,"nodeType":"InheritanceSpecifier","src":"577:15:11"},{"baseName":{"id":2191,"name":"ChainlinkClient","nodeType":"IdentifierPath","referencedDeclaration":861,"src":"594:15:11"},"id":2192,"nodeType":"InheritanceSpecifier","src":"594:15:11"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3021,"linearizedBaseContracts":[3021,861,3338,3126,3298,3360],"name":"TwitterV1","nameLocation":"545:9:11","nodeType":"ContractDefinition","nodes":[{"id":2196,"libraryName":{"id":2193,"name":"Chainlink","nodeType":"IdentifierPath","referencedDeclaration":268,"src":"620:9:11"},"nodeType":"UsingForDirective","src":"614:38:11","typeName":{"id":2195,"nodeType":"UserDefinedTypeName","pathNode":{"id":2194,"name":"Chainlink.Request","nodeType":"IdentifierPath","referencedDeclaration":25,"src":"634:17:11"},"referencedDeclaration":25,"src":"634:17:11","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_storage_ptr","typeString":"struct Chainlink.Request"}}},{"id":2200,"libraryName":{"id":2197,"name":"EnumerableMap","nodeType":"IdentifierPath","referencedDeclaration":3914,"src":"661:13:11"},"nodeType":"UsingForDirective","src":"655:55:11","typeName":{"id":2199,"nodeType":"UserDefinedTypeName","pathNode":{"id":2198,"name":"EnumerableMap.UintToAddressMap","nodeType":"IdentifierPath","referencedDeclaration":3680,"src":"679:30:11"},"referencedDeclaration":3680,"src":"679:30:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$3680_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"}}},{"id":2204,"libraryName":{"id":2201,"name":"Counters","nodeType":"IdentifierPath","referencedDeclaration":3434,"src":"719:8:11"},"nodeType":"UsingForDirective","src":"713:36:11","typeName":{"id":2203,"nodeType":"UserDefinedTypeName","pathNode":{"id":2202,"name":"Counters.Counter","nodeType":"IdentifierPath","referencedDeclaration":3366,"src":"732:16:11"},"referencedDeclaration":3366,"src":"732:16:11","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3366_storage_ptr","typeString":"struct Counters.Counter"}}},{"constant":false,"functionSelector":"aced1661","id":2206,"mutability":"mutable","name":"keeper","nameLocation":"768:6:11","nodeType":"VariableDeclaration","scope":3021,"src":"753:21:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2205,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"c2939d97","id":2208,"mutability":"immutable","name":"jobId","nameLocation":"804:5:11","nodeType":"VariableDeclaration","scope":3021,"src":"779:30:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2207,"name":"bytes32","nodeType":"ElementaryTypeName","src":"779:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"id":2210,"mutability":"immutable","name":"fee","nameLocation":"839:3:11","nodeType":"VariableDeclaration","scope":3021,"src":"813:29:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2209,"name":"uint256","nodeType":"ElementaryTypeName","src":"813:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"functionSelector":"dc4d5efb","id":2212,"mutability":"mutable","name":"requestBaseURI","nameLocation":"861:14:11","nodeType":"VariableDeclaration","scope":3021,"src":"847:28:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2211,"name":"string","nodeType":"ElementaryTypeName","src":"847:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"constant":false,"id":2215,"mutability":"mutable","name":"users","nameLocation":"919:5:11","nodeType":"VariableDeclaration","scope":3021,"src":"880:44:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$3680_storage","typeString":"struct EnumerableMap.UintToAddressMap"},"typeName":{"id":2214,"nodeType":"UserDefinedTypeName","pathNode":{"id":2213,"name":"EnumerableMap.UintToAddressMap","nodeType":"IdentifierPath","referencedDeclaration":3680,"src":"880:30:11"},"referencedDeclaration":3680,"src":"880:30:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$3680_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"}},"visibility":"private"},{"constant":false,"id":2217,"mutability":"mutable","name":"lastCampaignId","nameLocation":"937:14:11","nodeType":"VariableDeclaration","scope":3021,"src":"929:22:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2216,"name":"uint256","nodeType":"ElementaryTypeName","src":"929:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"canonicalName":"TwitterV1.Campaign","id":2232,"members":[{"constant":false,"id":2219,"mutability":"mutable","name":"campaignId","nameLocation":"986:10:11","nodeType":"VariableDeclaration","scope":2232,"src":"978:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2218,"name":"uint256","nodeType":"ElementaryTypeName","src":"978:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2221,"mutability":"mutable","name":"name","nameLocation":"1009:4:11","nodeType":"VariableDeclaration","scope":2232,"src":"1002:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2220,"name":"string","nodeType":"ElementaryTypeName","src":"1002:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2223,"mutability":"mutable","name":"company","nameLocation":"1027:7:11","nodeType":"VariableDeclaration","scope":2232,"src":"1019:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2222,"name":"address","nodeType":"ElementaryTypeName","src":"1019:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2225,"mutability":"mutable","name":"budget","nameLocation":"1048:6:11","nodeType":"VariableDeclaration","scope":2232,"src":"1040:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2224,"name":"uint256","nodeType":"ElementaryTypeName","src":"1040:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2227,"mutability":"mutable","name":"validationThreshold","nameLocation":"1068:19:11","nodeType":"VariableDeclaration","scope":2232,"src":"1060:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2226,"name":"uint256","nodeType":"ElementaryTypeName","src":"1060:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2229,"mutability":"mutable","name":"partakersLimit","nameLocation":"1101:14:11","nodeType":"VariableDeclaration","scope":2232,"src":"1093:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2228,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2231,"mutability":"mutable","name":"isClosed","nameLocation":"1126:8:11","nodeType":"VariableDeclaration","scope":2232,"src":"1121:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2230,"name":"bool","nodeType":"ElementaryTypeName","src":"1121:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Campaign","nameLocation":"963:8:11","nodeType":"StructDefinition","scope":3021,"src":"956:183:11","visibility":"public"},{"canonicalName":"TwitterV1.CampaignContributors","id":2243,"members":[{"constant":false,"id":2234,"mutability":"mutable","name":"contributorsCount","nameLocation":"1185:17:11","nodeType":"VariableDeclaration","scope":2243,"src":"1177:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2233,"name":"uint256","nodeType":"ElementaryTypeName","src":"1177:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2238,"mutability":"mutable","name":"contributorsByAddress","nameLocation":"1233:21:11","nodeType":"VariableDeclaration","scope":2243,"src":"1208:46:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":2237,"keyType":{"id":2235,"name":"address","nodeType":"ElementaryTypeName","src":"1216:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1208:24:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":2236,"name":"bool","nodeType":"ElementaryTypeName","src":"1227:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":2242,"mutability":"mutable","name":"contributorsClaimStatus","nameLocation":"1285:23:11","nodeType":"VariableDeclaration","scope":2243,"src":"1260:48:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":2241,"keyType":{"id":2239,"name":"address","nodeType":"ElementaryTypeName","src":"1268:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1260:24:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":2240,"name":"bool","nodeType":"ElementaryTypeName","src":"1279:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"}],"name":"CampaignContributors","nameLocation":"1150:20:11","nodeType":"StructDefinition","scope":3021,"src":"1143:170:11","visibility":"public"},{"constant":false,"id":2247,"mutability":"mutable","name":"campaigns","nameLocation":"1328:9:11","nodeType":"VariableDeclaration","scope":3021,"src":"1317:20:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Campaign_$2232_storage_$dyn_storage","typeString":"struct TwitterV1.Campaign[]"},"typeName":{"baseType":{"id":2245,"nodeType":"UserDefinedTypeName","pathNode":{"id":2244,"name":"Campaign","nodeType":"IdentifierPath","referencedDeclaration":2232,"src":"1317:8:11"},"referencedDeclaration":2232,"src":"1317:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$2232_storage_ptr","typeString":"struct TwitterV1.Campaign"}},"id":2246,"nodeType":"ArrayTypeName","src":"1317:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Campaign_$2232_storage_$dyn_storage_ptr","typeString":"struct TwitterV1.Campaign[]"}},"visibility":"internal"},{"constant":false,"id":2252,"mutability":"mutable","name":"campaignById","nameLocation":"1370:12:11","nodeType":"VariableDeclaration","scope":3021,"src":"1341:41:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Campaign_$2232_storage_$","typeString":"mapping(uint256 => struct TwitterV1.Campaign)"},"typeName":{"id":2251,"keyType":{"id":2248,"name":"uint256","nodeType":"ElementaryTypeName","src":"1349:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1341:28:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Campaign_$2232_storage_$","typeString":"mapping(uint256 => struct TwitterV1.Campaign)"},"valueType":{"id":2250,"nodeType":"UserDefinedTypeName","pathNode":{"id":2249,"name":"Campaign","nodeType":"IdentifierPath","referencedDeclaration":2232,"src":"1360:8:11"},"referencedDeclaration":2232,"src":"1360:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$2232_storage_ptr","typeString":"struct TwitterV1.Campaign"}}},"visibility":"internal"},{"constant":false,"id":2257,"mutability":"mutable","name":"campaignContributorsByCampaignId","nameLocation":"1427:32:11","nodeType":"VariableDeclaration","scope":3021,"src":"1386:73:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_CampaignContributors_$2243_storage_$","typeString":"mapping(uint256 => struct TwitterV1.CampaignContributors)"},"typeName":{"id":2256,"keyType":{"id":2253,"name":"uint256","nodeType":"ElementaryTypeName","src":"1394:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1386:40:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_CampaignContributors_$2243_storage_$","typeString":"mapping(uint256 => struct TwitterV1.CampaignContributors)"},"valueType":{"id":2255,"nodeType":"UserDefinedTypeName","pathNode":{"id":2254,"name":"CampaignContributors","nodeType":"IdentifierPath","referencedDeclaration":2243,"src":"1405:20:11"},"referencedDeclaration":2243,"src":"1405:20:11","typeDescriptions":{"typeIdentifier":"t_struct$_CampaignContributors_$2243_storage_ptr","typeString":"struct TwitterV1.CampaignContributors"}}},"visibility":"internal"},{"constant":true,"functionSelector":"f2b3c809","id":2260,"mutability":"constant","name":"MAX_TREASURY_FEE","nameLocation":"1488:16:11","nodeType":"VariableDeclaration","scope":3021,"src":"1464:47:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2258,"name":"uint256","nodeType":"ElementaryTypeName","src":"1464:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31303030","id":2259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1507:4:11","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"visibility":"public"},{"constant":false,"functionSelector":"cc32d176","id":2262,"mutability":"mutable","name":"treasuryFee","nameLocation":"1538:11:11","nodeType":"VariableDeclaration","scope":3021,"src":"1523:26:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2261,"name":"uint256","nodeType":"ElementaryTypeName","src":"1523:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"368acb09","id":2264,"mutability":"mutable","name":"treasuryAmount","nameLocation":"1614:14:11","nodeType":"VariableDeclaration","scope":3021,"src":"1599:29:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2263,"name":"uint256","nodeType":"ElementaryTypeName","src":"1599:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"anonymous":false,"documentation":{"id":2265,"nodeType":"StructuredDocumentation","src":"1698:63:11","text":" @notice Called when a request to sign up is made"},"id":2271,"name":"SignUpRequested","nameLocation":"1770:15:11","nodeType":"EventDefinition","parameters":{"id":2270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2267,"indexed":true,"mutability":"mutable","name":"userId","nameLocation":"1802:6:11","nodeType":"VariableDeclaration","scope":2271,"src":"1786:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2266,"name":"uint256","nodeType":"ElementaryTypeName","src":"1786:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2269,"indexed":true,"mutability":"mutable","name":"requestId","nameLocation":"1826:9:11","nodeType":"VariableDeclaration","scope":2271,"src":"1810:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2268,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1810:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1785:51:11"},"src":"1764:73:11"},{"anonymous":false,"documentation":{"id":2272,"nodeType":"StructuredDocumentation","src":"1840:51:11","text":" @notice Called when a user signed up"},"id":2278,"name":"SignedUp","nameLocation":"1900:8:11","nodeType":"EventDefinition","parameters":{"id":2277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2274,"indexed":true,"mutability":"mutable","name":"userId","nameLocation":"1925:6:11","nodeType":"VariableDeclaration","scope":2278,"src":"1909:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2273,"name":"uint256","nodeType":"ElementaryTypeName","src":"1909:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2276,"indexed":false,"mutability":"mutable","name":"userAddress","nameLocation":"1941:11:11","nodeType":"VariableDeclaration","scope":2278,"src":"1933:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2275,"name":"address","nodeType":"ElementaryTypeName","src":"1933:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1908:45:11"},"src":"1894:60:11"},{"anonymous":false,"id":2284,"name":"CampaignCreated","nameLocation":"1964:15:11","nodeType":"EventDefinition","parameters":{"id":2283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2280,"indexed":false,"mutability":"mutable","name":"campaignId","nameLocation":"1988:10:11","nodeType":"VariableDeclaration","scope":2284,"src":"1980:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2279,"name":"uint256","nodeType":"ElementaryTypeName","src":"1980:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2282,"indexed":false,"mutability":"mutable","name":"company","nameLocation":"2008:7:11","nodeType":"VariableDeclaration","scope":2284,"src":"2000:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2281,"name":"address","nodeType":"ElementaryTypeName","src":"2000:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1979:37:11"},"src":"1958:59:11"},{"anonymous":false,"id":2288,"name":"CampaignClosed","nameLocation":"2026:14:11","nodeType":"EventDefinition","parameters":{"id":2287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2286,"indexed":false,"mutability":"mutable","name":"campaignId","nameLocation":"2049:10:11","nodeType":"VariableDeclaration","scope":2288,"src":"2041:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2285,"name":"uint256","nodeType":"ElementaryTypeName","src":"2041:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2040:20:11"},"src":"2020:41:11"},{"anonymous":false,"id":2294,"name":"ContributorAdded","nameLocation":"2070:16:11","nodeType":"EventDefinition","parameters":{"id":2293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2290,"indexed":false,"mutability":"mutable","name":"campaignId","nameLocation":"2095:10:11","nodeType":"VariableDeclaration","scope":2294,"src":"2087:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2289,"name":"uint256","nodeType":"ElementaryTypeName","src":"2087:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2292,"indexed":false,"mutability":"mutable","name":"contributor","nameLocation":"2115:11:11","nodeType":"VariableDeclaration","scope":2294,"src":"2107:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2291,"name":"address","nodeType":"ElementaryTypeName","src":"2107:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2086:41:11"},"src":"2064:64:11"},{"anonymous":false,"id":2302,"name":"ContributorRetributed","nameLocation":"2137:21:11","nodeType":"EventDefinition","parameters":{"id":2301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2296,"indexed":false,"mutability":"mutable","name":"campaignId","nameLocation":"2167:10:11","nodeType":"VariableDeclaration","scope":2302,"src":"2159:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2295,"name":"uint256","nodeType":"ElementaryTypeName","src":"2159:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2298,"indexed":false,"mutability":"mutable","name":"contributor","nameLocation":"2187:11:11","nodeType":"VariableDeclaration","scope":2302,"src":"2179:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2297,"name":"address","nodeType":"ElementaryTypeName","src":"2179:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2300,"indexed":false,"mutability":"mutable","name":"retribution","nameLocation":"2208:11:11","nodeType":"VariableDeclaration","scope":2302,"src":"2200:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2299,"name":"uint256","nodeType":"ElementaryTypeName","src":"2200:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2158:62:11"},"src":"2131:90:11"},{"body":{"id":2345,"nodeType":"Block","src":"2538:247:11","statements":[{"expression":{"arguments":[{"id":2317,"name":"_link","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"2562:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2316,"name":"setChainlinkToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"2544:17:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2544:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2319,"nodeType":"ExpressionStatement","src":"2544:24:11"},{"expression":{"arguments":[{"id":2321,"name":"_oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"2593:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2320,"name":"setChainlinkOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"2574:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2574:27:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2323,"nodeType":"ExpressionStatement","src":"2574:27:11"},{"expression":{"id":2326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2324,"name":"jobId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"2607:5:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2325,"name":"_jobId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2305,"src":"2615:6:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2607:14:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2327,"nodeType":"ExpressionStatement","src":"2607:14:11"},{"expression":{"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2328,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"2675:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2331,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2682:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2330,"name":"LINK_DIVISIBILITY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"2686:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2682:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2332,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2681:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130","id":2333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2707:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"2681:28:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2675:34:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2336,"nodeType":"ExpressionStatement","src":"2675:34:11"},{"expression":{"id":2339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2337,"name":"treasuryFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2262,"src":"2716:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2338,"name":"_treasuryFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"2730:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2716:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2340,"nodeType":"ExpressionStatement","src":"2716:26:11"},{"expression":{"id":2343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2341,"name":"requestBaseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"2748:14:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2342,"name":"_requestBaseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"2765:15:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2748:32:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2344,"nodeType":"ExpressionStatement","src":"2748:32:11"}]},"documentation":{"id":2303,"nodeType":"StructuredDocumentation","src":"2256:142:11","text":" @notice Initialize the link token and target oracle\n All testnets config : https://docs.chain.link/any-api/testnet-oracles/"},"id":2346,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2305,"mutability":"mutable","name":"_jobId","nameLocation":"2426:6:11","nodeType":"VariableDeclaration","scope":2346,"src":"2418:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2304,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2418:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2307,"mutability":"mutable","name":"_requestBaseURI","nameLocation":"2452:15:11","nodeType":"VariableDeclaration","scope":2346,"src":"2438:29:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2306,"name":"string","nodeType":"ElementaryTypeName","src":"2438:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2309,"mutability":"mutable","name":"_oracle","nameLocation":"2481:7:11","nodeType":"VariableDeclaration","scope":2346,"src":"2473:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2308,"name":"address","nodeType":"ElementaryTypeName","src":"2473:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2311,"mutability":"mutable","name":"_link","nameLocation":"2502:5:11","nodeType":"VariableDeclaration","scope":2346,"src":"2494:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2310,"name":"address","nodeType":"ElementaryTypeName","src":"2494:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2313,"mutability":"mutable","name":"_treasuryFee","nameLocation":"2521:12:11","nodeType":"VariableDeclaration","scope":2346,"src":"2513:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2312,"name":"uint256","nodeType":"ElementaryTypeName","src":"2513:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2412:125:11"},"returnParameters":{"id":2315,"nodeType":"ParameterList","parameters":[],"src":"2538:0:11"},"scope":3021,"src":"2401:384:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2421,"nodeType":"Block","src":"3301:463:11","statements":[{"expression":{"id":2359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3307:16:11","subExpression":{"id":2358,"name":"lastCampaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"3307:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2360,"nodeType":"ExpressionStatement","src":"3307:16:11"},{"assignments":[2362],"declarations":[{"constant":false,"id":2362,"mutability":"mutable","name":"newCampaignId","nameLocation":"3337:13:11","nodeType":"VariableDeclaration","scope":2421,"src":"3329:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2361,"name":"uint256","nodeType":"ElementaryTypeName","src":"3329:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2364,"initialValue":{"id":2363,"name":"lastCampaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"3353:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3329:38:11"},{"assignments":[2367],"declarations":[{"constant":false,"id":2367,"mutability":"mutable","name":"newCampaign","nameLocation":"3390:11:11","nodeType":"VariableDeclaration","scope":2421,"src":"3373:28:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$2232_storage_ptr","typeString":"struct TwitterV1.Campaign"},"typeName":{"id":2366,"nodeType":"UserDefinedTypeName","pathNode":{"id":2365,"name":"Campaign","nodeType":"IdentifierPath","referencedDeclaration":2232,"src":"3373:8:11"},"referencedDeclaration":2232,"src":"3373:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$2232_storage_ptr","typeString":"struct TwitterV1.Campaign"}},"visibility":"internal"}],"id":2371,"initialValue":{"baseExpression":{"id":2368,"name":"campaignById","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2252,"src":"3404:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Campaign_$2232_storage_$","typeString":"mapping(uint256 => struct TwitterV1.Campaign storage ref)"}},"id":2370,"indexExpression":{"id":2369,"name":"newCampaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"3417:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3404:27:11","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$2232_storage","typeString":"struct TwitterV1.Campaign storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3373:58:11"},{"expression":{"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2372,"name":"newCampaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"3437:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$2232_storage_ptr","typeString":"struct TwitterV1.Campaign storage pointer"}},"id":2374,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"budget","nodeType":"MemberAccess","referencedDeclaration":2225,"src":"3437:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2375,"name":"budget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2351,"src":"3458:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3437:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2377,"nodeType":"ExpressionStatement","src":"3437:27:11"},{"expression":{"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2378,"name":"newCampaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"3470:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$2232_storage_ptr","typeString":"struct TwitterV1.Campaign storage pointer"}},"id":2380,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"name","nodeType":"MemberAccess","referencedDeclaration":2221,"src":"3470:16:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2381,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"3489:4:11","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"src":"3470:23:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2383,"nodeType":"ExpressionStatement","src":"3470:23:11"},{"expression":{"id":2388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2384,"name":"newCampaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"3499:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$2232_storage_ptr","typeString":"struct TwitterV1.Campaign storage pointer"}},"id":2386,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"validationThreshold","nodeType":"MemberAccess","referencedDeclaration":2227,"src":"3499:31:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2387,"name":"validationThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2353,"src":"3533:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3499:53:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2389,"nodeType":"ExpressionStatement","src":"3499:53:11"},{"expression":{"id":2394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2390,"name":"newCampaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"3558:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$2232_storage_ptr","typeString":"struct TwitterV1.Campaign storage pointer"}},"id":2392,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"partakersLimit","nodeType":"MemberAccess","referencedDeclaration":2229,"src":"3558:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2393,"name":"partakersLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2355,"src":"3587:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3558:43:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2395,"nodeType":"ExpressionStatement","src":"3558:43:11"},{"expression":{"id":2401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2396,"name":"newCampaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"3607:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$2232_storage_ptr","typeString":"struct TwitterV1.Campaign storage pointer"}},"id":2398,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"company","nodeType":"MemberAccess","referencedDeclaration":2223,"src":"3607:19:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2399,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3629:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3629:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3607:32:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2402,"nodeType":"ExpressionStatement","src":"3607:32:11"},{"expression":{"id":2407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2403,"name":"newCampaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"3645:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$2232_storage_ptr","typeString":"struct TwitterV1.Campaign storage pointer"}},"id":2405,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"isClosed","nodeType":"MemberAccess","referencedDeclaration":2231,"src":"3645:20:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":2406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3668:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3645:28:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2408,"nodeType":"ExpressionStatement","src":"3645:28:11"},{"expression":{"arguments":[{"id":2412,"name":"newCampaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"3694:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$2232_storage_ptr","typeString":"struct TwitterV1.Campaign storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Campaign_$2232_storage_ptr","typeString":"struct TwitterV1.Campaign storage pointer"}],"expression":{"id":2409,"name":"campaigns","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"3679:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Campaign_$2232_storage_$dyn_storage","typeString":"struct TwitterV1.Campaign storage ref[] storage ref"}},"id":2411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"3679:14:11","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Campaign_$2232_storage_$dyn_storage_ptr_$_t_struct$_Campaign_$2232_storage_$returns$__$bound_to$_t_array$_t_struct$_Campaign_$2232_storage_$dyn_storage_ptr_$","typeString":"function (struct TwitterV1.Campaign storage ref[] storage pointer,struct TwitterV1.Campaign storage ref)"}},"id":2413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3679:27:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2414,"nodeType":"ExpressionStatement","src":"3679:27:11"},{"eventCall":{"arguments":[{"id":2416,"name":"newCampaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"3733:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2417,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3748:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3748:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2415,"name":"CampaignCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"3717:15:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":2419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3717:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2420,"nodeType":"EmitStatement","src":"3712:47:11"}]},"documentation":{"id":2347,"nodeType":"StructuredDocumentation","src":"2823:331:11","text":" @notice Function that allows a company to create a new campaign\n @param budget - Budget each winning partaker will share with each other\n @param validationThreshold - Minimum amount of retweet, likes etc for a partaker to win\n @param partakersLimit - Maximum amount of winning partakers for this campaign"},"functionSelector":"b5a898ae","id":2422,"implemented":true,"kind":"function","modifiers":[],"name":"createCampaign","nameLocation":"3166:14:11","nodeType":"FunctionDefinition","parameters":{"id":2356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2349,"mutability":"mutable","name":"name","nameLocation":"3202:4:11","nodeType":"VariableDeclaration","scope":2422,"src":"3186:20:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":2348,"name":"string","nodeType":"ElementaryTypeName","src":"3186:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2351,"mutability":"mutable","name":"budget","nameLocation":"3220:6:11","nodeType":"VariableDeclaration","scope":2422,"src":"3212:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2350,"name":"uint256","nodeType":"ElementaryTypeName","src":"3212:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2353,"mutability":"mutable","name":"validationThreshold","nameLocation":"3240:19:11","nodeType":"VariableDeclaration","scope":2422,"src":"3232:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2352,"name":"uint256","nodeType":"ElementaryTypeName","src":"3232:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2355,"mutability":"mutable","name":"partakersLimit","nameLocation":"3273:14:11","nodeType":"VariableDeclaration","scope":2422,"src":"3265:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2354,"name":"uint256","nodeType":"ElementaryTypeName","src":"3265:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3180:111:11"},"returnParameters":{"id":2357,"nodeType":"ParameterList","parameters":[],"src":"3301:0:11"},"scope":3021,"src":"3157:607:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2454,"nodeType":"Block","src":"3935:211:11","statements":[{"assignments":[2430],"declarations":[{"constant":false,"id":2430,"mutability":"mutable","name":"campaign","nameLocation":"3958:8:11","nodeType":"VariableDeclaration","scope":2454,"src":"3941:25:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$2232_storage_ptr","typeString":"struct TwitterV1.Campaign"},"typeName":{"id":2429,"nodeType":"UserDefinedTypeName","pathNode":{"id":2428,"name":"Campaign","nodeType":"IdentifierPath","referencedDeclaration":2232,"src":"3941:8:11"},"referencedDeclaration":2232,"src":"3941:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$2232_storage_ptr","typeString":"struct TwitterV1.Campaign"}},"visibility":"internal"}],"id":2434,"initialValue":{"arguments":[{"id":2432,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2425,"src":"3982:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2431,"name":"_getCampaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2820,"src":"3969:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_struct$_Campaign_$2232_storage_ptr_$","typeString":"function (uint256) view returns (struct TwitterV1.Campaign storage pointer)"}},"id":2433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3969:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$2232_storage_ptr","typeString":"struct TwitterV1.Campaign storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3941:52:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2436,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4007:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4007:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2438,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"4021:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$2232_storage_ptr","typeString":"struct TwitterV1.Campaign storage pointer"}},"id":2439,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"company","nodeType":"MemberAccess","referencedDeclaration":2223,"src":"4021:16:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4007:30:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616c6c6572206973206e6f74207468652063616d706169676e206f776e6572","id":2441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4039:34:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae094217ca8267b1aa5ddfc23784056f71662e2c3ecbe8a78d373fd86d4eaae0","typeString":"literal_string \"Caller is not the campaign owner\""},"value":"Caller is not the campaign owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae094217ca8267b1aa5ddfc23784056f71662e2c3ecbe8a78d373fd86d4eaae0","typeString":"literal_string \"Caller is not the campaign owner\""}],"id":2435,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3999:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3999:75:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2443,"nodeType":"ExpressionStatement","src":"3999:75:11"},{"expression":{"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2444,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"4080:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$2232_storage_ptr","typeString":"struct TwitterV1.Campaign storage pointer"}},"id":2446,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"isClosed","nodeType":"MemberAccess","referencedDeclaration":2231,"src":"4080:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4100:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4080:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2449,"nodeType":"ExpressionStatement","src":"4080:24:11"},{"eventCall":{"arguments":[{"id":2451,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2425,"src":"4130:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2450,"name":"CampaignClosed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"4115:14:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4115:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2453,"nodeType":"EmitStatement","src":"4110:31:11"}]},"documentation":{"id":2423,"nodeType":"StructuredDocumentation","src":"3768:112:11","text":" @notice Function that allows a company to close a\n @param campaignId - The id of the campaign"},"functionSelector":"b0e1c1e1","id":2455,"implemented":true,"kind":"function","modifiers":[],"name":"closeCampaign","nameLocation":"3892:13:11","nodeType":"FunctionDefinition","parameters":{"id":2426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2425,"mutability":"mutable","name":"campaignId","nameLocation":"3914:10:11","nodeType":"VariableDeclaration","scope":2455,"src":"3906:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2424,"name":"uint256","nodeType":"ElementaryTypeName","src":"3906:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3905:20:11"},"returnParameters":{"id":2427,"nodeType":"ParameterList","parameters":[],"src":"3935:0:11"},"scope":3021,"src":"3883:263:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2492,"nodeType":"Block","src":"4405:309:11","statements":[{"assignments":[2466],"declarations":[{"constant":false,"id":2466,"mutability":"mutable","name":"isClaimValid","nameLocation":"4416:12:11","nodeType":"VariableDeclaration","scope":2492,"src":"4411:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2465,"name":"bool","nodeType":"ElementaryTypeName","src":"4411:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2472,"initialValue":{"arguments":[{"id":2468,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"4458:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2469,"name":"postId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2460,"src":"4470:6:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2470,"name":"claimedCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2462,"src":"4478:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2467,"name":"_validateContributionClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"4431:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,string memory,uint256) view returns (bool)"}},"id":2471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4431:62:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4411:82:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2474,"name":"isClaimValid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2466,"src":"4507:12:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"74727565","id":2475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4523:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4507:20:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5468697320636f6e747269627574696f6e20646f6573206e6f742073617469736679207468652063616d706169676e277320726571756972656d656e7473","id":2477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4529:64:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c2f50fde43b6cd00923414ed2254557266b44b46c98097d2bbc05bc171375af6","typeString":"literal_string \"This contribution does not satisfy the campaign's requirements\""},"value":"This contribution does not satisfy the campaign's requirements"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c2f50fde43b6cd00923414ed2254557266b44b46c98097d2bbc05bc171375af6","typeString":"literal_string \"This contribution does not satisfy the campaign's requirements\""}],"id":2473,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4499:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4499:95:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2479,"nodeType":"ExpressionStatement","src":"4499:95:11"},{"expression":{"arguments":[{"id":2481,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"4635:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2482,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4647:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4647:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2480,"name":"_addPartakerToCampaignContributors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"4600:34:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":2484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4600:58:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2485,"nodeType":"ExpressionStatement","src":"4600:58:11"},{"eventCall":{"arguments":[{"id":2487,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"4686:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2488,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4698:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4698:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2486,"name":"ContributorAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"4669:16:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":2490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4669:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2491,"nodeType":"EmitStatement","src":"4664:45:11"}]},"documentation":{"id":2456,"nodeType":"StructuredDocumentation","src":"4150:126:11","text":" @notice Function that allows a user to validate his  to close a\n @param campaignId - The id of the campaign"},"functionSelector":"b1d3c700","id":2493,"implemented":true,"kind":"function","modifiers":[],"name":"claimCampaignContribution","nameLocation":"4288:25:11","nodeType":"FunctionDefinition","parameters":{"id":2463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2458,"mutability":"mutable","name":"campaignId","nameLocation":"4327:10:11","nodeType":"VariableDeclaration","scope":2493,"src":"4319:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2457,"name":"uint256","nodeType":"ElementaryTypeName","src":"4319:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2460,"mutability":"mutable","name":"postId","nameLocation":"4357:6:11","nodeType":"VariableDeclaration","scope":2493,"src":"4343:20:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2459,"name":"string","nodeType":"ElementaryTypeName","src":"4343:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2462,"mutability":"mutable","name":"claimedCounter","nameLocation":"4377:14:11","nodeType":"VariableDeclaration","scope":2493,"src":"4369:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2461,"name":"uint256","nodeType":"ElementaryTypeName","src":"4369:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4313:82:11"},"returnParameters":{"id":2464,"nodeType":"ParameterList","parameters":[],"src":"4405:0:11"},"scope":3021,"src":"4279:435:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2553,"nodeType":"Block","src":"4781:609:11","statements":[{"assignments":[2500],"declarations":[{"constant":false,"id":2500,"mutability":"mutable","name":"campaignContributors","nameLocation":"4816:20:11","nodeType":"VariableDeclaration","scope":2553,"src":"4787:49:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_CampaignContributors_$2243_storage_ptr","typeString":"struct TwitterV1.CampaignContributors"},"typeName":{"id":2499,"nodeType":"UserDefinedTypeName","pathNode":{"id":2498,"name":"CampaignContributors","nodeType":"IdentifierPath","referencedDeclaration":2243,"src":"4787:20:11"},"referencedDeclaration":2243,"src":"4787:20:11","typeDescriptions":{"typeIdentifier":"t_struct$_CampaignContributors_$2243_storage_ptr","typeString":"struct TwitterV1.CampaignContributors"}},"visibility":"internal"}],"id":2504,"initialValue":{"baseExpression":{"id":2501,"name":"campaignContributorsByCampaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2257,"src":"4839:32:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_CampaignContributors_$2243_storage_$","typeString":"mapping(uint256 => struct TwitterV1.CampaignContributors storage ref)"}},"id":2503,"indexExpression":{"id":2502,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"4872:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4839:44:11","typeDescriptions":{"typeIdentifier":"t_struct$_CampaignContributors_$2243_storage","typeString":"struct TwitterV1.CampaignContributors storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4787:96:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":2506,"name":"campaignContributors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"4904:20:11","typeDescriptions":{"typeIdentifier":"t_struct$_CampaignContributors_$2243_storage_ptr","typeString":"struct TwitterV1.CampaignContributors storage pointer"}},"id":2507,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contributorsByAddress","nodeType":"MemberAccess","referencedDeclaration":2238,"src":"4904:42:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2510,"indexExpression":{"expression":{"id":2508,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4947:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4947:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4904:54:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"74727565","id":2511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4962:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4904:62:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616c6c6572206973206e6f7420612076616c6964617465642063616d706169676e20636f6e7472696275746f72","id":2513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4974:48:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_2254f56cac9b925e5567d5317d5f1fa4cb1cef32c5f259415ee5e2f68ac31e6b","typeString":"literal_string \"Caller is not a validated campaign contributor\""},"value":"Caller is not a validated campaign contributor"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2254f56cac9b925e5567d5317d5f1fa4cb1cef32c5f259415ee5e2f68ac31e6b","typeString":"literal_string \"Caller is not a validated campaign contributor\""}],"id":2505,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4889:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4889:139:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2515,"nodeType":"ExpressionStatement","src":"4889:139:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":2517,"name":"campaignContributors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"5042:20:11","typeDescriptions":{"typeIdentifier":"t_struct$_CampaignContributors_$2243_storage_ptr","typeString":"struct TwitterV1.CampaignContributors storage pointer"}},"id":2518,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contributorsClaimStatus","nodeType":"MemberAccess","referencedDeclaration":2242,"src":"5042:44:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2521,"indexExpression":{"expression":{"id":2519,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5087:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5087:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5042:56:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"66616c7365","id":2522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5102:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5042:65:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265747269627574696f6e20616c726561647920636c61696d6564","id":2524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5109:29:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_b4b84ebe3de827a4087f895b834b5993eef1b5aca3e2419eeecfbb4534ceb6c3","typeString":"literal_string \"Retribution already claimed\""},"value":"Retribution already claimed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b4b84ebe3de827a4087f895b834b5993eef1b5aca3e2419eeecfbb4534ceb6c3","typeString":"literal_string \"Retribution already claimed\""}],"id":2516,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5034:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5034:105:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2526,"nodeType":"ExpressionStatement","src":"5034:105:11"},{"assignments":[2528],"declarations":[{"constant":false,"id":2528,"mutability":"mutable","name":"retributionAmount","nameLocation":"5153:17:11","nodeType":"VariableDeclaration","scope":2553,"src":"5145:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2527,"name":"uint256","nodeType":"ElementaryTypeName","src":"5145:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2532,"initialValue":{"arguments":[{"id":2530,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"5199:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2529,"name":"_computeRetributionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"5173:25:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":2531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5173:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5145:65:11"},{"expression":{"arguments":[{"id":2534,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"5246:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2533,"name":"_updateContributorClaimStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2922,"src":"5216:29:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5216:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2536,"nodeType":"ExpressionStatement","src":"5216:41:11"},{"expression":{"arguments":[{"id":2543,"name":"retributionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"5292:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":2539,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5271:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5271:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5263:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":2537,"name":"address","nodeType":"ElementaryTypeName","src":"5263:8:11","stateMutability":"payable","typeDescriptions":{}}},"id":2541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5263:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","src":"5263:28:11","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5263:47:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2545,"nodeType":"ExpressionStatement","src":"5263:47:11"},{"eventCall":{"arguments":[{"id":2547,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"5343:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2548,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5355:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5355:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2550,"name":"retributionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"5367:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2546,"name":"ContributorRetributed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"5321:21:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256)"}},"id":2551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5321:64:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2552,"nodeType":"EmitStatement","src":"5316:69:11"}]},"functionSelector":"4a732795","id":2554,"implemented":true,"kind":"function","modifiers":[],"name":"claimCampaignRetribution","nameLocation":"4727:24:11","nodeType":"FunctionDefinition","parameters":{"id":2496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2495,"mutability":"mutable","name":"campaignId","nameLocation":"4760:10:11","nodeType":"VariableDeclaration","scope":2554,"src":"4752:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2494,"name":"uint256","nodeType":"ElementaryTypeName","src":"4752:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4751:20:11"},"returnParameters":{"id":2497,"nodeType":"ParameterList","parameters":[],"src":"4781:0:11"},"scope":3021,"src":"4718:672:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2578,"nodeType":"Block","src":"5531:111:11","statements":[{"expression":{"arguments":[{"id":2563,"name":"_userId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2557,"src":"5547:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2564,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5556:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5556:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2560,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2215,"src":"5537:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$3680_storage","typeString":"struct EnumerableMap.UintToAddressMap storage ref"}},"id":2562,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"set","nodeType":"MemberAccess","referencedDeclaration":3713,"src":"5537:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_UintToAddressMap_$3680_storage_ptr_$_t_uint256_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_UintToAddressMap_$3680_storage_ptr_$","typeString":"function (struct EnumerableMap.UintToAddressMap storage pointer,uint256,address) returns (bool)"}},"id":2566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5537:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2567,"nodeType":"ExpressionStatement","src":"5537:30:11"},{"eventCall":{"arguments":[{"id":2569,"name":"_userId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2557,"src":"5588:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2570,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5597:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5597:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2568,"name":"SignedUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2278,"src":"5579:8:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":2572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5579:29:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2573,"nodeType":"EmitStatement","src":"5574:34:11"},{"expression":{"arguments":[{"id":2575,"name":"_userId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2557,"src":"5629:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2574,"name":"_requestSignUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3006,"src":"5614:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$_t_bytes32_$","typeString":"function (uint256) returns (bytes32)"}},"id":2576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5614:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2577,"nodeType":"ExpressionStatement","src":"5614:23:11"}]},"documentation":{"id":2555,"nodeType":"StructuredDocumentation","src":"5394:92:11","text":" @notice Function that allow user to sign up to twitter and claim won twitters"},"functionSelector":"1fc645c7","id":2579,"implemented":true,"kind":"function","modifiers":[],"name":"signUp","nameLocation":"5498:6:11","nodeType":"FunctionDefinition","parameters":{"id":2558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2557,"mutability":"mutable","name":"_userId","nameLocation":"5513:7:11","nodeType":"VariableDeclaration","scope":2579,"src":"5505:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2556,"name":"uint256","nodeType":"ElementaryTypeName","src":"5505:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5504:17:11"},"returnParameters":{"id":2559,"nodeType":"ParameterList","parameters":[],"src":"5531:0:11"},"scope":3021,"src":"5489:153:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2592,"nodeType":"Block","src":"5804:41:11","statements":[{"expression":{"arguments":[{"id":2589,"name":"_userId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"5832:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2587,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2215,"src":"5817:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$3680_storage","typeString":"struct EnumerableMap.UintToAddressMap storage ref"}},"id":2588,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":3755,"src":"5817:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_UintToAddressMap_$3680_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintToAddressMap_$3680_storage_ptr_$","typeString":"function (struct EnumerableMap.UintToAddressMap storage pointer,uint256) view returns (bool)"}},"id":2590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5817:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2586,"id":2591,"nodeType":"Return","src":"5810:30:11"}]},"documentation":{"id":2580,"nodeType":"StructuredDocumentation","src":"5646:88:11","text":" @notice Check if user has signed up\n @param _userId - twitter user id"},"functionSelector":"a9654ad4","id":2593,"implemented":true,"kind":"function","modifiers":[],"name":"hasSignedUp","nameLocation":"5746:11:11","nodeType":"FunctionDefinition","parameters":{"id":2583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2582,"mutability":"mutable","name":"_userId","nameLocation":"5766:7:11","nodeType":"VariableDeclaration","scope":2593,"src":"5758:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2581,"name":"uint256","nodeType":"ElementaryTypeName","src":"5758:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5757:17:11"},"returnParameters":{"id":2586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2585,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2593,"src":"5798:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2584,"name":"bool","nodeType":"ElementaryTypeName","src":"5798:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5797:6:11"},"scope":3021,"src":"5737:108:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2630,"nodeType":"Block","src":"5956:150:11","statements":[{"assignments":[2600],"declarations":[{"constant":false,"id":2600,"mutability":"mutable","name":"found","nameLocation":"5967:5:11","nodeType":"VariableDeclaration","scope":2630,"src":"5962:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2599,"name":"bool","nodeType":"ElementaryTypeName","src":"5962:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2602,"initialValue":{"hexValue":"66616c7365","id":2601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5975:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"nodeType":"VariableDeclarationStatement","src":"5962:18:11"},{"body":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2617,"name":"idx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"6051:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2615,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2215,"src":"6041:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$3680_storage","typeString":"struct EnumerableMap.UintToAddressMap storage ref"}},"id":2616,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"get","nodeType":"MemberAccess","referencedDeclaration":3880,"src":"6041:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_UintToAddressMap_$3680_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_UintToAddressMap_$3680_storage_ptr_$","typeString":"function (struct EnumerableMap.UintToAddressMap storage pointer,uint256) view returns (address)"}},"id":2618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6041:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2619,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6059:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6059:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6041:28:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2626,"nodeType":"IfStatement","src":"6037:46:11","trueBody":{"expression":{"id":2624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2622,"name":"found","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"6071:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6079:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6071:12:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2625,"nodeType":"ExpressionStatement","src":"6071:12:11"}},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2607,"name":"idx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"6008:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2608,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2215,"src":"6014:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$3680_storage","typeString":"struct EnumerableMap.UintToAddressMap storage ref"}},"id":2609,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":3770,"src":"6014:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_UintToAddressMap_$3680_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_UintToAddressMap_$3680_storage_ptr_$","typeString":"function (struct EnumerableMap.UintToAddressMap storage pointer) view returns (uint256)"}},"id":2610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6014:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6008:20:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2627,"initializationExpression":{"assignments":[2604],"declarations":[{"constant":false,"id":2604,"mutability":"mutable","name":"idx","nameLocation":"5999:3:11","nodeType":"VariableDeclaration","scope":2627,"src":"5991:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2603,"name":"uint256","nodeType":"ElementaryTypeName","src":"5991:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2606,"initialValue":{"hexValue":"30","id":2605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6005:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5991:15:11"},"loopExpression":{"expression":{"id":2613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6030:5:11","subExpression":{"id":2612,"name":"idx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"6030:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2614,"nodeType":"ExpressionStatement","src":"6030:5:11"},"nodeType":"ForStatement","src":"5986:97:11"},{"expression":{"id":2628,"name":"found","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"6096:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2598,"id":2629,"nodeType":"Return","src":"6089:12:11"}]},"documentation":{"id":2594,"nodeType":"StructuredDocumentation","src":"5849:52:11","text":" @notice Check if caller has signed up"},"functionSelector":"5ec4bc38","id":2631,"implemented":true,"kind":"function","modifiers":[],"name":"hasSignedUp","nameLocation":"5913:11:11","nodeType":"FunctionDefinition","parameters":{"id":2595,"nodeType":"ParameterList","parameters":[],"src":"5924:2:11"},"returnParameters":{"id":2598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2597,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2631,"src":"5950:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2596,"name":"bool","nodeType":"ElementaryTypeName","src":"5950:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5949:6:11"},"scope":3021,"src":"5904:202:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2660,"nodeType":"Block","src":"6501:331:11","statements":[{"condition":{"id":2645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6511:13:11","subExpression":{"id":2644,"name":"_hasSignedUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2638,"src":"6512:12:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2652,"nodeType":"IfStatement","src":"6507:40:11","trueBody":{"expression":{"arguments":[{"id":2649,"name":"_userId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2636,"src":"6539:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2646,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2215,"src":"6526:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$3680_storage","typeString":"struct EnumerableMap.UintToAddressMap storage ref"}},"id":2648,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":3734,"src":"6526:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_UintToAddressMap_$3680_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintToAddressMap_$3680_storage_ptr_$","typeString":"function (struct EnumerableMap.UintToAddressMap storage pointer,uint256) returns (bool)"}},"id":2650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6526:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2651,"nodeType":"ExpressionStatement","src":"6526:21:11"}},{"assignments":[2654],"declarations":[{"constant":false,"id":2654,"mutability":"mutable","name":"user","nameLocation":"6562:4:11","nodeType":"VariableDeclaration","scope":2660,"src":"6554:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2653,"name":"address","nodeType":"ElementaryTypeName","src":"6554:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2659,"initialValue":{"arguments":[{"id":2657,"name":"_userId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2636,"src":"6579:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2655,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2215,"src":"6569:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$3680_storage","typeString":"struct EnumerableMap.UintToAddressMap storage ref"}},"id":2656,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"get","nodeType":"MemberAccess","referencedDeclaration":3880,"src":"6569:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_UintToAddressMap_$3680_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_UintToAddressMap_$3680_storage_ptr_$","typeString":"function (struct EnumerableMap.UintToAddressMap storage pointer,uint256) view returns (address)"}},"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6569:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6554:33:11"}]},"documentation":{"id":2632,"nodeType":"StructuredDocumentation","src":"6149:208:11","text":" @notice Fulfill Sign Up request\n @param _requestId - id of the request\n @param _userId - twitter user id\n @param _hasSignedUp - true if  twitter userId match msg.sender address"},"functionSelector":"a4e336c3","id":2661,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2641,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2634,"src":"6489:10:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2642,"kind":"modifierInvocation","modifierName":{"id":2640,"name":"recordChainlinkFulfillment","nodeType":"IdentifierPath","referencedDeclaration":841,"src":"6462:26:11"},"nodeType":"ModifierInvocation","src":"6462:38:11"}],"name":"fulfillSignUp","nameLocation":"6369:13:11","nodeType":"FunctionDefinition","parameters":{"id":2639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2634,"mutability":"mutable","name":"_requestId","nameLocation":"6396:10:11","nodeType":"VariableDeclaration","scope":2661,"src":"6388:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2633,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6388:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2636,"mutability":"mutable","name":"_userId","nameLocation":"6420:7:11","nodeType":"VariableDeclaration","scope":2661,"src":"6412:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2635,"name":"uint256","nodeType":"ElementaryTypeName","src":"6412:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2638,"mutability":"mutable","name":"_hasSignedUp","nameLocation":"6438:12:11","nodeType":"VariableDeclaration","scope":2661,"src":"6433:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2637,"name":"bool","nodeType":"ElementaryTypeName","src":"6433:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6382:72:11"},"returnParameters":{"id":2643,"nodeType":"ParameterList","parameters":[],"src":"6501:0:11"},"scope":3021,"src":"6360:472:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2683,"nodeType":"Block","src":"7021:479:11","statements":[{"expression":{"arguments":[{"arguments":[{"id":2673,"name":"requestBaseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"7084:14:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"hexValue":"2f636861696e732f","id":2674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7110:10:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_e5b64fb870214178f776923098f80ee63b1955f85cb0bb444948ce3811079999","typeString":"literal_string \"/chains/\""},"value":"/chains/"},{"expression":{"id":2675,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7132:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"chainid","nodeType":"MemberAccess","src":"7132:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"2f74776974746572732f","id":2677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7157:12:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_d236356f527fa222b87a926997fc1f57d7b3c06dcab0ec8b5ababcc1f490e6c6","typeString":"literal_string \"/twitters/\""},"value":"/twitters/"},{"id":2678,"name":"_twitterId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"7181:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"2f77696e6e657273","id":2679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7203:10:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_ff0857fd342fd731a7c8d6dc5fe2a580363be68de125dbf9a650ceb34ce564ac","typeString":"literal_string \"/winners\""},"value":"/winners"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_stringliteral_e5b64fb870214178f776923098f80ee63b1955f85cb0bb444948ce3811079999","typeString":"literal_string \"/chains/\""},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_d236356f527fa222b87a926997fc1f57d7b3c06dcab0ec8b5ababcc1f490e6c6","typeString":"literal_string \"/twitters/\""},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_ff0857fd342fd731a7c8d6dc5fe2a580363be68de125dbf9a650ceb34ce564ac","typeString":"literal_string \"/winners\""}],"expression":{"id":2671,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7056:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"7056:16:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7056:431:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7040:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2669,"name":"string","nodeType":"ElementaryTypeName","src":"7040:6:11","typeDescriptions":{}}},"id":2681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7040:455:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2668,"id":2682,"nodeType":"Return","src":"7027:468:11"}]},"documentation":{"id":2662,"nodeType":"StructuredDocumentation","src":"6873:54:11","text":" @notice Return URI for twitter endpoint"},"functionSelector":"0a944292","id":2684,"implemented":true,"kind":"function","modifiers":[],"name":"getTwitterURI","nameLocation":"6939:13:11","nodeType":"FunctionDefinition","parameters":{"id":2665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2664,"mutability":"mutable","name":"_twitterId","nameLocation":"6961:10:11","nodeType":"VariableDeclaration","scope":2684,"src":"6953:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2663,"name":"uint256","nodeType":"ElementaryTypeName","src":"6953:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6952:20:11"},"returnParameters":{"id":2668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2667,"mutability":"mutable","name":"_twitterURI","nameLocation":"7008:11:11","nodeType":"VariableDeclaration","scope":2684,"src":"6994:25:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2666,"name":"string","nodeType":"ElementaryTypeName","src":"6994:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6993:27:11"},"scope":3021,"src":"6930:570:11","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2696,"nodeType":"Block","src":"7585:42:11","statements":[{"expression":{"arguments":[{"id":2693,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"7611:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2692,"name":"_getCampaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2820,"src":"7598:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_struct$_Campaign_$2232_storage_ptr_$","typeString":"function (uint256) view returns (struct TwitterV1.Campaign storage pointer)"}},"id":2694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7598:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$2232_storage_ptr","typeString":"struct TwitterV1.Campaign storage pointer"}},"functionReturnParameters":2691,"id":2695,"nodeType":"Return","src":"7591:31:11"}]},"functionSelector":"5598f8cc","id":2697,"implemented":true,"kind":"function","modifiers":[],"name":"getCampaign","nameLocation":"7513:11:11","nodeType":"FunctionDefinition","parameters":{"id":2687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2686,"mutability":"mutable","name":"campaignId","nameLocation":"7533:10:11","nodeType":"VariableDeclaration","scope":2697,"src":"7525:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2685,"name":"uint256","nodeType":"ElementaryTypeName","src":"7525:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7524:20:11"},"returnParameters":{"id":2691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2690,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2697,"src":"7568:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$2232_memory_ptr","typeString":"struct TwitterV1.Campaign"},"typeName":{"id":2689,"nodeType":"UserDefinedTypeName","pathNode":{"id":2688,"name":"Campaign","nodeType":"IdentifierPath","referencedDeclaration":2232,"src":"7568:8:11"},"referencedDeclaration":2232,"src":"7568:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$2232_storage_ptr","typeString":"struct TwitterV1.Campaign"}},"visibility":"internal"}],"src":"7567:17:11"},"scope":3021,"src":"7504:123:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2715,"nodeType":"Block","src":"7774:78:11","statements":[{"expression":{"arguments":[{"arguments":[{"id":2709,"name":"requestBaseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"7811:14:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"hexValue":"2f75736572732f","id":2710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7827:9:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_4be9d97bdca36db909fee5364c11951f6518ef5896e8fb5c1e00fce6d29b39da","typeString":"literal_string \"/users/\""},"value":"/users/"},{"id":2711,"name":"_userId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"7838:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_stringliteral_4be9d97bdca36db909fee5364c11951f6518ef5896e8fb5c1e00fce6d29b39da","typeString":"literal_string \"/users/\""},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2707,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7794:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"7794:16:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7794:52:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7787:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2705,"name":"string","nodeType":"ElementaryTypeName","src":"7787:6:11","typeDescriptions":{}}},"id":2713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7787:60:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2704,"id":2714,"nodeType":"Return","src":"7780:67:11"}]},"documentation":{"id":2698,"nodeType":"StructuredDocumentation","src":"7631:54:11","text":" @notice Return URI for sign up endpoint"},"functionSelector":"aa2bdef9","id":2716,"implemented":true,"kind":"function","modifiers":[],"name":"getSignUpURI","nameLocation":"7697:12:11","nodeType":"FunctionDefinition","parameters":{"id":2701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2700,"mutability":"mutable","name":"_userId","nameLocation":"7718:7:11","nodeType":"VariableDeclaration","scope":2716,"src":"7710:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2699,"name":"uint256","nodeType":"ElementaryTypeName","src":"7710:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7709:17:11"},"returnParameters":{"id":2704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2703,"mutability":"mutable","name":"_signUpURI","nameLocation":"7762:10:11","nodeType":"VariableDeclaration","scope":2716,"src":"7748:24:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2702,"name":"string","nodeType":"ElementaryTypeName","src":"7748:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7747:26:11"},"scope":3021,"src":"7688:164:11","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2746,"nodeType":"Block","src":"8048:170:11","statements":[{"assignments":[2724],"declarations":[{"constant":false,"id":2724,"mutability":"mutable","name":"link","nameLocation":"8073:4:11","nodeType":"VariableDeclaration","scope":2746,"src":"8054:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$1069","typeString":"contract LinkTokenInterface"},"typeName":{"id":2723,"nodeType":"UserDefinedTypeName","pathNode":{"id":2722,"name":"LinkTokenInterface","nodeType":"IdentifierPath","referencedDeclaration":1069,"src":"8054:18:11"},"referencedDeclaration":1069,"src":"8054:18:11","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$1069","typeString":"contract LinkTokenInterface"}},"visibility":"internal"}],"id":2729,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2726,"name":"chainlinkTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"8099:21:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8099:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2725,"name":"LinkTokenInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1069,"src":"8080:18:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LinkTokenInterface_$1069_$","typeString":"type(contract LinkTokenInterface)"}},"id":2728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8080:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$1069","typeString":"contract LinkTokenInterface"}},"nodeType":"VariableDeclarationStatement","src":"8054:69:11"},{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2733,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"8151:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8151:7:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"arguments":[{"id":2739,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8183:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_TwitterV1_$3021","typeString":"contract TwitterV1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_TwitterV1_$3021","typeString":"contract TwitterV1"}],"id":2738,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8175:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2737,"name":"address","nodeType":"ElementaryTypeName","src":"8175:7:11","typeDescriptions":{}}},"id":2740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8175:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2735,"name":"link","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"8160:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$1069","typeString":"contract LinkTokenInterface"}},"id":2736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1001,"src":"8160:14:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8160:29:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2731,"name":"link","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"8137:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$1069","typeString":"contract LinkTokenInterface"}},"id":2732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1046,"src":"8137:13:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8137:53:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"556e61626c6520746f207472616e73666572","id":2743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8192:20:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_8e1f7009e5aca473fdde21442dae29568050b67581f4b146dca8997db684dff1","typeString":"literal_string \"Unable to transfer\""},"value":"Unable to transfer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8e1f7009e5aca473fdde21442dae29568050b67581f4b146dca8997db684dff1","typeString":"literal_string \"Unable to transfer\""}],"id":2730,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8129:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8129:84:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2745,"nodeType":"ExpressionStatement","src":"8129:84:11"}]},"documentation":{"id":2717,"nodeType":"StructuredDocumentation","src":"7891:111:11","text":" @notice Witdraws LINK from the contract to the Owner\n @dev only admin can call this function"},"functionSelector":"8dc654a2","id":2747,"implemented":true,"kind":"function","modifiers":[{"id":2720,"kind":"modifierInvocation","modifierName":{"id":2719,"name":"onlyAdmin","nodeType":"IdentifierPath","referencedDeclaration":3020,"src":"8038:9:11"},"nodeType":"ModifierInvocation","src":"8038:9:11"}],"name":"withdrawLink","nameLocation":"8014:12:11","nodeType":"FunctionDefinition","parameters":{"id":2718,"nodeType":"ParameterList","parameters":[],"src":"8026:2:11"},"returnParameters":{"id":2721,"nodeType":"ParameterList","parameters":[],"src":"8048:0:11"},"scope":3021,"src":"8005:213:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2759,"nodeType":"Block","src":"8389:43:11","statements":[{"expression":{"id":2757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2755,"name":"requestBaseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"8395:14:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2756,"name":"_requestBaseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"8412:15:11","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"src":"8395:32:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2758,"nodeType":"ExpressionStatement","src":"8395:32:11"}]},"documentation":{"id":2748,"nodeType":"StructuredDocumentation","src":"8222:85:11","text":" @notice Set requestBaseURI\n @dev only admin can call this function"},"functionSelector":"ec8f04e9","id":2760,"implemented":true,"kind":"function","modifiers":[{"id":2753,"kind":"modifierInvocation","modifierName":{"id":2752,"name":"onlyAdmin","nodeType":"IdentifierPath","referencedDeclaration":3020,"src":"8379:9:11"},"nodeType":"ModifierInvocation","src":"8379:9:11"}],"name":"setRequestBaseURI","nameLocation":"8319:17:11","nodeType":"FunctionDefinition","parameters":{"id":2751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2750,"mutability":"mutable","name":"_requestBaseURI","nameLocation":"8353:15:11","nodeType":"VariableDeclaration","scope":2760,"src":"8337:31:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":2749,"name":"string","nodeType":"ElementaryTypeName","src":"8337:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8336:33:11"},"returnParameters":{"id":2754,"nodeType":"ParameterList","parameters":[],"src":"8389:0:11"},"scope":3021,"src":"8310:122:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2783,"nodeType":"Block","src":"8603:73:11","statements":[{"condition":{"id":2774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8613:24:11","subExpression":{"arguments":[{"id":2772,"name":"_userId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"8629:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2770,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2215,"src":"8614:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$3680_storage","typeString":"struct EnumerableMap.UintToAddressMap storage ref"}},"id":2771,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":3755,"src":"8614:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_UintToAddressMap_$3680_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintToAddressMap_$3680_storage_ptr_$","typeString":"function (struct EnumerableMap.UintToAddressMap storage pointer,uint256) view returns (bool)"}},"id":2773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8614:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2782,"nodeType":"IfStatement","src":"8609:62:11","trueBody":{"expression":{"arguments":[{"id":2778,"name":"_userId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"8649:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2779,"name":"_userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2765,"src":"8658:12:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2775,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2215,"src":"8639:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$3680_storage","typeString":"struct EnumerableMap.UintToAddressMap storage ref"}},"id":2777,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"set","nodeType":"MemberAccess","referencedDeclaration":3713,"src":"8639:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_UintToAddressMap_$3680_storage_ptr_$_t_uint256_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_UintToAddressMap_$3680_storage_ptr_$","typeString":"function (struct EnumerableMap.UintToAddressMap storage pointer,uint256,address) returns (bool)"}},"id":2780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8639:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2781,"nodeType":"ExpressionStatement","src":"8639:32:11"}}]},"documentation":{"id":2761,"nodeType":"StructuredDocumentation","src":"8436:89:11","text":" @notice Add user to users list\n @dev only admin can call this function"},"functionSelector":"58d9fa04","id":2784,"implemented":true,"kind":"function","modifiers":[{"id":2768,"kind":"modifierInvocation","modifierName":{"id":2767,"name":"onlyAdmin","nodeType":"IdentifierPath","referencedDeclaration":3020,"src":"8593:9:11"},"nodeType":"ModifierInvocation","src":"8593:9:11"}],"name":"addUser","nameLocation":"8537:7:11","nodeType":"FunctionDefinition","parameters":{"id":2766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2763,"mutability":"mutable","name":"_userId","nameLocation":"8553:7:11","nodeType":"VariableDeclaration","scope":2784,"src":"8545:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2762,"name":"uint256","nodeType":"ElementaryTypeName","src":"8545:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2765,"mutability":"mutable","name":"_userAddress","nameLocation":"8570:12:11","nodeType":"VariableDeclaration","scope":2784,"src":"8562:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2764,"name":"address","nodeType":"ElementaryTypeName","src":"8562:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8544:39:11"},"returnParameters":{"id":2769,"nodeType":"ParameterList","parameters":[],"src":"8603:0:11"},"scope":3021,"src":"8528:148:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2805,"nodeType":"Block","src":"9281:89:11","statements":[{"expression":{"arguments":[{"id":2799,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2787,"src":"9310:10:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2800,"name":"_payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"9322:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2801,"name":"_callbackFunctionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2791,"src":"9332:19:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":2802,"name":"_expiration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2793,"src":"9353:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2798,"name":"cancelChainlinkRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"9287:22:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$_t_bytes4_$_t_uint256_$returns$__$","typeString":"function (bytes32,uint256,bytes4,uint256)"}},"id":2803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9287:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2804,"nodeType":"ExpressionStatement","src":"9287:78:11"}]},"documentation":{"id":2785,"nodeType":"StructuredDocumentation","src":"8680:451:11","text":" @notice Call this method if no response is received within 5 minutes\n @param _requestId The ID that was generated for the request to cancel\n @param _payment The payment specified for the request to cancel\n @param _callbackFunctionId The bytes4 callback function ID specified for\n the request to cancel\n @param _expiration The expiration generated for the request to cancel\n @dev only admin can call this function"},"functionSelector":"ec65d0f8","id":2806,"implemented":true,"kind":"function","modifiers":[{"id":2796,"kind":"modifierInvocation","modifierName":{"id":2795,"name":"onlyAdmin","nodeType":"IdentifierPath","referencedDeclaration":3020,"src":"9271:9:11"},"nodeType":"ModifierInvocation","src":"9271:9:11"}],"name":"cancelRequest","nameLocation":"9143:13:11","nodeType":"FunctionDefinition","parameters":{"id":2794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2787,"mutability":"mutable","name":"_requestId","nameLocation":"9170:10:11","nodeType":"VariableDeclaration","scope":2806,"src":"9162:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2786,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9162:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2789,"mutability":"mutable","name":"_payment","nameLocation":"9194:8:11","nodeType":"VariableDeclaration","scope":2806,"src":"9186:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2788,"name":"uint256","nodeType":"ElementaryTypeName","src":"9186:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2791,"mutability":"mutable","name":"_callbackFunctionId","nameLocation":"9215:19:11","nodeType":"VariableDeclaration","scope":2806,"src":"9208:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2790,"name":"bytes4","nodeType":"ElementaryTypeName","src":"9208:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":2793,"mutability":"mutable","name":"_expiration","nameLocation":"9248:11:11","nodeType":"VariableDeclaration","scope":2806,"src":"9240:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2792,"name":"uint256","nodeType":"ElementaryTypeName","src":"9240:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9156:107:11"},"returnParameters":{"id":2797,"nodeType":"ParameterList","parameters":[],"src":"9281:0:11"},"scope":3021,"src":"9134:236:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2819,"nodeType":"Block","src":"9599:43:11","statements":[{"expression":{"baseExpression":{"id":2815,"name":"campaignById","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2252,"src":"9612:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Campaign_$2232_storage_$","typeString":"mapping(uint256 => struct TwitterV1.Campaign storage ref)"}},"id":2817,"indexExpression":{"id":2816,"name":"_campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2809,"src":"9625:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9612:25:11","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$2232_storage","typeString":"struct TwitterV1.Campaign storage ref"}},"functionReturnParameters":2814,"id":2818,"nodeType":"Return","src":"9605:32:11"}]},"documentation":{"id":2807,"nodeType":"StructuredDocumentation","src":"9412:100:11","text":" @notice retrieves a campaign by its id\n @param _campaignId the id of the campaign"},"id":2820,"implemented":true,"kind":"function","modifiers":[],"name":"_getCampaign","nameLocation":"9524:12:11","nodeType":"FunctionDefinition","parameters":{"id":2810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2809,"mutability":"mutable","name":"_campaignId","nameLocation":"9545:11:11","nodeType":"VariableDeclaration","scope":2820,"src":"9537:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2808,"name":"uint256","nodeType":"ElementaryTypeName","src":"9537:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9536:21:11"},"returnParameters":{"id":2814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2813,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2820,"src":"9581:16:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$2232_storage_ptr","typeString":"struct TwitterV1.Campaign"},"typeName":{"id":2812,"nodeType":"UserDefinedTypeName","pathNode":{"id":2811,"name":"Campaign","nodeType":"IdentifierPath","referencedDeclaration":2232,"src":"9581:8:11"},"referencedDeclaration":2232,"src":"9581:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$2232_storage_ptr","typeString":"struct TwitterV1.Campaign"}},"visibility":"internal"}],"src":"9580:18:11"},"scope":3021,"src":"9515:127:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2844,"nodeType":"Block","src":"9900:218:11","statements":[{"assignments":[2834],"declarations":[{"constant":false,"id":2834,"mutability":"mutable","name":"campaign","nameLocation":"10019:8:11","nodeType":"VariableDeclaration","scope":2844,"src":"10002:25:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$2232_storage_ptr","typeString":"struct TwitterV1.Campaign"},"typeName":{"id":2833,"nodeType":"UserDefinedTypeName","pathNode":{"id":2832,"name":"Campaign","nodeType":"IdentifierPath","referencedDeclaration":2232,"src":"10002:8:11"},"referencedDeclaration":2232,"src":"10002:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$2232_storage_ptr","typeString":"struct TwitterV1.Campaign"}},"visibility":"internal"}],"id":2838,"initialValue":{"arguments":[{"id":2836,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2823,"src":"10043:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2835,"name":"_getCampaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2820,"src":"10030:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_struct$_Campaign_$2232_storage_ptr_$","typeString":"function (uint256) view returns (struct TwitterV1.Campaign storage pointer)"}},"id":2837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10030:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$2232_storage_ptr","typeString":"struct TwitterV1.Campaign storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"10002:52:11"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2839,"name":"claimedCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2827,"src":"10067:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":2840,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"10085:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$2232_storage_ptr","typeString":"struct TwitterV1.Campaign storage pointer"}},"id":2841,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"validationThreshold","nodeType":"MemberAccess","referencedDeclaration":2227,"src":"10085:28:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10067:46:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2831,"id":2843,"nodeType":"Return","src":"10060:53:11"}]},"documentation":{"id":2821,"nodeType":"StructuredDocumentation","src":"9646:105:11","text":" @notice validates the input to performUpkeep\n @param campaignId the id of the cron job"},"id":2845,"implemented":true,"kind":"function","modifiers":[],"name":"_validateContributionClaim","nameLocation":"9763:26:11","nodeType":"FunctionDefinition","parameters":{"id":2828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2823,"mutability":"mutable","name":"campaignId","nameLocation":"9803:10:11","nodeType":"VariableDeclaration","scope":2845,"src":"9795:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2822,"name":"uint256","nodeType":"ElementaryTypeName","src":"9795:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2825,"mutability":"mutable","name":"postId","nameLocation":"9833:6:11","nodeType":"VariableDeclaration","scope":2845,"src":"9819:20:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2824,"name":"string","nodeType":"ElementaryTypeName","src":"9819:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2827,"mutability":"mutable","name":"claimedCounter","nameLocation":"9853:14:11","nodeType":"VariableDeclaration","scope":2845,"src":"9845:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2826,"name":"uint256","nodeType":"ElementaryTypeName","src":"9845:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9789:82:11"},"returnParameters":{"id":2831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2830,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2845,"src":"9894:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2829,"name":"bool","nodeType":"ElementaryTypeName","src":"9894:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9893:6:11"},"scope":3021,"src":"9754:364:11","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":2899,"nodeType":"Block","src":"10213:479:11","statements":[{"assignments":[2854],"declarations":[{"constant":false,"id":2854,"mutability":"mutable","name":"campaign","nameLocation":"10236:8:11","nodeType":"VariableDeclaration","scope":2899,"src":"10219:25:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$2232_storage_ptr","typeString":"struct TwitterV1.Campaign"},"typeName":{"id":2853,"nodeType":"UserDefinedTypeName","pathNode":{"id":2852,"name":"Campaign","nodeType":"IdentifierPath","referencedDeclaration":2232,"src":"10219:8:11"},"referencedDeclaration":2232,"src":"10219:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$2232_storage_ptr","typeString":"struct TwitterV1.Campaign"}},"visibility":"internal"}],"id":2858,"initialValue":{"arguments":[{"id":2856,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2847,"src":"10260:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2855,"name":"_getCampaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2820,"src":"10247:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_struct$_Campaign_$2232_storage_ptr_$","typeString":"function (uint256) view returns (struct TwitterV1.Campaign storage pointer)"}},"id":2857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10247:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$2232_storage_ptr","typeString":"struct TwitterV1.Campaign storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"10219:52:11"},{"assignments":[2861],"declarations":[{"constant":false,"id":2861,"mutability":"mutable","name":"campaignContributors","nameLocation":"10306:20:11","nodeType":"VariableDeclaration","scope":2899,"src":"10277:49:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_CampaignContributors_$2243_storage_ptr","typeString":"struct TwitterV1.CampaignContributors"},"typeName":{"id":2860,"nodeType":"UserDefinedTypeName","pathNode":{"id":2859,"name":"CampaignContributors","nodeType":"IdentifierPath","referencedDeclaration":2243,"src":"10277:20:11"},"referencedDeclaration":2243,"src":"10277:20:11","typeDescriptions":{"typeIdentifier":"t_struct$_CampaignContributors_$2243_storage_ptr","typeString":"struct TwitterV1.CampaignContributors"}},"visibility":"internal"}],"id":2865,"initialValue":{"baseExpression":{"id":2862,"name":"campaignContributorsByCampaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2257,"src":"10329:32:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_CampaignContributors_$2243_storage_$","typeString":"mapping(uint256 => struct TwitterV1.CampaignContributors storage ref)"}},"id":2864,"indexExpression":{"id":2863,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2847,"src":"10362:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10329:44:11","typeDescriptions":{"typeIdentifier":"t_struct$_CampaignContributors_$2243_storage","typeString":"struct TwitterV1.CampaignContributors storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10277:96:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2867,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"10387:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$2232_storage_ptr","typeString":"struct TwitterV1.Campaign storage pointer"}},"id":2868,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"partakersLimit","nodeType":"MemberAccess","referencedDeclaration":2229,"src":"10387:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":2869,"name":"campaignContributors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"10414:20:11","typeDescriptions":{"typeIdentifier":"t_struct$_CampaignContributors_$2243_storage_ptr","typeString":"struct TwitterV1.CampaignContributors storage pointer"}},"id":2870,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contributorsCount","nodeType":"MemberAccess","referencedDeclaration":2234,"src":"10414:38:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10387:65:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f6e7472696275746f7273206c696d697420616c72656164792072656163686564","id":2872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10454:36:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_f41b38bb6792dd2d923f031bfb556202e92815c3f2ff36e44de6f82c3da0b8b1","typeString":"literal_string \"Contributors limit already reached\""},"value":"Contributors limit already reached"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f41b38bb6792dd2d923f031bfb556202e92815c3f2ff36e44de6f82c3da0b8b1","typeString":"literal_string \"Contributors limit already reached\""}],"id":2866,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10379:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10379:112:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2874,"nodeType":"ExpressionStatement","src":"10379:112:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2876,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"10505:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$2232_storage_ptr","typeString":"struct TwitterV1.Campaign storage pointer"}},"id":2877,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"isClosed","nodeType":"MemberAccess","referencedDeclaration":2231,"src":"10505:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"66616c7365","id":2878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10526:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"10505:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616d706169676e20697320636c6f736564","id":2880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10533:20:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_1f5a2f62658d6a797c6aa77f3644d453326e014c355d91d89127b18e16c407ef","typeString":"literal_string \"Campaign is closed\""},"value":"Campaign is closed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1f5a2f62658d6a797c6aa77f3644d453326e014c355d91d89127b18e16c407ef","typeString":"literal_string \"Campaign is closed\""}],"id":2875,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10497:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10497:57:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2882,"nodeType":"ExpressionStatement","src":"10497:57:11"},{"expression":{"id":2889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2883,"name":"campaignContributors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"10560:20:11","typeDescriptions":{"typeIdentifier":"t_struct$_CampaignContributors_$2243_storage_ptr","typeString":"struct TwitterV1.CampaignContributors storage pointer"}},"id":2886,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contributorsByAddress","nodeType":"MemberAccess","referencedDeclaration":2238,"src":"10560:42:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2887,"indexExpression":{"id":2885,"name":"partaker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"10603:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10560:52:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10615:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"10560:59:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2890,"nodeType":"ExpressionStatement","src":"10560:59:11"},{"expression":{"id":2897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2891,"name":"campaignContributors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"10625:20:11","typeDescriptions":{"typeIdentifier":"t_struct$_CampaignContributors_$2243_storage_ptr","typeString":"struct TwitterV1.CampaignContributors storage pointer"}},"id":2894,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contributorsClaimStatus","nodeType":"MemberAccess","referencedDeclaration":2242,"src":"10625:44:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2895,"indexExpression":{"id":2893,"name":"partaker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"10670:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10625:54:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":2896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10682:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"10625:62:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2898,"nodeType":"ExpressionStatement","src":"10625:62:11"}]},"id":2900,"implemented":true,"kind":"function","modifiers":[],"name":"_addPartakerToCampaignContributors","nameLocation":"10131:34:11","nodeType":"FunctionDefinition","parameters":{"id":2850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2847,"mutability":"mutable","name":"campaignId","nameLocation":"10174:10:11","nodeType":"VariableDeclaration","scope":2900,"src":"10166:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2846,"name":"uint256","nodeType":"ElementaryTypeName","src":"10166:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2849,"mutability":"mutable","name":"partaker","nameLocation":"10194:8:11","nodeType":"VariableDeclaration","scope":2900,"src":"10186:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2848,"name":"address","nodeType":"ElementaryTypeName","src":"10186:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10165:38:11"},"returnParameters":{"id":2851,"nodeType":"ParameterList","parameters":[],"src":"10213:0:11"},"scope":3021,"src":"10122:570:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2921,"nodeType":"Block","src":"10764:176:11","statements":[{"assignments":[2907],"declarations":[{"constant":false,"id":2907,"mutability":"mutable","name":"campaignContributors","nameLocation":"10799:20:11","nodeType":"VariableDeclaration","scope":2921,"src":"10770:49:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_CampaignContributors_$2243_storage_ptr","typeString":"struct TwitterV1.CampaignContributors"},"typeName":{"id":2906,"nodeType":"UserDefinedTypeName","pathNode":{"id":2905,"name":"CampaignContributors","nodeType":"IdentifierPath","referencedDeclaration":2243,"src":"10770:20:11"},"referencedDeclaration":2243,"src":"10770:20:11","typeDescriptions":{"typeIdentifier":"t_struct$_CampaignContributors_$2243_storage_ptr","typeString":"struct TwitterV1.CampaignContributors"}},"visibility":"internal"}],"id":2911,"initialValue":{"baseExpression":{"id":2908,"name":"campaignContributorsByCampaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2257,"src":"10822:32:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_CampaignContributors_$2243_storage_$","typeString":"mapping(uint256 => struct TwitterV1.CampaignContributors storage ref)"}},"id":2910,"indexExpression":{"id":2909,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2902,"src":"10855:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10822:44:11","typeDescriptions":{"typeIdentifier":"t_struct$_CampaignContributors_$2243_storage","typeString":"struct TwitterV1.CampaignContributors storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10770:96:11"},{"expression":{"id":2919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2912,"name":"campaignContributors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"10872:20:11","typeDescriptions":{"typeIdentifier":"t_struct$_CampaignContributors_$2243_storage_ptr","typeString":"struct TwitterV1.CampaignContributors storage pointer"}},"id":2916,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contributorsClaimStatus","nodeType":"MemberAccess","referencedDeclaration":2242,"src":"10872:44:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2917,"indexExpression":{"expression":{"id":2914,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10917:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"10917:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10872:56:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10931:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"10872:63:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2920,"nodeType":"ExpressionStatement","src":"10872:63:11"}]},"id":2922,"implemented":true,"kind":"function","modifiers":[],"name":"_updateContributorClaimStatus","nameLocation":"10705:29:11","nodeType":"FunctionDefinition","parameters":{"id":2903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2902,"mutability":"mutable","name":"campaignId","nameLocation":"10743:10:11","nodeType":"VariableDeclaration","scope":2922,"src":"10735:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2901,"name":"uint256","nodeType":"ElementaryTypeName","src":"10735:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10734:20:11"},"returnParameters":{"id":2904,"nodeType":"ParameterList","parameters":[],"src":"10764:0:11"},"scope":3021,"src":"10696:244:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2946,"nodeType":"Block","src":"11031:168:11","statements":[{"assignments":[2931],"declarations":[{"constant":false,"id":2931,"mutability":"mutable","name":"campaign","nameLocation":"11054:8:11","nodeType":"VariableDeclaration","scope":2946,"src":"11037:25:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$2232_storage_ptr","typeString":"struct TwitterV1.Campaign"},"typeName":{"id":2930,"nodeType":"UserDefinedTypeName","pathNode":{"id":2929,"name":"Campaign","nodeType":"IdentifierPath","referencedDeclaration":2232,"src":"11037:8:11"},"referencedDeclaration":2232,"src":"11037:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$2232_storage_ptr","typeString":"struct TwitterV1.Campaign"}},"visibility":"internal"}],"id":2935,"initialValue":{"arguments":[{"id":2933,"name":"campaignId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2924,"src":"11078:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2932,"name":"_getCampaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2820,"src":"11065:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_struct$_Campaign_$2232_storage_ptr_$","typeString":"function (uint256) view returns (struct TwitterV1.Campaign storage pointer)"}},"id":2934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11065:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$2232_storage_ptr","typeString":"struct TwitterV1.Campaign storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"11037:52:11"},{"assignments":[2937],"declarations":[{"constant":false,"id":2937,"mutability":"mutable","name":"retributionAmount","nameLocation":"11103:17:11","nodeType":"VariableDeclaration","scope":2946,"src":"11095:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2936,"name":"uint256","nodeType":"ElementaryTypeName","src":"11095:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2943,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2938,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2931,"src":"11123:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$2232_storage_ptr","typeString":"struct TwitterV1.Campaign storage pointer"}},"id":2939,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"budget","nodeType":"MemberAccess","referencedDeclaration":2225,"src":"11123:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"expression":{"id":2940,"name":"campaign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2931,"src":"11141:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Campaign_$2232_storage_ptr","typeString":"struct TwitterV1.Campaign storage pointer"}},"id":2941,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"partakersLimit","nodeType":"MemberAccess","referencedDeclaration":2229,"src":"11141:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11123:41:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11095:69:11"},{"expression":{"id":2944,"name":"retributionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2937,"src":"11177:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2928,"id":2945,"nodeType":"Return","src":"11170:24:11"}]},"id":2947,"implemented":true,"kind":"function","modifiers":[],"name":"_computeRetributionAmount","nameLocation":"10953:25:11","nodeType":"FunctionDefinition","parameters":{"id":2925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2924,"mutability":"mutable","name":"campaignId","nameLocation":"10987:10:11","nodeType":"VariableDeclaration","scope":2947,"src":"10979:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2923,"name":"uint256","nodeType":"ElementaryTypeName","src":"10979:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10978:20:11"},"returnParameters":{"id":2928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2927,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2947,"src":"11022:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2926,"name":"uint256","nodeType":"ElementaryTypeName","src":"11022:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11021:9:11"},"scope":3021,"src":"10944:255:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3005,"nodeType":"Block","src":"11405:373:11","statements":[{"assignments":[2963],"declarations":[{"constant":false,"id":2963,"mutability":"mutable","name":"req","nameLocation":"11436:3:11","nodeType":"VariableDeclaration","scope":3005,"src":"11411:28:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request"},"typeName":{"id":2962,"nodeType":"UserDefinedTypeName","pathNode":{"id":2961,"name":"Chainlink.Request","nodeType":"IdentifierPath","referencedDeclaration":25,"src":"11411:17:11"},"referencedDeclaration":25,"src":"11411:17:11","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_storage_ptr","typeString":"struct Chainlink.Request"}},"visibility":"internal"}],"id":2974,"initialValue":{"arguments":[{"id":2965,"name":"jobId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"11464:5:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":2968,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11479:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_TwitterV1_$3021","typeString":"contract TwitterV1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_TwitterV1_$3021","typeString":"contract TwitterV1"}],"id":2967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11471:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2966,"name":"address","nodeType":"ElementaryTypeName","src":"11471:7:11","typeDescriptions":{}}},"id":2969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11471:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"expression":{"id":2970,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11486:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_TwitterV1_$3021","typeString":"contract TwitterV1"}},"id":2971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"fulfillSignUp","nodeType":"MemberAccess","referencedDeclaration":2661,"src":"11486:18:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (bytes32,uint256,bool) external"}},"id":2972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"11486:27:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":2964,"name":"buildChainlinkRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"11442:21:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_address_$_t_bytes4_$returns$_t_struct$_Request_$25_memory_ptr_$","typeString":"function (bytes32,address,bytes4) pure returns (struct Chainlink.Request memory)"}},"id":2973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11442:72:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"nodeType":"VariableDeclarationStatement","src":"11411:103:11"},{"expression":{"arguments":[{"hexValue":"676574","id":2978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11528:5:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_6817c00f03de8b5bd58d2016b59d251c13056b989171c5852949903bc043bc27","typeString":"literal_string \"get\""},"value":"get"},{"arguments":[{"id":2980,"name":"_userId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"11548:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2979,"name":"getSignUpURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"11535:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":2981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11535:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6817c00f03de8b5bd58d2016b59d251c13056b989171c5852949903bc043bc27","typeString":"literal_string \"get\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2975,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2963,"src":"11520:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"id":2977,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":125,"src":"11520:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Request_$25_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$bound_to$_t_struct$_Request_$25_memory_ptr_$","typeString":"function (struct Chainlink.Request memory,string memory,string memory) pure"}},"id":2982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11520:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2983,"nodeType":"ExpressionStatement","src":"11520:37:11"},{"expression":{"arguments":[{"hexValue":"70617468","id":2987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11627:6:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_46f9db2921f88204395f1f47d741736216b2218e88e47f50e1f1b56261f0d0cd","typeString":"literal_string \"path\""},"value":"path"},{"hexValue":"6861735369676e65645570","id":2988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11635:13:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_a7fda8c00c23bea10966a24593ec59873e5648d508d68f84a1a6c248b6686a93","typeString":"literal_string \"hasSignedUp\""},"value":"hasSignedUp"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_46f9db2921f88204395f1f47d741736216b2218e88e47f50e1f1b56261f0d0cd","typeString":"literal_string \"path\""},{"typeIdentifier":"t_stringliteral_a7fda8c00c23bea10966a24593ec59873e5648d508d68f84a1a6c248b6686a93","typeString":"literal_string \"hasSignedUp\""}],"expression":{"id":2984,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2963,"src":"11619:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},"id":2986,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":125,"src":"11619:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Request_$25_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$bound_to$_t_struct$_Request_$25_memory_ptr_$","typeString":"function (struct Chainlink.Request memory,string memory,string memory) pure"}},"id":2989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11619:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2990,"nodeType":"ExpressionStatement","src":"11619:30:11"},{"assignments":[2992],"declarations":[{"constant":false,"id":2992,"mutability":"mutable","name":"requestId","nameLocation":"11663:9:11","nodeType":"VariableDeclaration","scope":3005,"src":"11655:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2991,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11655:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2997,"initialValue":{"arguments":[{"id":2994,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2963,"src":"11696:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"}},{"id":2995,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"11701:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Request_$25_memory_ptr","typeString":"struct Chainlink.Request memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2993,"name":"sendChainlinkRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"11675:20:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Request_$25_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct Chainlink.Request memory,uint256) returns (bytes32)"}},"id":2996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11675:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"11655:50:11"},{"eventCall":{"arguments":[{"id":2999,"name":"_userId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"11732:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3000,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2992,"src":"11741:9:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2998,"name":"SignUpRequested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"11716:15:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (uint256,bytes32)"}},"id":3001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11716:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3002,"nodeType":"EmitStatement","src":"11711:40:11"},{"expression":{"id":3003,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2992,"src":"11764:9:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2958,"id":3004,"nodeType":"Return","src":"11757:16:11"}]},"documentation":{"id":2948,"nodeType":"StructuredDocumentation","src":"11203:97:11","text":" @notice Create request to sign up user\n @dev only admin can call this function"},"id":3006,"implemented":true,"kind":"function","modifiers":[{"id":2953,"kind":"modifierInvocation","modifierName":{"id":2952,"name":"onlyAdmin","nodeType":"IdentifierPath","referencedDeclaration":3020,"src":"11352:9:11"},"nodeType":"ModifierInvocation","src":"11352:9:11"},{"id":2955,"kind":"modifierInvocation","modifierName":{"id":2954,"name":"whenNotPaused","nodeType":"IdentifierPath","referencedDeclaration":3254,"src":"11362:13:11"},"nodeType":"ModifierInvocation","src":"11362:13:11"}],"name":"_requestSignUp","nameLocation":"11312:14:11","nodeType":"FunctionDefinition","parameters":{"id":2951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2950,"mutability":"mutable","name":"_userId","nameLocation":"11335:7:11","nodeType":"VariableDeclaration","scope":3006,"src":"11327:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2949,"name":"uint256","nodeType":"ElementaryTypeName","src":"11327:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11326:17:11"},"returnParameters":{"id":2958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2957,"mutability":"mutable","name":"_requestId","nameLocation":"11393:10:11","nodeType":"VariableDeclaration","scope":3006,"src":"11385:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2956,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11385:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"11384:20:11"},"scope":3021,"src":"11303:475:11","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3019,"nodeType":"Block","src":"11914:75:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3010,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11928:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"11928:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3012,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"11942:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11942:7:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11928:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616c6c6572206973206e6f74207468652061646d696e","id":3015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11951:25:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_aa8ec5d8fae9f4324168b2ce12ce357d4c8138c22ffca90f21d943a8359ed9fe","typeString":"literal_string \"Caller is not the admin\""},"value":"Caller is not the admin"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_aa8ec5d8fae9f4324168b2ce12ce357d4c8138c22ffca90f21d943a8359ed9fe","typeString":"literal_string \"Caller is not the admin\""}],"id":3009,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11920:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11920:57:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3017,"nodeType":"ExpressionStatement","src":"11920:57:11"},{"id":3018,"nodeType":"PlaceholderStatement","src":"11983:1:11"}]},"documentation":{"id":3007,"nodeType":"StructuredDocumentation","src":"11811:79:11","text":" @notice Modifier that ensure only admin can access this function"},"id":3020,"name":"onlyAdmin","nameLocation":"11902:9:11","nodeType":"ModifierDefinition","parameters":{"id":3008,"nodeType":"ParameterList","parameters":[],"src":"11911:2:11"},"src":"11893:96:11","virtual":false,"visibility":"internal"}],"scope":3022,"src":"536:11455:11","usedErrors":[]}],"src":"32:11960:11"},"id":11},"vendor/openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"vendor/openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[3360],"Ownable":[3126]},"id":3127,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3023,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"87:23:12"},{"absolutePath":"vendor/openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3024,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3127,"sourceUnit":3361,"src":"112:30:12","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3026,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":3360,"src":"668:7:12"},"id":3027,"nodeType":"InheritanceSpecifier","src":"668:7:12"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":3025,"nodeType":"StructuredDocumentation","src":"144:494:12","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":3126,"linearizedBaseContracts":[3126,3360],"name":"Ownable","nameLocation":"657:7:12","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":3029,"mutability":"mutable","name":"_owner","nameLocation":"698:6:12","nodeType":"VariableDeclaration","scope":3126,"src":"682:22:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3028,"name":"address","nodeType":"ElementaryTypeName","src":"682:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":3035,"name":"OwnershipTransferred","nameLocation":"717:20:12","nodeType":"EventDefinition","parameters":{"id":3034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3031,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"754:13:12","nodeType":"VariableDeclaration","scope":3035,"src":"738:29:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3030,"name":"address","nodeType":"ElementaryTypeName","src":"738:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3033,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"785:8:12","nodeType":"VariableDeclaration","scope":3035,"src":"769:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3032,"name":"address","nodeType":"ElementaryTypeName","src":"769:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"737:57:12"},"src":"711:84:12"},{"body":{"id":3044,"nodeType":"Block","src":"911:49:12","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3040,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"940:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"940:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3039,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"921:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"921:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3043,"nodeType":"ExpressionStatement","src":"921:32:12"}]},"documentation":{"id":3036,"nodeType":"StructuredDocumentation","src":"801:91:12","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":3045,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3037,"nodeType":"ParameterList","parameters":[],"src":"908:2:12"},"returnParameters":{"id":3038,"nodeType":"ParameterList","parameters":[],"src":"911:0:12"},"scope":3126,"src":"897:63:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3053,"nodeType":"Block","src":"1091:30:12","statements":[{"expression":{"id":3051,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"1108:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3050,"id":3052,"nodeType":"Return","src":"1101:13:12"}]},"documentation":{"id":3046,"nodeType":"StructuredDocumentation","src":"966:65:12","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":3054,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1045:5:12","nodeType":"FunctionDefinition","parameters":{"id":3047,"nodeType":"ParameterList","parameters":[],"src":"1050:2:12"},"returnParameters":{"id":3050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3049,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3054,"src":"1082:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3048,"name":"address","nodeType":"ElementaryTypeName","src":"1082:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1081:9:12"},"scope":3126,"src":"1036:85:12","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3067,"nodeType":"Block","src":"1230:96:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3058,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"1248:5:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1248:7:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3060,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"1259:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1259:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1248:23:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":3063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1273:34:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":3057,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1240:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1240:68:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3065,"nodeType":"ExpressionStatement","src":"1240:68:12"},{"id":3066,"nodeType":"PlaceholderStatement","src":"1318:1:12"}]},"documentation":{"id":3055,"nodeType":"StructuredDocumentation","src":"1127:77:12","text":" @dev Throws if called by any account other than the owner."},"id":3068,"name":"onlyOwner","nameLocation":"1218:9:12","nodeType":"ModifierDefinition","parameters":{"id":3056,"nodeType":"ParameterList","parameters":[],"src":"1227:2:12"},"src":"1209:117:12","virtual":false,"visibility":"internal"},{"body":{"id":3081,"nodeType":"Block","src":"1722:47:12","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":3077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1759:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1751:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3075,"name":"address","nodeType":"ElementaryTypeName","src":"1751:7:12","typeDescriptions":{}}},"id":3078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1751:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3074,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"1732:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1732:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3080,"nodeType":"ExpressionStatement","src":"1732:30:12"}]},"documentation":{"id":3069,"nodeType":"StructuredDocumentation","src":"1332:331:12","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":3082,"implemented":true,"kind":"function","modifiers":[{"id":3072,"kind":"modifierInvocation","modifierName":{"id":3071,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":3068,"src":"1712:9:12"},"nodeType":"ModifierInvocation","src":"1712:9:12"}],"name":"renounceOwnership","nameLocation":"1677:17:12","nodeType":"FunctionDefinition","parameters":{"id":3070,"nodeType":"ParameterList","parameters":[],"src":"1694:2:12"},"returnParameters":{"id":3073,"nodeType":"ParameterList","parameters":[],"src":"1722:0:12"},"scope":3126,"src":"1668:101:12","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":3104,"nodeType":"Block","src":"1988:128:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3091,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3085,"src":"2006:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2026:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3093,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2018:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3092,"name":"address","nodeType":"ElementaryTypeName","src":"2018:7:12","typeDescriptions":{}}},"id":3095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2018:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2006:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":3097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2030:40:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":3090,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1998:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1998:73:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3099,"nodeType":"ExpressionStatement","src":"1998:73:12"},{"expression":{"arguments":[{"id":3101,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3085,"src":"2100:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3100,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"2081:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2081:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3103,"nodeType":"ExpressionStatement","src":"2081:28:12"}]},"documentation":{"id":3083,"nodeType":"StructuredDocumentation","src":"1775:138:12","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":3105,"implemented":true,"kind":"function","modifiers":[{"id":3088,"kind":"modifierInvocation","modifierName":{"id":3087,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":3068,"src":"1978:9:12"},"nodeType":"ModifierInvocation","src":"1978:9:12"}],"name":"transferOwnership","nameLocation":"1927:17:12","nodeType":"FunctionDefinition","parameters":{"id":3086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3085,"mutability":"mutable","name":"newOwner","nameLocation":"1953:8:12","nodeType":"VariableDeclaration","scope":3105,"src":"1945:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3084,"name":"address","nodeType":"ElementaryTypeName","src":"1945:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1944:18:12"},"returnParameters":{"id":3089,"nodeType":"ParameterList","parameters":[],"src":"1988:0:12"},"scope":3126,"src":"1918:198:12","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":3124,"nodeType":"Block","src":"2333:124:12","statements":[{"assignments":[3112],"declarations":[{"constant":false,"id":3112,"mutability":"mutable","name":"oldOwner","nameLocation":"2351:8:12","nodeType":"VariableDeclaration","scope":3124,"src":"2343:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3111,"name":"address","nodeType":"ElementaryTypeName","src":"2343:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3114,"initialValue":{"id":3113,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"2362:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2343:25:12"},{"expression":{"id":3117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3115,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"2378:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3116,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3108,"src":"2387:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2378:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3118,"nodeType":"ExpressionStatement","src":"2378:17:12"},{"eventCall":{"arguments":[{"id":3120,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"2431:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3121,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3108,"src":"2441:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3119,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"2410:20:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":3122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2410:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3123,"nodeType":"EmitStatement","src":"2405:45:12"}]},"documentation":{"id":3106,"nodeType":"StructuredDocumentation","src":"2122:143:12","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":3125,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2279:18:12","nodeType":"FunctionDefinition","parameters":{"id":3109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3108,"mutability":"mutable","name":"newOwner","nameLocation":"2306:8:12","nodeType":"VariableDeclaration","scope":3125,"src":"2298:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3107,"name":"address","nodeType":"ElementaryTypeName","src":"2298:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2297:18:12"},"returnParameters":{"id":3110,"nodeType":"ParameterList","parameters":[],"src":"2333:0:12"},"scope":3126,"src":"2270:187:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":3127,"src":"639:1820:12","usedErrors":[]}],"src":"87:2373:12"},"id":12},"vendor/openzeppelin/contracts/proxy/Clones.sol":{"ast":{"absolutePath":"vendor/openzeppelin/contracts/proxy/Clones.sol","exportedSymbols":{"Clones":[3206]},"id":3207,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3128,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"85:23:13"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":3129,"nodeType":"StructuredDocumentation","src":"110:629:13","text":" @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\n deploying minimal proxy contracts, also known as \"clones\".\n > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n deterministic method.\n _Available since v3.4._"},"fullyImplemented":true,"id":3206,"linearizedBaseContracts":[3206],"name":"Clones","nameLocation":"748:6:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":3148,"nodeType":"Block","src":"1033:440:13","statements":[{"AST":{"nodeType":"YulBlock","src":"1052:348:13","statements":[{"nodeType":"YulVariableDeclaration","src":"1066:22:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1083:4:13","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1077:5:13"},"nodeType":"YulFunctionCall","src":"1077:11:13"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"1070:3:13","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1108:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"1113:66:13","type":"","value":"0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1101:6:13"},"nodeType":"YulFunctionCall","src":"1101:79:13"},"nodeType":"YulExpressionStatement","src":"1101:79:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1204:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"1209:4:13","type":"","value":"0x14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1200:3:13"},"nodeType":"YulFunctionCall","src":"1200:14:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1220:4:13","type":"","value":"0x60"},{"name":"implementation","nodeType":"YulIdentifier","src":"1226:14:13"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1216:3:13"},"nodeType":"YulFunctionCall","src":"1216:25:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1193:6:13"},"nodeType":"YulFunctionCall","src":"1193:49:13"},"nodeType":"YulExpressionStatement","src":"1193:49:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1266:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"1271:4:13","type":"","value":"0x28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1262:3:13"},"nodeType":"YulFunctionCall","src":"1262:14:13"},{"kind":"number","nodeType":"YulLiteral","src":"1278:66:13","type":"","value":"0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1255:6:13"},"nodeType":"YulFunctionCall","src":"1255:90:13"},"nodeType":"YulExpressionStatement","src":"1255:90:13"},{"nodeType":"YulAssignment","src":"1358:32:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1377:1:13","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"1380:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"1385:4:13","type":"","value":"0x37"}],"functionName":{"name":"create","nodeType":"YulIdentifier","src":"1370:6:13"},"nodeType":"YulFunctionCall","src":"1370:20:13"},"variableNames":[{"name":"instance","nodeType":"YulIdentifier","src":"1358:8:13"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":3132,"isOffset":false,"isSlot":false,"src":"1226:14:13","valueSize":1},{"declaration":3135,"isOffset":false,"isSlot":false,"src":"1358:8:13","valueSize":1}],"id":3137,"nodeType":"InlineAssembly","src":"1043:357:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3139,"name":"instance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3135,"src":"1417:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1437:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1429:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3140,"name":"address","nodeType":"ElementaryTypeName","src":"1429:7:13","typeDescriptions":{}}},"id":3143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1429:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1417:22:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313136373a20637265617465206661696c6564","id":3145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1441:24:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335","typeString":"literal_string \"ERC1167: create failed\""},"value":"ERC1167: create failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335","typeString":"literal_string \"ERC1167: create failed\""}],"id":3138,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1409:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1409:57:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3147,"nodeType":"ExpressionStatement","src":"1409:57:13"}]},"documentation":{"id":3130,"nodeType":"StructuredDocumentation","src":"761:192:13","text":" @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n This function uses the create opcode, which should never revert."},"id":3149,"implemented":true,"kind":"function","modifiers":[],"name":"clone","nameLocation":"967:5:13","nodeType":"FunctionDefinition","parameters":{"id":3133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3132,"mutability":"mutable","name":"implementation","nameLocation":"981:14:13","nodeType":"VariableDeclaration","scope":3149,"src":"973:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3131,"name":"address","nodeType":"ElementaryTypeName","src":"973:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"972:24:13"},"returnParameters":{"id":3136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3135,"mutability":"mutable","name":"instance","nameLocation":"1023:8:13","nodeType":"VariableDeclaration","scope":3149,"src":"1015:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3134,"name":"address","nodeType":"ElementaryTypeName","src":"1015:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1014:18:13"},"scope":3206,"src":"958:515:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3170,"nodeType":"Block","src":"1950:448:13","statements":[{"AST":{"nodeType":"YulBlock","src":"1969:355:13","statements":[{"nodeType":"YulVariableDeclaration","src":"1983:22:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2000:4:13","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1994:5:13"},"nodeType":"YulFunctionCall","src":"1994:11:13"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"1987:3:13","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"2025:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"2030:66:13","type":"","value":"0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2018:6:13"},"nodeType":"YulFunctionCall","src":"2018:79:13"},"nodeType":"YulExpressionStatement","src":"2018:79:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"2121:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"2126:4:13","type":"","value":"0x14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2117:3:13"},"nodeType":"YulFunctionCall","src":"2117:14:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2137:4:13","type":"","value":"0x60"},{"name":"implementation","nodeType":"YulIdentifier","src":"2143:14:13"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2133:3:13"},"nodeType":"YulFunctionCall","src":"2133:25:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2110:6:13"},"nodeType":"YulFunctionCall","src":"2110:49:13"},"nodeType":"YulExpressionStatement","src":"2110:49:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"2183:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"2188:4:13","type":"","value":"0x28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2179:3:13"},"nodeType":"YulFunctionCall","src":"2179:14:13"},{"kind":"number","nodeType":"YulLiteral","src":"2195:66:13","type":"","value":"0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2172:6:13"},"nodeType":"YulFunctionCall","src":"2172:90:13"},"nodeType":"YulExpressionStatement","src":"2172:90:13"},{"nodeType":"YulAssignment","src":"2275:39:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2295:1:13","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"2298:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"2303:4:13","type":"","value":"0x37"},{"name":"salt","nodeType":"YulIdentifier","src":"2309:4:13"}],"functionName":{"name":"create2","nodeType":"YulIdentifier","src":"2287:7:13"},"nodeType":"YulFunctionCall","src":"2287:27:13"},"variableNames":[{"name":"instance","nodeType":"YulIdentifier","src":"2275:8:13"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":3152,"isOffset":false,"isSlot":false,"src":"2143:14:13","valueSize":1},{"declaration":3157,"isOffset":false,"isSlot":false,"src":"2275:8:13","valueSize":1},{"declaration":3154,"isOffset":false,"isSlot":false,"src":"2309:4:13","valueSize":1}],"id":3159,"nodeType":"InlineAssembly","src":"1960:364:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3161,"name":"instance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3157,"src":"2341:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2361:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3163,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2353:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3162,"name":"address","nodeType":"ElementaryTypeName","src":"2353:7:13","typeDescriptions":{}}},"id":3165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2353:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2341:22:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313136373a2063726561746532206661696c6564","id":3167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2365:25:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_4ec050e530ce66e7658278ab7a4e4a2f19225159c48fc52eb249bd268e755d73","typeString":"literal_string \"ERC1167: create2 failed\""},"value":"ERC1167: create2 failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4ec050e530ce66e7658278ab7a4e4a2f19225159c48fc52eb249bd268e755d73","typeString":"literal_string \"ERC1167: create2 failed\""}],"id":3160,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2333:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2333:58:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3169,"nodeType":"ExpressionStatement","src":"2333:58:13"}]},"documentation":{"id":3150,"nodeType":"StructuredDocumentation","src":"1479:364:13","text":" @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n This function uses the create2 opcode and a `salt` to deterministically deploy\n the clone. Using the same `implementation` and `salt` multiple time will revert, since\n the clones cannot be deployed twice at the same address."},"id":3171,"implemented":true,"kind":"function","modifiers":[],"name":"cloneDeterministic","nameLocation":"1857:18:13","nodeType":"FunctionDefinition","parameters":{"id":3155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3152,"mutability":"mutable","name":"implementation","nameLocation":"1884:14:13","nodeType":"VariableDeclaration","scope":3171,"src":"1876:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3151,"name":"address","nodeType":"ElementaryTypeName","src":"1876:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3154,"mutability":"mutable","name":"salt","nameLocation":"1908:4:13","nodeType":"VariableDeclaration","scope":3171,"src":"1900:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3153,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1900:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1875:38:13"},"returnParameters":{"id":3158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3157,"mutability":"mutable","name":"instance","nameLocation":"1940:8:13","nodeType":"VariableDeclaration","scope":3171,"src":"1932:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3156,"name":"address","nodeType":"ElementaryTypeName","src":"1932:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1931:18:13"},"scope":3206,"src":"1848:550:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3184,"nodeType":"Block","src":"2673:539:13","statements":[{"AST":{"nodeType":"YulBlock","src":"2692:514:13","statements":[{"nodeType":"YulVariableDeclaration","src":"2706:22:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2723:4:13","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2717:5:13"},"nodeType":"YulFunctionCall","src":"2717:11:13"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"2710:3:13","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"2748:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"2753:66:13","type":"","value":"0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2741:6:13"},"nodeType":"YulFunctionCall","src":"2741:79:13"},"nodeType":"YulExpressionStatement","src":"2741:79:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"2844:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"2849:4:13","type":"","value":"0x14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2840:3:13"},"nodeType":"YulFunctionCall","src":"2840:14:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2860:4:13","type":"","value":"0x60"},{"name":"implementation","nodeType":"YulIdentifier","src":"2866:14:13"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2856:3:13"},"nodeType":"YulFunctionCall","src":"2856:25:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2833:6:13"},"nodeType":"YulFunctionCall","src":"2833:49:13"},"nodeType":"YulExpressionStatement","src":"2833:49:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"2906:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"2911:4:13","type":"","value":"0x28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2902:3:13"},"nodeType":"YulFunctionCall","src":"2902:14:13"},{"kind":"number","nodeType":"YulLiteral","src":"2918:66:13","type":"","value":"0x5af43d82803e903d91602b57fd5bf3ff00000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2895:6:13"},"nodeType":"YulFunctionCall","src":"2895:90:13"},"nodeType":"YulExpressionStatement","src":"2895:90:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3009:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"3014:4:13","type":"","value":"0x38"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3005:3:13"},"nodeType":"YulFunctionCall","src":"3005:14:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3025:4:13","type":"","value":"0x60"},{"name":"deployer","nodeType":"YulIdentifier","src":"3031:8:13"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3021:3:13"},"nodeType":"YulFunctionCall","src":"3021:19:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2998:6:13"},"nodeType":"YulFunctionCall","src":"2998:43:13"},"nodeType":"YulExpressionStatement","src":"2998:43:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3065:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"3070:4:13","type":"","value":"0x4c"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3061:3:13"},"nodeType":"YulFunctionCall","src":"3061:14:13"},{"name":"salt","nodeType":"YulIdentifier","src":"3077:4:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3054:6:13"},"nodeType":"YulFunctionCall","src":"3054:28:13"},"nodeType":"YulExpressionStatement","src":"3054:28:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3106:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"3111:4:13","type":"","value":"0x6c"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3102:3:13"},"nodeType":"YulFunctionCall","src":"3102:14:13"},{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3128:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"3133:4:13","type":"","value":"0x37"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3118:9:13"},"nodeType":"YulFunctionCall","src":"3118:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3095:6:13"},"nodeType":"YulFunctionCall","src":"3095:44:13"},"nodeType":"YulExpressionStatement","src":"3095:44:13"},{"nodeType":"YulAssignment","src":"3152:44:13","value":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3179:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"3184:4:13","type":"","value":"0x37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3175:3:13"},"nodeType":"YulFunctionCall","src":"3175:14:13"},{"kind":"number","nodeType":"YulLiteral","src":"3191:4:13","type":"","value":"0x55"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3165:9:13"},"nodeType":"YulFunctionCall","src":"3165:31:13"},"variableNames":[{"name":"predicted","nodeType":"YulIdentifier","src":"3152:9:13"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":3178,"isOffset":false,"isSlot":false,"src":"3031:8:13","valueSize":1},{"declaration":3174,"isOffset":false,"isSlot":false,"src":"2866:14:13","valueSize":1},{"declaration":3181,"isOffset":false,"isSlot":false,"src":"3152:9:13","valueSize":1},{"declaration":3176,"isOffset":false,"isSlot":false,"src":"3077:4:13","valueSize":1}],"id":3183,"nodeType":"InlineAssembly","src":"2683:523:13"}]},"documentation":{"id":3172,"nodeType":"StructuredDocumentation","src":"2404:99:13","text":" @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."},"id":3185,"implemented":true,"kind":"function","modifiers":[],"name":"predictDeterministicAddress","nameLocation":"2517:27:13","nodeType":"FunctionDefinition","parameters":{"id":3179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3174,"mutability":"mutable","name":"implementation","nameLocation":"2562:14:13","nodeType":"VariableDeclaration","scope":3185,"src":"2554:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3173,"name":"address","nodeType":"ElementaryTypeName","src":"2554:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3176,"mutability":"mutable","name":"salt","nameLocation":"2594:4:13","nodeType":"VariableDeclaration","scope":3185,"src":"2586:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3175,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2586:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3178,"mutability":"mutable","name":"deployer","nameLocation":"2616:8:13","nodeType":"VariableDeclaration","scope":3185,"src":"2608:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3177,"name":"address","nodeType":"ElementaryTypeName","src":"2608:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2544:86:13"},"returnParameters":{"id":3182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3181,"mutability":"mutable","name":"predicted","nameLocation":"2662:9:13","nodeType":"VariableDeclaration","scope":3185,"src":"2654:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3180,"name":"address","nodeType":"ElementaryTypeName","src":"2654:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2653:19:13"},"scope":3206,"src":"2508:704:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3204,"nodeType":"Block","src":"3467:88:13","statements":[{"expression":{"arguments":[{"id":3196,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3188,"src":"3512:14:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3197,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3190,"src":"3528:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":3200,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3542:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_Clones_$3206","typeString":"library Clones"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Clones_$3206","typeString":"library Clones"}],"id":3199,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3534:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3198,"name":"address","nodeType":"ElementaryTypeName","src":"3534:7:13","typeDescriptions":{}}},"id":3201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3534:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3195,"name":"predictDeterministicAddress","nodeType":"Identifier","overloadedDeclarations":[3185,3205],"referencedDeclaration":3185,"src":"3484:27:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_bytes32_$_t_address_$returns$_t_address_$","typeString":"function (address,bytes32,address) pure returns (address)"}},"id":3202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3484:64:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3194,"id":3203,"nodeType":"Return","src":"3477:71:13"}]},"documentation":{"id":3186,"nodeType":"StructuredDocumentation","src":"3218:99:13","text":" @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."},"id":3205,"implemented":true,"kind":"function","modifiers":[],"name":"predictDeterministicAddress","nameLocation":"3331:27:13","nodeType":"FunctionDefinition","parameters":{"id":3191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3188,"mutability":"mutable","name":"implementation","nameLocation":"3367:14:13","nodeType":"VariableDeclaration","scope":3205,"src":"3359:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3187,"name":"address","nodeType":"ElementaryTypeName","src":"3359:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3190,"mutability":"mutable","name":"salt","nameLocation":"3391:4:13","nodeType":"VariableDeclaration","scope":3205,"src":"3383:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3189,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3383:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3358:38:13"},"returnParameters":{"id":3194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3193,"mutability":"mutable","name":"predicted","nameLocation":"3452:9:13","nodeType":"VariableDeclaration","scope":3205,"src":"3444:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3192,"name":"address","nodeType":"ElementaryTypeName","src":"3444:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3443:19:13"},"scope":3206,"src":"3322:233:13","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3207,"src":"740:2817:13","usedErrors":[]}],"src":"85:3473:13"},"id":13},"vendor/openzeppelin/contracts/security/Pausable.sol":{"ast":{"absolutePath":"vendor/openzeppelin/contracts/security/Pausable.sol","exportedSymbols":{"Context":[3360],"Pausable":[3298]},"id":3299,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3208,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"90:23:14"},{"absolutePath":"vendor/openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3209,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3299,"sourceUnit":3361,"src":"115:30:14","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3211,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":3360,"src":"617:7:14"},"id":3212,"nodeType":"InheritanceSpecifier","src":"617:7:14"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":3210,"nodeType":"StructuredDocumentation","src":"147:439:14","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":3298,"linearizedBaseContracts":[3298,3360],"name":"Pausable","nameLocation":"605:8:14","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":3213,"nodeType":"StructuredDocumentation","src":"631:73:14","text":" @dev Emitted when the pause is triggered by `account`."},"id":3217,"name":"Paused","nameLocation":"715:6:14","nodeType":"EventDefinition","parameters":{"id":3216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3215,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"730:7:14","nodeType":"VariableDeclaration","scope":3217,"src":"722:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3214,"name":"address","nodeType":"ElementaryTypeName","src":"722:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"721:17:14"},"src":"709:30:14"},{"anonymous":false,"documentation":{"id":3218,"nodeType":"StructuredDocumentation","src":"745:70:14","text":" @dev Emitted when the pause is lifted by `account`."},"id":3222,"name":"Unpaused","nameLocation":"826:8:14","nodeType":"EventDefinition","parameters":{"id":3221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3220,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"843:7:14","nodeType":"VariableDeclaration","scope":3222,"src":"835:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3219,"name":"address","nodeType":"ElementaryTypeName","src":"835:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"834:17:14"},"src":"820:32:14"},{"constant":false,"id":3224,"mutability":"mutable","name":"_paused","nameLocation":"871:7:14","nodeType":"VariableDeclaration","scope":3298,"src":"858:20:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3223,"name":"bool","nodeType":"ElementaryTypeName","src":"858:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"body":{"id":3232,"nodeType":"Block","src":"971:32:14","statements":[{"expression":{"id":3230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3228,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"981:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":3229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"991:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"981:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3231,"nodeType":"ExpressionStatement","src":"981:15:14"}]},"documentation":{"id":3225,"nodeType":"StructuredDocumentation","src":"885:67:14","text":" @dev Initializes the contract in unpaused state."},"id":3233,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3226,"nodeType":"ParameterList","parameters":[],"src":"968:2:14"},"returnParameters":{"id":3227,"nodeType":"ParameterList","parameters":[],"src":"971:0:14"},"scope":3298,"src":"957:46:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3241,"nodeType":"Block","src":"1151:31:14","statements":[{"expression":{"id":3239,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"1168:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3238,"id":3240,"nodeType":"Return","src":"1161:14:14"}]},"documentation":{"id":3234,"nodeType":"StructuredDocumentation","src":"1009:84:14","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":3242,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1107:6:14","nodeType":"FunctionDefinition","parameters":{"id":3235,"nodeType":"ParameterList","parameters":[],"src":"1113:2:14"},"returnParameters":{"id":3238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3237,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3242,"src":"1145:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3236,"name":"bool","nodeType":"ElementaryTypeName","src":"1145:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1144:6:14"},"scope":3298,"src":"1098:84:14","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3253,"nodeType":"Block","src":"1393:66:14","statements":[{"expression":{"arguments":[{"id":3248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1411:9:14","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3246,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"1412:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":3247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1412:8:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a20706175736564","id":3249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1422:18:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""},"value":"Pausable: paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""}],"id":3245,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1403:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1403:38:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3251,"nodeType":"ExpressionStatement","src":"1403:38:14"},{"id":3252,"nodeType":"PlaceholderStatement","src":"1451:1:14"}]},"documentation":{"id":3243,"nodeType":"StructuredDocumentation","src":"1188:175:14","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":3254,"name":"whenNotPaused","nameLocation":"1377:13:14","nodeType":"ModifierDefinition","parameters":{"id":3244,"nodeType":"ParameterList","parameters":[],"src":"1390:2:14"},"src":"1368:91:14","virtual":false,"visibility":"internal"},{"body":{"id":3264,"nodeType":"Block","src":"1659:69:14","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3258,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"1677:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":3259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1677:8:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a206e6f7420706175736564","id":3260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1687:22:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""},"value":"Pausable: not paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""}],"id":3257,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1669:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1669:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3262,"nodeType":"ExpressionStatement","src":"1669:41:14"},{"id":3263,"nodeType":"PlaceholderStatement","src":"1720:1:14"}]},"documentation":{"id":3255,"nodeType":"StructuredDocumentation","src":"1465:167:14","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":3265,"name":"whenPaused","nameLocation":"1646:10:14","nodeType":"ModifierDefinition","parameters":{"id":3256,"nodeType":"ParameterList","parameters":[],"src":"1656:2:14"},"src":"1637:91:14","virtual":false,"visibility":"internal"},{"body":{"id":3280,"nodeType":"Block","src":"1912:66:14","statements":[{"expression":{"id":3273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3271,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"1922:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1932:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1922:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3274,"nodeType":"ExpressionStatement","src":"1922:14:14"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3276,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"1958:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1958:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3275,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3217,"src":"1951:6:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1951:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3279,"nodeType":"EmitStatement","src":"1946:25:14"}]},"documentation":{"id":3266,"nodeType":"StructuredDocumentation","src":"1734:124:14","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":3281,"implemented":true,"kind":"function","modifiers":[{"id":3269,"kind":"modifierInvocation","modifierName":{"id":3268,"name":"whenNotPaused","nodeType":"IdentifierPath","referencedDeclaration":3254,"src":"1898:13:14"},"nodeType":"ModifierInvocation","src":"1898:13:14"}],"name":"_pause","nameLocation":"1872:6:14","nodeType":"FunctionDefinition","parameters":{"id":3267,"nodeType":"ParameterList","parameters":[],"src":"1878:2:14"},"returnParameters":{"id":3270,"nodeType":"ParameterList","parameters":[],"src":"1912:0:14"},"scope":3298,"src":"1863:115:14","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3296,"nodeType":"Block","src":"2158:69:14","statements":[{"expression":{"id":3289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3287,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"2168:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":3288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2178:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2168:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3290,"nodeType":"ExpressionStatement","src":"2168:15:14"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3292,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"2207:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2207:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3291,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"2198:8:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2198:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3295,"nodeType":"EmitStatement","src":"2193:27:14"}]},"documentation":{"id":3282,"nodeType":"StructuredDocumentation","src":"1984:121:14","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":3297,"implemented":true,"kind":"function","modifiers":[{"id":3285,"kind":"modifierInvocation","modifierName":{"id":3284,"name":"whenPaused","nodeType":"IdentifierPath","referencedDeclaration":3265,"src":"2147:10:14"},"nodeType":"ModifierInvocation","src":"2147:10:14"}],"name":"_unpause","nameLocation":"2119:8:14","nodeType":"FunctionDefinition","parameters":{"id":3283,"nodeType":"ParameterList","parameters":[],"src":"2127:2:14"},"returnParameters":{"id":3286,"nodeType":"ParameterList","parameters":[],"src":"2158:0:14"},"scope":3298,"src":"2110:117:14","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":3299,"src":"587:1642:14","usedErrors":[]}],"src":"90:2140:14"},"id":14},"vendor/openzeppelin/contracts/security/ReentrancyGuard.sol":{"ast":{"absolutePath":"vendor/openzeppelin/contracts/security/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[3338]},"id":3339,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3300,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"97:23:15"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":3301,"nodeType":"StructuredDocumentation","src":"122:750:15","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":3338,"linearizedBaseContracts":[3338],"name":"ReentrancyGuard","nameLocation":"891:15:15","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":3304,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1686:12:15","nodeType":"VariableDeclaration","scope":3338,"src":"1661:41:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3302,"name":"uint256","nodeType":"ElementaryTypeName","src":"1661:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":3303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1701:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":3307,"mutability":"constant","name":"_ENTERED","nameLocation":"1733:8:15","nodeType":"VariableDeclaration","scope":3338,"src":"1708:37:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3305,"name":"uint256","nodeType":"ElementaryTypeName","src":"1708:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":3306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1744:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":3309,"mutability":"mutable","name":"_status","nameLocation":"1768:7:15","nodeType":"VariableDeclaration","scope":3338,"src":"1752:23:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3308,"name":"uint256","nodeType":"ElementaryTypeName","src":"1752:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":3316,"nodeType":"Block","src":"1796:39:15","statements":[{"expression":{"id":3314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3312,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3309,"src":"1806:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3313,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3304,"src":"1816:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1806:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3315,"nodeType":"ExpressionStatement","src":"1806:22:15"}]},"id":3317,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3310,"nodeType":"ParameterList","parameters":[],"src":"1793:2:15"},"returnParameters":{"id":3311,"nodeType":"ParameterList","parameters":[],"src":"1796:0:15"},"scope":3338,"src":"1782:53:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3336,"nodeType":"Block","src":"2236:421:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3321,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3309,"src":"2325:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3322,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"2336:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2325:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":3324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2346:33:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":3320,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2317:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2317:63:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3326,"nodeType":"ExpressionStatement","src":"2317:63:15"},{"expression":{"id":3329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3327,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3309,"src":"2455:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3328,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"2465:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2455:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3330,"nodeType":"ExpressionStatement","src":"2455:18:15"},{"id":3331,"nodeType":"PlaceholderStatement","src":"2484:1:15"},{"expression":{"id":3334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3332,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3309,"src":"2628:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3333,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3304,"src":"2638:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2628:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3335,"nodeType":"ExpressionStatement","src":"2628:22:15"}]},"documentation":{"id":3318,"nodeType":"StructuredDocumentation","src":"1841:366:15","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":3337,"name":"nonReentrant","nameLocation":"2221:12:15","nodeType":"ModifierDefinition","parameters":{"id":3319,"nodeType":"ParameterList","parameters":[],"src":"2233:2:15"},"src":"2212:445:15","virtual":false,"visibility":"internal"}],"scope":3339,"src":"873:1786:15","usedErrors":[]}],"src":"97:2563:15"},"id":15},"vendor/openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"vendor/openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[3360]},"id":3361,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3340,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:16"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":3341,"nodeType":"StructuredDocumentation","src":"111:496:16","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":3360,"linearizedBaseContracts":[3360],"name":"Context","nameLocation":"626:7:16","nodeType":"ContractDefinition","nodes":[{"body":{"id":3349,"nodeType":"Block","src":"702:34:16","statements":[{"expression":{"expression":{"id":3346,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3345,"id":3348,"nodeType":"Return","src":"712:17:16"}]},"id":3350,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:16","nodeType":"FunctionDefinition","parameters":{"id":3342,"nodeType":"ParameterList","parameters":[],"src":"659:2:16"},"returnParameters":{"id":3345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3344,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3350,"src":"693:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3343,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:16"},"scope":3360,"src":"640:96:16","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3358,"nodeType":"Block","src":"809:32:16","statements":[{"expression":{"expression":{"id":3355,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:16","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":3354,"id":3357,"nodeType":"Return","src":"819:15:16"}]},"id":3359,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:16","nodeType":"FunctionDefinition","parameters":{"id":3351,"nodeType":"ParameterList","parameters":[],"src":"759:2:16"},"returnParameters":{"id":3354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3353,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3359,"src":"793:14:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3352,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:16"},"scope":3360,"src":"742:99:16","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":3361,"src":"608:235:16","usedErrors":[]}],"src":"86:758:16"},"id":16},"vendor/openzeppelin/contracts/utils/Counters.sol":{"ast":{"absolutePath":"vendor/openzeppelin/contracts/utils/Counters.sol","exportedSymbols":{"Counters":[3434]},"id":3435,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3362,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"87:23:17"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":3363,"nodeType":"StructuredDocumentation","src":"112:311:17","text":" @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"},"fullyImplemented":true,"id":3434,"linearizedBaseContracts":[3434],"name":"Counters","nameLocation":"432:8:17","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Counters.Counter","id":3366,"members":[{"constant":false,"id":3365,"mutability":"mutable","name":"_value","nameLocation":"794:6:17","nodeType":"VariableDeclaration","scope":3366,"src":"786:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3364,"name":"uint256","nodeType":"ElementaryTypeName","src":"786:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Counter","nameLocation":"454:7:17","nodeType":"StructDefinition","scope":3434,"src":"447:374:17","visibility":"public"},{"body":{"id":3377,"nodeType":"Block","src":"901:38:17","statements":[{"expression":{"expression":{"id":3374,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"918:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3366_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":3375,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3365,"src":"918:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3373,"id":3376,"nodeType":"Return","src":"911:21:17"}]},"id":3378,"implemented":true,"kind":"function","modifiers":[],"name":"current","nameLocation":"836:7:17","nodeType":"FunctionDefinition","parameters":{"id":3370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3369,"mutability":"mutable","name":"counter","nameLocation":"860:7:17","nodeType":"VariableDeclaration","scope":3378,"src":"844:23:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3366_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":3368,"nodeType":"UserDefinedTypeName","pathNode":{"id":3367,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":3366,"src":"844:7:17"},"referencedDeclaration":3366,"src":"844:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3366_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"843:25:17"},"returnParameters":{"id":3373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3372,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3378,"src":"892:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3371,"name":"uint256","nodeType":"ElementaryTypeName","src":"892:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"891:9:17"},"scope":3434,"src":"827:112:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3391,"nodeType":"Block","src":"998:70:17","statements":[{"id":3390,"nodeType":"UncheckedBlock","src":"1008:54:17","statements":[{"expression":{"id":3388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3384,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3381,"src":"1032:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3366_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":3386,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3365,"src":"1032:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1050:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1032:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3389,"nodeType":"ExpressionStatement","src":"1032:19:17"}]}]},"id":3392,"implemented":true,"kind":"function","modifiers":[],"name":"increment","nameLocation":"954:9:17","nodeType":"FunctionDefinition","parameters":{"id":3382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3381,"mutability":"mutable","name":"counter","nameLocation":"980:7:17","nodeType":"VariableDeclaration","scope":3392,"src":"964:23:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3366_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":3380,"nodeType":"UserDefinedTypeName","pathNode":{"id":3379,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":3366,"src":"964:7:17"},"referencedDeclaration":3366,"src":"964:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3366_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"963:25:17"},"returnParameters":{"id":3383,"nodeType":"ParameterList","parameters":[],"src":"998:0:17"},"scope":3434,"src":"945:123:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3419,"nodeType":"Block","src":"1127:176:17","statements":[{"assignments":[3399],"declarations":[{"constant":false,"id":3399,"mutability":"mutable","name":"value","nameLocation":"1145:5:17","nodeType":"VariableDeclaration","scope":3419,"src":"1137:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3398,"name":"uint256","nodeType":"ElementaryTypeName","src":"1137:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3402,"initialValue":{"expression":{"id":3400,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3395,"src":"1153:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3366_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":3401,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3365,"src":"1153:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1137:30:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3404,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"1185:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1193:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1185:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f756e7465723a2064656372656d656e74206f766572666c6f77","id":3407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1196:29:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""},"value":"Counter: decrement overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""}],"id":3403,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1177:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1177:49:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3409,"nodeType":"ExpressionStatement","src":"1177:49:17"},{"id":3418,"nodeType":"UncheckedBlock","src":"1236:61:17","statements":[{"expression":{"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3410,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3395,"src":"1260:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3366_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":3412,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3365,"src":"1260:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3413,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"1277:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1285:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1277:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1260:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3417,"nodeType":"ExpressionStatement","src":"1260:26:17"}]}]},"id":3420,"implemented":true,"kind":"function","modifiers":[],"name":"decrement","nameLocation":"1083:9:17","nodeType":"FunctionDefinition","parameters":{"id":3396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3395,"mutability":"mutable","name":"counter","nameLocation":"1109:7:17","nodeType":"VariableDeclaration","scope":3420,"src":"1093:23:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3366_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":3394,"nodeType":"UserDefinedTypeName","pathNode":{"id":3393,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":3366,"src":"1093:7:17"},"referencedDeclaration":3366,"src":"1093:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3366_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1092:25:17"},"returnParameters":{"id":3397,"nodeType":"ParameterList","parameters":[],"src":"1127:0:17"},"scope":3434,"src":"1074:229:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3432,"nodeType":"Block","src":"1358:35:17","statements":[{"expression":{"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3426,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"1368:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3366_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":3428,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3365,"src":"1368:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1385:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1368:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3431,"nodeType":"ExpressionStatement","src":"1368:18:17"}]},"id":3433,"implemented":true,"kind":"function","modifiers":[],"name":"reset","nameLocation":"1318:5:17","nodeType":"FunctionDefinition","parameters":{"id":3424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3423,"mutability":"mutable","name":"counter","nameLocation":"1340:7:17","nodeType":"VariableDeclaration","scope":3433,"src":"1324:23:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3366_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":3422,"nodeType":"UserDefinedTypeName","pathNode":{"id":3421,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":3366,"src":"1324:7:17"},"referencedDeclaration":3366,"src":"1324:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3366_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1323:25:17"},"returnParameters":{"id":3425,"nodeType":"ParameterList","parameters":[],"src":"1358:0:17"},"scope":3434,"src":"1309:84:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":3435,"src":"424:971:17","usedErrors":[]}],"src":"87:1309:17"},"id":17},"vendor/openzeppelin/contracts/utils/structs/EnumerableMap.sol":{"ast":{"absolutePath":"vendor/openzeppelin/contracts/utils/structs/EnumerableMap.sol","exportedSymbols":{"EnumerableMap":[3914],"EnumerableSet":[4513]},"id":3915,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3436,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:18"},{"absolutePath":"vendor/openzeppelin/contracts/utils/structs/EnumerableSet.sol","file":"./EnumerableSet.sol","id":3437,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3915,"sourceUnit":4514,"src":"125:29:18","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":3438,"nodeType":"StructuredDocumentation","src":"156:705:18","text":" @dev Library for managing an enumerable variant of Solidity's\n https://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`]\n type.\n Maps have the following properties:\n - Entries are added, removed, and checked for existence in constant time\n (O(1)).\n - Entries are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableMap for EnumerableMap.UintToAddressMap;\n     // Declare a set state variable\n     EnumerableMap.UintToAddressMap private myMap;\n }\n ```\n As of v3.0.0, only maps of type `uint256 -> address` (`UintToAddressMap`) are\n supported."},"fullyImplemented":true,"id":3914,"linearizedBaseContracts":[3914],"name":"EnumerableMap","nameLocation":"870:13:18","nodeType":"ContractDefinition","nodes":[{"id":3442,"libraryName":{"id":3439,"name":"EnumerableSet","nodeType":"IdentifierPath","referencedDeclaration":4513,"src":"896:13:18"},"nodeType":"UsingForDirective","src":"890:49:18","typeName":{"id":3441,"nodeType":"UserDefinedTypeName","pathNode":{"id":3440,"name":"EnumerableSet.Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":4119,"src":"914:24:18"},"referencedDeclaration":4119,"src":"914:24:18","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4119_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}}},{"canonicalName":"EnumerableMap.Map","id":3450,"members":[{"constant":false,"id":3445,"mutability":"mutable","name":"_keys","nameLocation":"1476:5:18","nodeType":"VariableDeclaration","scope":3450,"src":"1451:30:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4119_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":3444,"nodeType":"UserDefinedTypeName","pathNode":{"id":3443,"name":"EnumerableSet.Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":4119,"src":"1451:24:18"},"referencedDeclaration":4119,"src":"1451:24:18","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4119_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":3449,"mutability":"mutable","name":"_values","nameLocation":"1519:7:18","nodeType":"VariableDeclaration","scope":3450,"src":"1491:35:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes32_$","typeString":"mapping(bytes32 => bytes32)"},"typeName":{"id":3448,"keyType":{"id":3446,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1499:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1491:27:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes32_$","typeString":"mapping(bytes32 => bytes32)"},"valueType":{"id":3447,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1510:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},"visibility":"internal"}],"name":"Map","nameLocation":"1410:3:18","nodeType":"StructDefinition","scope":3914,"src":"1403:130:18","visibility":"public"},{"body":{"id":3477,"nodeType":"Block","src":"1872:76:18","statements":[{"expression":{"id":3469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":3463,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3454,"src":"1882:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$3450_storage_ptr","typeString":"struct EnumerableMap.Map storage pointer"}},"id":3466,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3449,"src":"1882:11:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes32_$","typeString":"mapping(bytes32 => bytes32)"}},"id":3467,"indexExpression":{"id":3465,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"1894:3:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1882:16:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3468,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3458,"src":"1901:5:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1882:24:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3470,"nodeType":"ExpressionStatement","src":"1882:24:18"},{"expression":{"arguments":[{"id":3474,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"1937:3:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":3471,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3454,"src":"1923:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$3450_storage_ptr","typeString":"struct EnumerableMap.Map storage pointer"}},"id":3472,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_keys","nodeType":"MemberAccess","referencedDeclaration":3445,"src":"1923:9:18","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4119_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":3473,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":4137,"src":"1923:13:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32Set_$4119_storage_ptr_$_t_bytes32_$returns$_t_bool_$bound_to$_t_struct$_Bytes32Set_$4119_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) returns (bool)"}},"id":3475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1923:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3462,"id":3476,"nodeType":"Return","src":"1916:25:18"}]},"documentation":{"id":3451,"nodeType":"StructuredDocumentation","src":"1539:216:18","text":" @dev Adds a key-value pair to a map, or updates the value for an existing\n key. O(1).\n Returns true if the key was added to the map, that is if it was not\n already present."},"id":3478,"implemented":true,"kind":"function","modifiers":[],"name":"_set","nameLocation":"1769:4:18","nodeType":"FunctionDefinition","parameters":{"id":3459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3454,"mutability":"mutable","name":"map","nameLocation":"1795:3:18","nodeType":"VariableDeclaration","scope":3478,"src":"1783:15:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$3450_storage_ptr","typeString":"struct EnumerableMap.Map"},"typeName":{"id":3453,"nodeType":"UserDefinedTypeName","pathNode":{"id":3452,"name":"Map","nodeType":"IdentifierPath","referencedDeclaration":3450,"src":"1783:3:18"},"referencedDeclaration":3450,"src":"1783:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$3450_storage_ptr","typeString":"struct EnumerableMap.Map"}},"visibility":"internal"},{"constant":false,"id":3456,"mutability":"mutable","name":"key","nameLocation":"1816:3:18","nodeType":"VariableDeclaration","scope":3478,"src":"1808:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3455,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1808:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3458,"mutability":"mutable","name":"value","nameLocation":"1837:5:18","nodeType":"VariableDeclaration","scope":3478,"src":"1829:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3457,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1829:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1773:75:18"},"returnParameters":{"id":3462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3461,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3478,"src":"1866:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3460,"name":"bool","nodeType":"ElementaryTypeName","src":"1866:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1865:6:18"},"scope":3914,"src":"1760:188:18","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3501,"nodeType":"Block","src":"2186:78:18","statements":[{"expression":{"id":3493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"2196:23:18","subExpression":{"baseExpression":{"expression":{"id":3489,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3482,"src":"2203:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$3450_storage_ptr","typeString":"struct EnumerableMap.Map storage pointer"}},"id":3490,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3449,"src":"2203:11:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes32_$","typeString":"mapping(bytes32 => bytes32)"}},"id":3492,"indexExpression":{"id":3491,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3484,"src":"2215:3:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2203:16:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3494,"nodeType":"ExpressionStatement","src":"2196:23:18"},{"expression":{"arguments":[{"id":3498,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3484,"src":"2253:3:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":3495,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3482,"src":"2236:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$3450_storage_ptr","typeString":"struct EnumerableMap.Map storage pointer"}},"id":3496,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_keys","nodeType":"MemberAccess","referencedDeclaration":3445,"src":"2236:9:18","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4119_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":3497,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":4155,"src":"2236:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32Set_$4119_storage_ptr_$_t_bytes32_$returns$_t_bool_$bound_to$_t_struct$_Bytes32Set_$4119_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) returns (bool)"}},"id":3499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2236:21:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3488,"id":3500,"nodeType":"Return","src":"2229:28:18"}]},"documentation":{"id":3479,"nodeType":"StructuredDocumentation","src":"1954:157:18","text":" @dev Removes a key-value pair from a map. O(1).\n Returns true if the key was removed from the map, that is if it was present."},"id":3502,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nameLocation":"2125:7:18","nodeType":"FunctionDefinition","parameters":{"id":3485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3482,"mutability":"mutable","name":"map","nameLocation":"2145:3:18","nodeType":"VariableDeclaration","scope":3502,"src":"2133:15:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$3450_storage_ptr","typeString":"struct EnumerableMap.Map"},"typeName":{"id":3481,"nodeType":"UserDefinedTypeName","pathNode":{"id":3480,"name":"Map","nodeType":"IdentifierPath","referencedDeclaration":3450,"src":"2133:3:18"},"referencedDeclaration":3450,"src":"2133:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$3450_storage_ptr","typeString":"struct EnumerableMap.Map"}},"visibility":"internal"},{"constant":false,"id":3484,"mutability":"mutable","name":"key","nameLocation":"2158:3:18","nodeType":"VariableDeclaration","scope":3502,"src":"2150:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3483,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2150:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2132:30:18"},"returnParameters":{"id":3488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3487,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3502,"src":"2180:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3486,"name":"bool","nodeType":"ElementaryTypeName","src":"2180:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2179:6:18"},"scope":3914,"src":"2116:148:18","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3519,"nodeType":"Block","src":"2420:47:18","statements":[{"expression":{"arguments":[{"id":3516,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"2456:3:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":3513,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3506,"src":"2437:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$3450_storage_ptr","typeString":"struct EnumerableMap.Map storage pointer"}},"id":3514,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_keys","nodeType":"MemberAccess","referencedDeclaration":3445,"src":"2437:9:18","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4119_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":3515,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":4173,"src":"2437:18:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$4119_storage_ptr_$_t_bytes32_$returns$_t_bool_$bound_to$_t_struct$_Bytes32Set_$4119_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) view returns (bool)"}},"id":3517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2437:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3512,"id":3518,"nodeType":"Return","src":"2430:30:18"}]},"documentation":{"id":3503,"nodeType":"StructuredDocumentation","src":"2270:68:18","text":" @dev Returns true if the key is in the map. O(1)."},"id":3520,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nameLocation":"2352:9:18","nodeType":"FunctionDefinition","parameters":{"id":3509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3506,"mutability":"mutable","name":"map","nameLocation":"2374:3:18","nodeType":"VariableDeclaration","scope":3520,"src":"2362:15:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$3450_storage_ptr","typeString":"struct EnumerableMap.Map"},"typeName":{"id":3505,"nodeType":"UserDefinedTypeName","pathNode":{"id":3504,"name":"Map","nodeType":"IdentifierPath","referencedDeclaration":3450,"src":"2362:3:18"},"referencedDeclaration":3450,"src":"2362:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$3450_storage_ptr","typeString":"struct EnumerableMap.Map"}},"visibility":"internal"},{"constant":false,"id":3508,"mutability":"mutable","name":"key","nameLocation":"2387:3:18","nodeType":"VariableDeclaration","scope":3520,"src":"2379:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3507,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2379:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2361:30:18"},"returnParameters":{"id":3512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3511,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3520,"src":"2414:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3510,"name":"bool","nodeType":"ElementaryTypeName","src":"2414:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2413:6:18"},"scope":3914,"src":"2343:124:18","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3534,"nodeType":"Block","src":"2622:42:18","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":3529,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3524,"src":"2639:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$3450_storage_ptr","typeString":"struct EnumerableMap.Map storage pointer"}},"id":3530,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_keys","nodeType":"MemberAccess","referencedDeclaration":3445,"src":"2639:9:18","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4119_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":3531,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":4188,"src":"2639:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$4119_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Bytes32Set_$4119_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer) view returns (uint256)"}},"id":3532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2639:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3528,"id":3533,"nodeType":"Return","src":"2632:25:18"}]},"documentation":{"id":3521,"nodeType":"StructuredDocumentation","src":"2473:79:18","text":" @dev Returns the number of key-value pairs in the map. O(1)."},"id":3535,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nameLocation":"2566:7:18","nodeType":"FunctionDefinition","parameters":{"id":3525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3524,"mutability":"mutable","name":"map","nameLocation":"2586:3:18","nodeType":"VariableDeclaration","scope":3535,"src":"2574:15:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$3450_storage_ptr","typeString":"struct EnumerableMap.Map"},"typeName":{"id":3523,"nodeType":"UserDefinedTypeName","pathNode":{"id":3522,"name":"Map","nodeType":"IdentifierPath","referencedDeclaration":3450,"src":"2574:3:18"},"referencedDeclaration":3450,"src":"2574:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$3450_storage_ptr","typeString":"struct EnumerableMap.Map"}},"visibility":"internal"}],"src":"2573:17:18"},"returnParameters":{"id":3528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3527,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3535,"src":"2613:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3526,"name":"uint256","nodeType":"ElementaryTypeName","src":"2613:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2612:9:18"},"scope":3914,"src":"2557:107:18","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3563,"nodeType":"Block","src":"3102:90:18","statements":[{"assignments":[3549],"declarations":[{"constant":false,"id":3549,"mutability":"mutable","name":"key","nameLocation":"3120:3:18","nodeType":"VariableDeclaration","scope":3563,"src":"3112:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3548,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3112:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3555,"initialValue":{"arguments":[{"id":3553,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3541,"src":"3139:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":3550,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"3126:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$3450_storage_ptr","typeString":"struct EnumerableMap.Map storage pointer"}},"id":3551,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_keys","nodeType":"MemberAccess","referencedDeclaration":3445,"src":"3126:9:18","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4119_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":3552,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"at","nodeType":"MemberAccess","referencedDeclaration":4206,"src":"3126:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$4119_storage_ptr_$_t_uint256_$returns$_t_bytes32_$bound_to$_t_struct$_Bytes32Set_$4119_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,uint256) view returns (bytes32)"}},"id":3554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3126:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3112:33:18"},{"expression":{"components":[{"id":3556,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3549,"src":"3163:3:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"expression":{"id":3557,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"3168:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$3450_storage_ptr","typeString":"struct EnumerableMap.Map storage pointer"}},"id":3558,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3449,"src":"3168:11:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes32_$","typeString":"mapping(bytes32 => bytes32)"}},"id":3560,"indexExpression":{"id":3559,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3549,"src":"3180:3:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3168:16:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3561,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3162:23:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes32_$_t_bytes32_$","typeString":"tuple(bytes32,bytes32)"}},"functionReturnParameters":3547,"id":3562,"nodeType":"Return","src":"3155:30:18"}]},"documentation":{"id":3536,"nodeType":"StructuredDocumentation","src":"2670:342:18","text":" @dev Returns the key-value pair stored at position `index` in the map. O(1).\n Note that there are no guarantees on the ordering of entries inside the\n array, and it may change when more entries are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":3564,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nameLocation":"3026:3:18","nodeType":"FunctionDefinition","parameters":{"id":3542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3539,"mutability":"mutable","name":"map","nameLocation":"3042:3:18","nodeType":"VariableDeclaration","scope":3564,"src":"3030:15:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$3450_storage_ptr","typeString":"struct EnumerableMap.Map"},"typeName":{"id":3538,"nodeType":"UserDefinedTypeName","pathNode":{"id":3537,"name":"Map","nodeType":"IdentifierPath","referencedDeclaration":3450,"src":"3030:3:18"},"referencedDeclaration":3450,"src":"3030:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$3450_storage_ptr","typeString":"struct EnumerableMap.Map"}},"visibility":"internal"},{"constant":false,"id":3541,"mutability":"mutable","name":"index","nameLocation":"3055:5:18","nodeType":"VariableDeclaration","scope":3564,"src":"3047:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3540,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3029:32:18"},"returnParameters":{"id":3547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3544,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3564,"src":"3084:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3543,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3084:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3546,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3564,"src":"3093:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3545,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3093:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3083:18:18"},"scope":3914,"src":"3017:175:18","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3607,"nodeType":"Block","src":"3418:199:18","statements":[{"assignments":[3578],"declarations":[{"constant":false,"id":3578,"mutability":"mutable","name":"value","nameLocation":"3436:5:18","nodeType":"VariableDeclaration","scope":3607,"src":"3428:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3577,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3428:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3583,"initialValue":{"baseExpression":{"expression":{"id":3579,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"3444:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$3450_storage_ptr","typeString":"struct EnumerableMap.Map storage pointer"}},"id":3580,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3449,"src":"3444:11:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes32_$","typeString":"mapping(bytes32 => bytes32)"}},"id":3582,"indexExpression":{"id":3581,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3570,"src":"3456:3:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3444:16:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3428:32:18"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3584,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3578,"src":"3474:5:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3491:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3483:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3585,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3483:7:18","typeDescriptions":{}}},"id":3588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3483:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3474:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3605,"nodeType":"Block","src":"3566:45:18","statements":[{"expression":{"components":[{"hexValue":"74727565","id":3601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3588:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3578,"src":"3594:5:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3603,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3587:13:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes32_$","typeString":"tuple(bool,bytes32)"}},"functionReturnParameters":3576,"id":3604,"nodeType":"Return","src":"3580:20:18"}]},"id":3606,"nodeType":"IfStatement","src":"3470:141:18","trueBody":{"id":3600,"nodeType":"Block","src":"3495:65:18","statements":[{"expression":{"components":[{"arguments":[{"id":3591,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"3527:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$3450_storage_ptr","typeString":"struct EnumerableMap.Map storage pointer"}},{"id":3592,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3570,"src":"3532:3:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Map_$3450_storage_ptr","typeString":"struct EnumerableMap.Map storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3590,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"3517:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Map_$3450_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMap.Map storage pointer,bytes32) view returns (bool)"}},"id":3593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3517:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"hexValue":"30","id":3596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3546:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3538:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3594,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3538:7:18","typeDescriptions":{}}},"id":3597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3538:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3598,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3516:33:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes32_$","typeString":"tuple(bool,bytes32)"}},"functionReturnParameters":3576,"id":3599,"nodeType":"Return","src":"3509:40:18"}]}}]},"documentation":{"id":3565,"nodeType":"StructuredDocumentation","src":"3198:131:18","text":" @dev Tries to returns the value associated with `key`.  O(1).\n Does not revert if `key` is not in the map."},"id":3608,"implemented":true,"kind":"function","modifiers":[],"name":"_tryGet","nameLocation":"3343:7:18","nodeType":"FunctionDefinition","parameters":{"id":3571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3568,"mutability":"mutable","name":"map","nameLocation":"3363:3:18","nodeType":"VariableDeclaration","scope":3608,"src":"3351:15:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$3450_storage_ptr","typeString":"struct EnumerableMap.Map"},"typeName":{"id":3567,"nodeType":"UserDefinedTypeName","pathNode":{"id":3566,"name":"Map","nodeType":"IdentifierPath","referencedDeclaration":3450,"src":"3351:3:18"},"referencedDeclaration":3450,"src":"3351:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$3450_storage_ptr","typeString":"struct EnumerableMap.Map"}},"visibility":"internal"},{"constant":false,"id":3570,"mutability":"mutable","name":"key","nameLocation":"3376:3:18","nodeType":"VariableDeclaration","scope":3608,"src":"3368:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3569,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3368:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3350:30:18"},"returnParameters":{"id":3576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3573,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3608,"src":"3403:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3572,"name":"bool","nodeType":"ElementaryTypeName","src":"3403:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3575,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3608,"src":"3409:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3574,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3409:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3402:15:18"},"scope":3914,"src":"3334:283:18","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3640,"nodeType":"Block","src":"3844:157:18","statements":[{"assignments":[3620],"declarations":[{"constant":false,"id":3620,"mutability":"mutable","name":"value","nameLocation":"3862:5:18","nodeType":"VariableDeclaration","scope":3640,"src":"3854:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3619,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3854:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3625,"initialValue":{"baseExpression":{"expression":{"id":3621,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3612,"src":"3870:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$3450_storage_ptr","typeString":"struct EnumerableMap.Map storage pointer"}},"id":3622,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3449,"src":"3870:11:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes32_$","typeString":"mapping(bytes32 => bytes32)"}},"id":3624,"indexExpression":{"id":3623,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3614,"src":"3882:3:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3870:16:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3854:32:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"3904:5:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3913:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3904:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":3631,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3612,"src":"3928:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$3450_storage_ptr","typeString":"struct EnumerableMap.Map storage pointer"}},{"id":3632,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3614,"src":"3933:3:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Map_$3450_storage_ptr","typeString":"struct EnumerableMap.Map storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3630,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"3918:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Map_$3450_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMap.Map storage pointer,bytes32) view returns (bool)"}},"id":3633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3918:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3904:33:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"456e756d657261626c654d61703a206e6f6e6578697374656e74206b6579","id":3635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3939:32:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3551e30d3095fd81287b88f7139bb09818e34280e85ee821994ebaebbed7072","typeString":"literal_string \"EnumerableMap: nonexistent key\""},"value":"EnumerableMap: nonexistent key"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d3551e30d3095fd81287b88f7139bb09818e34280e85ee821994ebaebbed7072","typeString":"literal_string \"EnumerableMap: nonexistent key\""}],"id":3626,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3896:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3896:76:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3637,"nodeType":"ExpressionStatement","src":"3896:76:18"},{"expression":{"id":3638,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"3989:5:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3618,"id":3639,"nodeType":"Return","src":"3982:12:18"}]},"documentation":{"id":3609,"nodeType":"StructuredDocumentation","src":"3623:141:18","text":" @dev Returns the value associated with `key`.  O(1).\n Requirements:\n - `key` must be in the map."},"id":3641,"implemented":true,"kind":"function","modifiers":[],"name":"_get","nameLocation":"3778:4:18","nodeType":"FunctionDefinition","parameters":{"id":3615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3612,"mutability":"mutable","name":"map","nameLocation":"3795:3:18","nodeType":"VariableDeclaration","scope":3641,"src":"3783:15:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$3450_storage_ptr","typeString":"struct EnumerableMap.Map"},"typeName":{"id":3611,"nodeType":"UserDefinedTypeName","pathNode":{"id":3610,"name":"Map","nodeType":"IdentifierPath","referencedDeclaration":3450,"src":"3783:3:18"},"referencedDeclaration":3450,"src":"3783:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$3450_storage_ptr","typeString":"struct EnumerableMap.Map"}},"visibility":"internal"},{"constant":false,"id":3614,"mutability":"mutable","name":"key","nameLocation":"3808:3:18","nodeType":"VariableDeclaration","scope":3641,"src":"3800:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3613,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3800:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3782:30:18"},"returnParameters":{"id":3618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3617,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3641,"src":"3835:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3616,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3835:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3834:9:18"},"scope":3914,"src":"3769:232:18","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3675,"nodeType":"Block","src":"4416:137:18","statements":[{"assignments":[3655],"declarations":[{"constant":false,"id":3655,"mutability":"mutable","name":"value","nameLocation":"4434:5:18","nodeType":"VariableDeclaration","scope":3675,"src":"4426:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3654,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4426:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3660,"initialValue":{"baseExpression":{"expression":{"id":3656,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3645,"src":"4442:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$3450_storage_ptr","typeString":"struct EnumerableMap.Map storage pointer"}},"id":3657,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3449,"src":"4442:11:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes32_$","typeString":"mapping(bytes32 => bytes32)"}},"id":3659,"indexExpression":{"id":3658,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3647,"src":"4454:3:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4442:16:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4426:32:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3662,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"4476:5:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4485:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4476:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":3666,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3645,"src":"4500:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$3450_storage_ptr","typeString":"struct EnumerableMap.Map storage pointer"}},{"id":3667,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3647,"src":"4505:3:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Map_$3450_storage_ptr","typeString":"struct EnumerableMap.Map storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3665,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"4490:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Map_$3450_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMap.Map storage pointer,bytes32) view returns (bool)"}},"id":3668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4490:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4476:33:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3670,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3649,"src":"4511:12:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3661,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4468:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4468:56:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3672,"nodeType":"ExpressionStatement","src":"4468:56:18"},{"expression":{"id":3673,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"4541:5:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3653,"id":3674,"nodeType":"Return","src":"4534:12:18"}]},"documentation":{"id":3642,"nodeType":"StructuredDocumentation","src":"4007:271:18","text":" @dev Same as {_get}, with a custom error message when `key` is not in the map.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {_tryGet}."},"id":3676,"implemented":true,"kind":"function","modifiers":[],"name":"_get","nameLocation":"4292:4:18","nodeType":"FunctionDefinition","parameters":{"id":3650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3645,"mutability":"mutable","name":"map","nameLocation":"4318:3:18","nodeType":"VariableDeclaration","scope":3676,"src":"4306:15:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$3450_storage_ptr","typeString":"struct EnumerableMap.Map"},"typeName":{"id":3644,"nodeType":"UserDefinedTypeName","pathNode":{"id":3643,"name":"Map","nodeType":"IdentifierPath","referencedDeclaration":3450,"src":"4306:3:18"},"referencedDeclaration":3450,"src":"4306:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$3450_storage_ptr","typeString":"struct EnumerableMap.Map"}},"visibility":"internal"},{"constant":false,"id":3647,"mutability":"mutable","name":"key","nameLocation":"4339:3:18","nodeType":"VariableDeclaration","scope":3676,"src":"4331:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3646,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4331:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3649,"mutability":"mutable","name":"errorMessage","nameLocation":"4366:12:18","nodeType":"VariableDeclaration","scope":3676,"src":"4352:26:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3648,"name":"string","nodeType":"ElementaryTypeName","src":"4352:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4296:88:18"},"returnParameters":{"id":3653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3652,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3676,"src":"4407:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3651,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4407:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4406:9:18"},"scope":3914,"src":"4283:270:18","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableMap.UintToAddressMap","id":3680,"members":[{"constant":false,"id":3679,"mutability":"mutable","name":"_inner","nameLocation":"4622:6:18","nodeType":"VariableDeclaration","scope":3680,"src":"4618:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$3450_storage_ptr","typeString":"struct EnumerableMap.Map"},"typeName":{"id":3678,"nodeType":"UserDefinedTypeName","pathNode":{"id":3677,"name":"Map","nodeType":"IdentifierPath","referencedDeclaration":3450,"src":"4618:3:18"},"referencedDeclaration":3450,"src":"4618:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$3450_storage_ptr","typeString":"struct EnumerableMap.Map"}},"visibility":"internal"}],"name":"UintToAddressMap","nameLocation":"4591:16:18","nodeType":"StructDefinition","scope":3914,"src":"4584:51:18","visibility":"public"},{"body":{"id":3712,"nodeType":"Block","src":"4987:88:18","statements":[{"expression":{"arguments":[{"expression":{"id":3694,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"5009:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$3680_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap storage pointer"}},"id":3695,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3679,"src":"5009:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$3450_storage","typeString":"struct EnumerableMap.Map storage ref"}},{"arguments":[{"id":3698,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3686,"src":"5029:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5021:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3696,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5021:7:18","typeDescriptions":{}}},"id":3699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5021:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"arguments":[{"id":3706,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3688,"src":"5059:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3705,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5051:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3704,"name":"uint160","nodeType":"ElementaryTypeName","src":"5051:7:18","typeDescriptions":{}}},"id":3707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5051:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5043:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3702,"name":"uint256","nodeType":"ElementaryTypeName","src":"5043:7:18","typeDescriptions":{}}},"id":3708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5043:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5035:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3700,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5035:7:18","typeDescriptions":{}}},"id":3709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5035:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Map_$3450_storage","typeString":"struct EnumerableMap.Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3693,"name":"_set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"5004:4:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Map_$3450_storage_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMap.Map storage pointer,bytes32,bytes32) returns (bool)"}},"id":3710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5004:64:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3692,"id":3711,"nodeType":"Return","src":"4997:71:18"}]},"documentation":{"id":3681,"nodeType":"StructuredDocumentation","src":"4641:216:18","text":" @dev Adds a key-value pair to a map, or updates the value for an existing\n key. O(1).\n Returns true if the key was added to the map, that is if it was not\n already present."},"id":3713,"implemented":true,"kind":"function","modifiers":[],"name":"set","nameLocation":"4871:3:18","nodeType":"FunctionDefinition","parameters":{"id":3689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3684,"mutability":"mutable","name":"map","nameLocation":"4909:3:18","nodeType":"VariableDeclaration","scope":3713,"src":"4884:28:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$3680_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"},"typeName":{"id":3683,"nodeType":"UserDefinedTypeName","pathNode":{"id":3682,"name":"UintToAddressMap","nodeType":"IdentifierPath","referencedDeclaration":3680,"src":"4884:16:18"},"referencedDeclaration":3680,"src":"4884:16:18","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$3680_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"}},"visibility":"internal"},{"constant":false,"id":3686,"mutability":"mutable","name":"key","nameLocation":"4930:3:18","nodeType":"VariableDeclaration","scope":3713,"src":"4922:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3685,"name":"uint256","nodeType":"ElementaryTypeName","src":"4922:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3688,"mutability":"mutable","name":"value","nameLocation":"4951:5:18","nodeType":"VariableDeclaration","scope":3713,"src":"4943:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3687,"name":"address","nodeType":"ElementaryTypeName","src":"4943:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4874:88:18"},"returnParameters":{"id":3692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3691,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3713,"src":"4981:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3690,"name":"bool","nodeType":"ElementaryTypeName","src":"4981:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4980:6:18"},"scope":3914,"src":"4862:213:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3733,"nodeType":"Block","src":"5317:57:18","statements":[{"expression":{"arguments":[{"expression":{"id":3725,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"5342:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$3680_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap storage pointer"}},"id":3726,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3679,"src":"5342:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$3450_storage","typeString":"struct EnumerableMap.Map storage ref"}},{"arguments":[{"id":3729,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3719,"src":"5362:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5354:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3727,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5354:7:18","typeDescriptions":{}}},"id":3730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5354:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Map_$3450_storage","typeString":"struct EnumerableMap.Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3724,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3502,"src":"5334:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Map_$3450_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMap.Map storage pointer,bytes32) returns (bool)"}},"id":3731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5334:33:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3723,"id":3732,"nodeType":"Return","src":"5327:40:18"}]},"documentation":{"id":3714,"nodeType":"StructuredDocumentation","src":"5081:148:18","text":" @dev Removes a value from a set. O(1).\n Returns true if the key was removed from the map, that is if it was present."},"id":3734,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"5243:6:18","nodeType":"FunctionDefinition","parameters":{"id":3720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3717,"mutability":"mutable","name":"map","nameLocation":"5275:3:18","nodeType":"VariableDeclaration","scope":3734,"src":"5250:28:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$3680_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"},"typeName":{"id":3716,"nodeType":"UserDefinedTypeName","pathNode":{"id":3715,"name":"UintToAddressMap","nodeType":"IdentifierPath","referencedDeclaration":3680,"src":"5250:16:18"},"referencedDeclaration":3680,"src":"5250:16:18","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$3680_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"}},"visibility":"internal"},{"constant":false,"id":3719,"mutability":"mutable","name":"key","nameLocation":"5288:3:18","nodeType":"VariableDeclaration","scope":3734,"src":"5280:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3718,"name":"uint256","nodeType":"ElementaryTypeName","src":"5280:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5249:43:18"},"returnParameters":{"id":3723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3722,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3734,"src":"5311:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3721,"name":"bool","nodeType":"ElementaryTypeName","src":"5311:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5310:6:18"},"scope":3914,"src":"5234:140:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3754,"nodeType":"Block","src":"5543:59:18","statements":[{"expression":{"arguments":[{"expression":{"id":3746,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3738,"src":"5570:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$3680_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap storage pointer"}},"id":3747,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3679,"src":"5570:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$3450_storage","typeString":"struct EnumerableMap.Map storage ref"}},{"arguments":[{"id":3750,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3740,"src":"5590:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3749,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5582:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3748,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5582:7:18","typeDescriptions":{}}},"id":3751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5582:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Map_$3450_storage","typeString":"struct EnumerableMap.Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3745,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"5560:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Map_$3450_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMap.Map storage pointer,bytes32) view returns (bool)"}},"id":3752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5560:35:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3744,"id":3753,"nodeType":"Return","src":"5553:42:18"}]},"documentation":{"id":3735,"nodeType":"StructuredDocumentation","src":"5380:68:18","text":" @dev Returns true if the key is in the map. O(1)."},"id":3755,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"5462:8:18","nodeType":"FunctionDefinition","parameters":{"id":3741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3738,"mutability":"mutable","name":"map","nameLocation":"5496:3:18","nodeType":"VariableDeclaration","scope":3755,"src":"5471:28:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$3680_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"},"typeName":{"id":3737,"nodeType":"UserDefinedTypeName","pathNode":{"id":3736,"name":"UintToAddressMap","nodeType":"IdentifierPath","referencedDeclaration":3680,"src":"5471:16:18"},"referencedDeclaration":3680,"src":"5471:16:18","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$3680_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"}},"visibility":"internal"},{"constant":false,"id":3740,"mutability":"mutable","name":"key","nameLocation":"5509:3:18","nodeType":"VariableDeclaration","scope":3755,"src":"5501:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3739,"name":"uint256","nodeType":"ElementaryTypeName","src":"5501:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5470:43:18"},"returnParameters":{"id":3744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3743,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3755,"src":"5537:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3742,"name":"bool","nodeType":"ElementaryTypeName","src":"5537:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5536:6:18"},"scope":3914,"src":"5453:149:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3769,"nodeType":"Block","src":"5763:43:18","statements":[{"expression":{"arguments":[{"expression":{"id":3765,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3759,"src":"5788:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$3680_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap storage pointer"}},"id":3766,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3679,"src":"5788:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$3450_storage","typeString":"struct EnumerableMap.Map storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Map_$3450_storage","typeString":"struct EnumerableMap.Map storage ref"}],"id":3764,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3535,"src":"5780:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Map_$3450_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableMap.Map storage pointer) view returns (uint256)"}},"id":3767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5780:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3763,"id":3768,"nodeType":"Return","src":"5773:26:18"}]},"documentation":{"id":3756,"nodeType":"StructuredDocumentation","src":"5608:72:18","text":" @dev Returns the number of elements in the map. O(1)."},"id":3770,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"5694:6:18","nodeType":"FunctionDefinition","parameters":{"id":3760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3759,"mutability":"mutable","name":"map","nameLocation":"5726:3:18","nodeType":"VariableDeclaration","scope":3770,"src":"5701:28:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$3680_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"},"typeName":{"id":3758,"nodeType":"UserDefinedTypeName","pathNode":{"id":3757,"name":"UintToAddressMap","nodeType":"IdentifierPath","referencedDeclaration":3680,"src":"5701:16:18"},"referencedDeclaration":3680,"src":"5701:16:18","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$3680_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"}},"visibility":"internal"}],"src":"5700:30:18"},"returnParameters":{"id":3763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3762,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3770,"src":"5754:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3761,"name":"uint256","nodeType":"ElementaryTypeName","src":"5754:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5753:9:18"},"scope":3914,"src":"5685:121:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3809,"nodeType":"Block","src":"6241:135:18","statements":[{"assignments":[3784,3786],"declarations":[{"constant":false,"id":3784,"mutability":"mutable","name":"key","nameLocation":"6260:3:18","nodeType":"VariableDeclaration","scope":3809,"src":"6252:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3783,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6252:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3786,"mutability":"mutable","name":"value","nameLocation":"6273:5:18","nodeType":"VariableDeclaration","scope":3809,"src":"6265:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3785,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6265:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3792,"initialValue":{"arguments":[{"expression":{"id":3788,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"6286:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$3680_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap storage pointer"}},"id":3789,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3679,"src":"6286:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$3450_storage","typeString":"struct EnumerableMap.Map storage ref"}},{"id":3790,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3776,"src":"6298:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Map_$3450_storage","typeString":"struct EnumerableMap.Map storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3787,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3564,"src":"6282:3:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Map_$3450_storage_ptr_$_t_uint256_$returns$_t_bytes32_$_t_bytes32_$","typeString":"function (struct EnumerableMap.Map storage pointer,uint256) view returns (bytes32,bytes32)"}},"id":3791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6282:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes32_$_t_bytes32_$","typeString":"tuple(bytes32,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6251:53:18"},{"expression":{"components":[{"arguments":[{"id":3795,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"6330:3:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6322:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3793,"name":"uint256","nodeType":"ElementaryTypeName","src":"6322:7:18","typeDescriptions":{}}},"id":3796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6322:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"arguments":[{"arguments":[{"id":3803,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3786,"src":"6360:5:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6352:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3801,"name":"uint256","nodeType":"ElementaryTypeName","src":"6352:7:18","typeDescriptions":{}}},"id":3804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6352:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6344:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3799,"name":"uint160","nodeType":"ElementaryTypeName","src":"6344:7:18","typeDescriptions":{}}},"id":3805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6344:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3798,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6336:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3797,"name":"address","nodeType":"ElementaryTypeName","src":"6336:7:18","typeDescriptions":{}}},"id":3806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6336:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3807,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6321:48:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_address_$","typeString":"tuple(uint256,address)"}},"functionReturnParameters":3782,"id":3808,"nodeType":"Return","src":"6314:55:18"}]},"documentation":{"id":3771,"nodeType":"StructuredDocumentation","src":"5812:326:18","text":" @dev Returns the element stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":3810,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"6152:2:18","nodeType":"FunctionDefinition","parameters":{"id":3777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3774,"mutability":"mutable","name":"map","nameLocation":"6180:3:18","nodeType":"VariableDeclaration","scope":3810,"src":"6155:28:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$3680_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"},"typeName":{"id":3773,"nodeType":"UserDefinedTypeName","pathNode":{"id":3772,"name":"UintToAddressMap","nodeType":"IdentifierPath","referencedDeclaration":3680,"src":"6155:16:18"},"referencedDeclaration":3680,"src":"6155:16:18","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$3680_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"}},"visibility":"internal"},{"constant":false,"id":3776,"mutability":"mutable","name":"index","nameLocation":"6193:5:18","nodeType":"VariableDeclaration","scope":3810,"src":"6185:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3775,"name":"uint256","nodeType":"ElementaryTypeName","src":"6185:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6154:45:18"},"returnParameters":{"id":3782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3779,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3810,"src":"6223:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3778,"name":"uint256","nodeType":"ElementaryTypeName","src":"6223:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3781,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3810,"src":"6232:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3780,"name":"address","nodeType":"ElementaryTypeName","src":"6232:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6222:18:18"},"scope":3914,"src":"6143:233:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3849,"nodeType":"Block","src":"6653:142:18","statements":[{"assignments":[3824,3826],"declarations":[{"constant":false,"id":3824,"mutability":"mutable","name":"success","nameLocation":"6669:7:18","nodeType":"VariableDeclaration","scope":3849,"src":"6664:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3823,"name":"bool","nodeType":"ElementaryTypeName","src":"6664:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3826,"mutability":"mutable","name":"value","nameLocation":"6686:5:18","nodeType":"VariableDeclaration","scope":3849,"src":"6678:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3825,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6678:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3835,"initialValue":{"arguments":[{"expression":{"id":3828,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3814,"src":"6703:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$3680_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap storage pointer"}},"id":3829,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3679,"src":"6703:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$3450_storage","typeString":"struct EnumerableMap.Map storage ref"}},{"arguments":[{"id":3832,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"6723:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6715:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3830,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6715:7:18","typeDescriptions":{}}},"id":3833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6715:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Map_$3450_storage","typeString":"struct EnumerableMap.Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3827,"name":"_tryGet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3608,"src":"6695:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Map_$3450_storage_ptr_$_t_bytes32_$returns$_t_bool_$_t_bytes32_$","typeString":"function (struct EnumerableMap.Map storage pointer,bytes32) view returns (bool,bytes32)"}},"id":3834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6695:33:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes32_$","typeString":"tuple(bool,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6663:65:18"},{"expression":{"components":[{"id":3836,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3824,"src":"6746:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"arguments":[{"id":3843,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3826,"src":"6779:5:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6771:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3841,"name":"uint256","nodeType":"ElementaryTypeName","src":"6771:7:18","typeDescriptions":{}}},"id":3844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6771:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6763:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3839,"name":"uint160","nodeType":"ElementaryTypeName","src":"6763:7:18","typeDescriptions":{}}},"id":3845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6763:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6755:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3837,"name":"address","nodeType":"ElementaryTypeName","src":"6755:7:18","typeDescriptions":{}}},"id":3846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6755:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3847,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6745:43:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3822,"id":3848,"nodeType":"Return","src":"6738:50:18"}]},"documentation":{"id":3811,"nodeType":"StructuredDocumentation","src":"6382:169:18","text":" @dev Tries to returns the value associated with `key`.  O(1).\n Does not revert if `key` is not in the map.\n _Available since v3.4._"},"id":3850,"implemented":true,"kind":"function","modifiers":[],"name":"tryGet","nameLocation":"6565:6:18","nodeType":"FunctionDefinition","parameters":{"id":3817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3814,"mutability":"mutable","name":"map","nameLocation":"6597:3:18","nodeType":"VariableDeclaration","scope":3850,"src":"6572:28:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$3680_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"},"typeName":{"id":3813,"nodeType":"UserDefinedTypeName","pathNode":{"id":3812,"name":"UintToAddressMap","nodeType":"IdentifierPath","referencedDeclaration":3680,"src":"6572:16:18"},"referencedDeclaration":3680,"src":"6572:16:18","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$3680_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"}},"visibility":"internal"},{"constant":false,"id":3816,"mutability":"mutable","name":"key","nameLocation":"6610:3:18","nodeType":"VariableDeclaration","scope":3850,"src":"6602:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3815,"name":"uint256","nodeType":"ElementaryTypeName","src":"6602:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6571:43:18"},"returnParameters":{"id":3822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3819,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3850,"src":"6638:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3818,"name":"bool","nodeType":"ElementaryTypeName","src":"6638:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3821,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3850,"src":"6644:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3820,"name":"address","nodeType":"ElementaryTypeName","src":"6644:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6637:15:18"},"scope":3914,"src":"6556:239:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3879,"nodeType":"Block","src":"7035:81:18","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":3868,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"7081:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$3680_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap storage pointer"}},"id":3869,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3679,"src":"7081:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$3450_storage","typeString":"struct EnumerableMap.Map storage ref"}},{"arguments":[{"id":3872,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3856,"src":"7101:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7093:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3870,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7093:7:18","typeDescriptions":{}}},"id":3873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7093:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Map_$3450_storage","typeString":"struct EnumerableMap.Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3867,"name":"_get","nodeType":"Identifier","overloadedDeclarations":[3641,3676],"referencedDeclaration":3641,"src":"7076:4:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Map_$3450_storage_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (struct EnumerableMap.Map storage pointer,bytes32) view returns (bytes32)"}},"id":3874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7076:30:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7068:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3865,"name":"uint256","nodeType":"ElementaryTypeName","src":"7068:7:18","typeDescriptions":{}}},"id":3875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7068:39:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7060:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3863,"name":"uint160","nodeType":"ElementaryTypeName","src":"7060:7:18","typeDescriptions":{}}},"id":3876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7060:48:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7052:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3861,"name":"address","nodeType":"ElementaryTypeName","src":"7052:7:18","typeDescriptions":{}}},"id":3877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7052:57:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3860,"id":3878,"nodeType":"Return","src":"7045:64:18"}]},"documentation":{"id":3851,"nodeType":"StructuredDocumentation","src":"6801:141:18","text":" @dev Returns the value associated with `key`.  O(1).\n Requirements:\n - `key` must be in the map."},"id":3880,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"6956:3:18","nodeType":"FunctionDefinition","parameters":{"id":3857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3854,"mutability":"mutable","name":"map","nameLocation":"6985:3:18","nodeType":"VariableDeclaration","scope":3880,"src":"6960:28:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$3680_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"},"typeName":{"id":3853,"nodeType":"UserDefinedTypeName","pathNode":{"id":3852,"name":"UintToAddressMap","nodeType":"IdentifierPath","referencedDeclaration":3680,"src":"6960:16:18"},"referencedDeclaration":3680,"src":"6960:16:18","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$3680_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"}},"visibility":"internal"},{"constant":false,"id":3856,"mutability":"mutable","name":"key","nameLocation":"6998:3:18","nodeType":"VariableDeclaration","scope":3880,"src":"6990:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3855,"name":"uint256","nodeType":"ElementaryTypeName","src":"6990:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6959:43:18"},"returnParameters":{"id":3860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3859,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3880,"src":"7026:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3858,"name":"address","nodeType":"ElementaryTypeName","src":"7026:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7025:9:18"},"scope":3914,"src":"6947:169:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3912,"nodeType":"Block","src":"7542:95:18","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":3900,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3884,"src":"7588:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$3680_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap storage pointer"}},"id":3901,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3679,"src":"7588:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$3450_storage","typeString":"struct EnumerableMap.Map storage ref"}},{"arguments":[{"id":3904,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"7608:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3903,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7600:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3902,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7600:7:18","typeDescriptions":{}}},"id":3905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7600:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3906,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"7614:12:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Map_$3450_storage","typeString":"struct EnumerableMap.Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3899,"name":"_get","nodeType":"Identifier","overloadedDeclarations":[3641,3676],"referencedDeclaration":3676,"src":"7583:4:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Map_$3450_storage_ptr_$_t_bytes32_$_t_string_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct EnumerableMap.Map storage pointer,bytes32,string memory) view returns (bytes32)"}},"id":3907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7583:44:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7575:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3897,"name":"uint256","nodeType":"ElementaryTypeName","src":"7575:7:18","typeDescriptions":{}}},"id":3908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7575:53:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7567:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3895,"name":"uint160","nodeType":"ElementaryTypeName","src":"7567:7:18","typeDescriptions":{}}},"id":3909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7567:62:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7559:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3893,"name":"address","nodeType":"ElementaryTypeName","src":"7559:7:18","typeDescriptions":{}}},"id":3910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7559:71:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3892,"id":3911,"nodeType":"Return","src":"7552:78:18"}]},"documentation":{"id":3881,"nodeType":"StructuredDocumentation","src":"7122:269:18","text":" @dev Same as {get}, with a custom error message when `key` is not in the map.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryGet}."},"id":3913,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"7405:3:18","nodeType":"FunctionDefinition","parameters":{"id":3889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3884,"mutability":"mutable","name":"map","nameLocation":"7443:3:18","nodeType":"VariableDeclaration","scope":3913,"src":"7418:28:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$3680_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"},"typeName":{"id":3883,"nodeType":"UserDefinedTypeName","pathNode":{"id":3882,"name":"UintToAddressMap","nodeType":"IdentifierPath","referencedDeclaration":3680,"src":"7418:16:18"},"referencedDeclaration":3680,"src":"7418:16:18","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$3680_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"}},"visibility":"internal"},{"constant":false,"id":3886,"mutability":"mutable","name":"key","nameLocation":"7464:3:18","nodeType":"VariableDeclaration","scope":3913,"src":"7456:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3885,"name":"uint256","nodeType":"ElementaryTypeName","src":"7456:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3888,"mutability":"mutable","name":"errorMessage","nameLocation":"7491:12:18","nodeType":"VariableDeclaration","scope":3913,"src":"7477:26:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3887,"name":"string","nodeType":"ElementaryTypeName","src":"7477:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7408:101:18"},"returnParameters":{"id":3892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3891,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3913,"src":"7533:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3890,"name":"address","nodeType":"ElementaryTypeName","src":"7533:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7532:9:18"},"scope":3914,"src":"7396:241:18","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3915,"src":"862:6777:18","usedErrors":[]}],"src":"100:7540:18"},"id":18},"vendor/openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"ast":{"absolutePath":"vendor/openzeppelin/contracts/utils/structs/EnumerableSet.sol","exportedSymbols":{"EnumerableSet":[4513]},"id":4514,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3916,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:19"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":3917,"nodeType":"StructuredDocumentation","src":"125:686:19","text":" @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported."},"fullyImplemented":true,"id":4513,"linearizedBaseContracts":[4513],"name":"EnumerableSet","nameLocation":"820:13:19","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableSet.Set","id":3925,"members":[{"constant":false,"id":3920,"mutability":"mutable","name":"_values","nameLocation":"1344:7:19","nodeType":"VariableDeclaration","scope":3925,"src":"1334:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3918,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1334:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3919,"nodeType":"ArrayTypeName","src":"1334:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3924,"mutability":"mutable","name":"_indexes","nameLocation":"1512:8:19","nodeType":"VariableDeclaration","scope":3925,"src":"1484:36:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":3923,"keyType":{"id":3921,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1492:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1484:27:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueType":{"id":3922,"name":"uint256","nodeType":"ElementaryTypeName","src":"1503:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Set","nameLocation":"1287:3:19","nodeType":"StructDefinition","scope":4513,"src":"1280:247:19","visibility":"public"},{"body":{"id":3966,"nodeType":"Block","src":"1766:335:19","statements":[{"condition":{"id":3940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1780:22:19","subExpression":{"arguments":[{"id":3937,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3929,"src":"1791:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3925_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},{"id":3938,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3931,"src":"1796:5:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3925_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3936,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"1781:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3925_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":3939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1781:21:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3964,"nodeType":"Block","src":"2058:37:19","statements":[{"expression":{"hexValue":"66616c7365","id":3962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2079:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3935,"id":3963,"nodeType":"Return","src":"2072:12:19"}]},"id":3965,"nodeType":"IfStatement","src":"1776:319:19","trueBody":{"id":3961,"nodeType":"Block","src":"1804:248:19","statements":[{"expression":{"arguments":[{"id":3946,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3931,"src":"1835:5:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":3941,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3929,"src":"1818:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3925_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3944,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3920,"src":"1818:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"1818:16:19","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":3947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1818:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3948,"nodeType":"ExpressionStatement","src":"1818:23:19"},{"expression":{"id":3957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":3949,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3929,"src":"1976:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3925_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3952,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":3924,"src":"1976:12:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3953,"indexExpression":{"id":3951,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3931,"src":"1989:5:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1976:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":3954,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3929,"src":"1998:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3925_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3955,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3920,"src":"1998:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1998:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1976:40:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3958,"nodeType":"ExpressionStatement","src":"1976:40:19"},{"expression":{"hexValue":"74727565","id":3959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2037:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3935,"id":3960,"nodeType":"Return","src":"2030:11:19"}]}}]},"documentation":{"id":3926,"nodeType":"StructuredDocumentation","src":"1533:159:19","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":3967,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"1706:4:19","nodeType":"FunctionDefinition","parameters":{"id":3932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3929,"mutability":"mutable","name":"set","nameLocation":"1723:3:19","nodeType":"VariableDeclaration","scope":3967,"src":"1711:15:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3925_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3928,"nodeType":"UserDefinedTypeName","pathNode":{"id":3927,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":3925,"src":"1711:3:19"},"referencedDeclaration":3925,"src":"1711:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3925_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":3931,"mutability":"mutable","name":"value","nameLocation":"1736:5:19","nodeType":"VariableDeclaration","scope":3967,"src":"1728:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3930,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1728:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1710:32:19"},"returnParameters":{"id":3935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3934,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3967,"src":"1760:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3933,"name":"bool","nodeType":"ElementaryTypeName","src":"1760:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1759:6:19"},"scope":4513,"src":"1697:404:19","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":4050,"nodeType":"Block","src":"2341:1316:19","statements":[{"assignments":[3979],"declarations":[{"constant":false,"id":3979,"mutability":"mutable","name":"valueIndex","nameLocation":"2459:10:19","nodeType":"VariableDeclaration","scope":4050,"src":"2451:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3978,"name":"uint256","nodeType":"ElementaryTypeName","src":"2451:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3984,"initialValue":{"baseExpression":{"expression":{"id":3980,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3971,"src":"2472:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3925_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3981,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":3924,"src":"2472:12:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3983,"indexExpression":{"id":3982,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3973,"src":"2485:5:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2472:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2451:40:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3985,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3979,"src":"2506:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2520:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2506:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4048,"nodeType":"Block","src":"3614:37:19","statements":[{"expression":{"hexValue":"66616c7365","id":4046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3635:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3977,"id":4047,"nodeType":"Return","src":"3628:12:19"}]},"id":4049,"nodeType":"IfStatement","src":"2502:1149:19","trueBody":{"id":4045,"nodeType":"Block","src":"2523:1085:19","statements":[{"assignments":[3989],"declarations":[{"constant":false,"id":3989,"mutability":"mutable","name":"toDeleteIndex","nameLocation":"2883:13:19","nodeType":"VariableDeclaration","scope":4045,"src":"2875:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3988,"name":"uint256","nodeType":"ElementaryTypeName","src":"2875:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3993,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3990,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3979,"src":"2899:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2912:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2899:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2875:38:19"},{"assignments":[3995],"declarations":[{"constant":false,"id":3995,"mutability":"mutable","name":"lastIndex","nameLocation":"2935:9:19","nodeType":"VariableDeclaration","scope":4045,"src":"2927:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3994,"name":"uint256","nodeType":"ElementaryTypeName","src":"2927:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4001,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3996,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3971,"src":"2947:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3925_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3997,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3920,"src":"2947:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2947:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2968:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2947:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2927:42:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4002,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3995,"src":"2988:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4003,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3989,"src":"3001:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2988:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4029,"nodeType":"IfStatement","src":"2984:398:19","trueBody":{"id":4028,"nodeType":"Block","src":"3016:366:19","statements":[{"assignments":[4006],"declarations":[{"constant":false,"id":4006,"mutability":"mutable","name":"lastvalue","nameLocation":"3042:9:19","nodeType":"VariableDeclaration","scope":4028,"src":"3034:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4005,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3034:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4011,"initialValue":{"baseExpression":{"expression":{"id":4007,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3971,"src":"3054:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3925_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4008,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3920,"src":"3054:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":4010,"indexExpression":{"id":4009,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3995,"src":"3066:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3054:22:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3034:42:19"},{"expression":{"id":4018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":4012,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3971,"src":"3176:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3925_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4015,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3920,"src":"3176:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":4016,"indexExpression":{"id":4014,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3989,"src":"3188:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3176:26:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4017,"name":"lastvalue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4006,"src":"3205:9:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3176:38:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4019,"nodeType":"ExpressionStatement","src":"3176:38:19"},{"expression":{"id":4026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":4020,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3971,"src":"3288:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3925_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4023,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":3924,"src":"3288:12:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":4024,"indexExpression":{"id":4022,"name":"lastvalue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4006,"src":"3301:9:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3288:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4025,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3979,"src":"3314:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3288:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4027,"nodeType":"ExpressionStatement","src":"3288:36:19"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":4030,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3971,"src":"3460:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3925_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4033,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3920,"src":"3460:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":4034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"pop","nodeType":"MemberAccess","src":"3460:15:19","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer)"}},"id":4035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3460:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4036,"nodeType":"ExpressionStatement","src":"3460:17:19"},{"expression":{"id":4041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"3545:26:19","subExpression":{"baseExpression":{"expression":{"id":4037,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3971,"src":"3552:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3925_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4038,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":3924,"src":"3552:12:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":4040,"indexExpression":{"id":4039,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3973,"src":"3565:5:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3552:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4042,"nodeType":"ExpressionStatement","src":"3545:26:19"},{"expression":{"hexValue":"74727565","id":4043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3593:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3977,"id":4044,"nodeType":"Return","src":"3586:11:19"}]}}]},"documentation":{"id":3968,"nodeType":"StructuredDocumentation","src":"2107:157:19","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":4051,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nameLocation":"2278:7:19","nodeType":"FunctionDefinition","parameters":{"id":3974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3971,"mutability":"mutable","name":"set","nameLocation":"2298:3:19","nodeType":"VariableDeclaration","scope":4051,"src":"2286:15:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3925_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3970,"nodeType":"UserDefinedTypeName","pathNode":{"id":3969,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":3925,"src":"2286:3:19"},"referencedDeclaration":3925,"src":"2286:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3925_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":3973,"mutability":"mutable","name":"value","nameLocation":"2311:5:19","nodeType":"VariableDeclaration","scope":4051,"src":"2303:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3972,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2303:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2285:32:19"},"returnParameters":{"id":3977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3976,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4051,"src":"2335:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3975,"name":"bool","nodeType":"ElementaryTypeName","src":"2335:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2334:6:19"},"scope":4513,"src":"2269:1388:19","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":4069,"nodeType":"Block","src":"3817:48:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":4062,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4055,"src":"3834:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3925_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4063,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":3924,"src":"3834:12:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":4065,"indexExpression":{"id":4064,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4057,"src":"3847:5:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3834:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3857:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3834:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4061,"id":4068,"nodeType":"Return","src":"3827:31:19"}]},"documentation":{"id":4052,"nodeType":"StructuredDocumentation","src":"3663:70:19","text":" @dev Returns true if the value is in the set. O(1)."},"id":4070,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nameLocation":"3747:9:19","nodeType":"FunctionDefinition","parameters":{"id":4058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4055,"mutability":"mutable","name":"set","nameLocation":"3769:3:19","nodeType":"VariableDeclaration","scope":4070,"src":"3757:15:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3925_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":4054,"nodeType":"UserDefinedTypeName","pathNode":{"id":4053,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":3925,"src":"3757:3:19"},"referencedDeclaration":3925,"src":"3757:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3925_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":4057,"mutability":"mutable","name":"value","nameLocation":"3782:5:19","nodeType":"VariableDeclaration","scope":4070,"src":"3774:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4056,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3774:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3756:32:19"},"returnParameters":{"id":4061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4060,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4070,"src":"3811:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4059,"name":"bool","nodeType":"ElementaryTypeName","src":"3811:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3810:6:19"},"scope":4513,"src":"3738:127:19","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":4083,"nodeType":"Block","src":"4011:42:19","statements":[{"expression":{"expression":{"expression":{"id":4079,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4074,"src":"4028:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3925_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4080,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3920,"src":"4028:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":4081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4028:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4078,"id":4082,"nodeType":"Return","src":"4021:25:19"}]},"documentation":{"id":4071,"nodeType":"StructuredDocumentation","src":"3871:70:19","text":" @dev Returns the number of values on the set. O(1)."},"id":4084,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nameLocation":"3955:7:19","nodeType":"FunctionDefinition","parameters":{"id":4075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4074,"mutability":"mutable","name":"set","nameLocation":"3975:3:19","nodeType":"VariableDeclaration","scope":4084,"src":"3963:15:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3925_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":4073,"nodeType":"UserDefinedTypeName","pathNode":{"id":4072,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":3925,"src":"3963:3:19"},"referencedDeclaration":3925,"src":"3963:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3925_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"3962:17:19"},"returnParameters":{"id":4078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4077,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4084,"src":"4002:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4076,"name":"uint256","nodeType":"ElementaryTypeName","src":"4002:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4001:9:19"},"scope":4513,"src":"3946:107:19","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":4100,"nodeType":"Block","src":"4471:42:19","statements":[{"expression":{"baseExpression":{"expression":{"id":4095,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4088,"src":"4488:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3925_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4096,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3920,"src":"4488:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":4098,"indexExpression":{"id":4097,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4090,"src":"4500:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4488:18:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4094,"id":4099,"nodeType":"Return","src":"4481:25:19"}]},"documentation":{"id":4085,"nodeType":"StructuredDocumentation","src":"4059:331:19","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":4101,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nameLocation":"4404:3:19","nodeType":"FunctionDefinition","parameters":{"id":4091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4088,"mutability":"mutable","name":"set","nameLocation":"4420:3:19","nodeType":"VariableDeclaration","scope":4101,"src":"4408:15:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3925_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":4087,"nodeType":"UserDefinedTypeName","pathNode":{"id":4086,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":3925,"src":"4408:3:19"},"referencedDeclaration":3925,"src":"4408:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3925_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":4090,"mutability":"mutable","name":"index","nameLocation":"4433:5:19","nodeType":"VariableDeclaration","scope":4101,"src":"4425:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4089,"name":"uint256","nodeType":"ElementaryTypeName","src":"4425:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4407:32:19"},"returnParameters":{"id":4094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4093,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4101,"src":"4462:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4092,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4462:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4461:9:19"},"scope":4513,"src":"4395:118:19","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":4114,"nodeType":"Block","src":"5127:35:19","statements":[{"expression":{"expression":{"id":4111,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"5144:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3925_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4112,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3920,"src":"5144:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":4110,"id":4113,"nodeType":"Return","src":"5137:18:19"}]},"documentation":{"id":4102,"nodeType":"StructuredDocumentation","src":"4519:529:19","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":4115,"implemented":true,"kind":"function","modifiers":[],"name":"_values","nameLocation":"5062:7:19","nodeType":"FunctionDefinition","parameters":{"id":4106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4105,"mutability":"mutable","name":"set","nameLocation":"5082:3:19","nodeType":"VariableDeclaration","scope":4115,"src":"5070:15:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3925_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":4104,"nodeType":"UserDefinedTypeName","pathNode":{"id":4103,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":3925,"src":"5070:3:19"},"referencedDeclaration":3925,"src":"5070:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3925_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"5069:17:19"},"returnParameters":{"id":4110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4109,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4115,"src":"5109:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4107,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5109:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4108,"nodeType":"ArrayTypeName","src":"5109:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5108:18:19"},"scope":4513,"src":"5053:109:19","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableSet.Bytes32Set","id":4119,"members":[{"constant":false,"id":4118,"mutability":"mutable","name":"_inner","nameLocation":"5219:6:19","nodeType":"VariableDeclaration","scope":4119,"src":"5215:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3925_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":4117,"nodeType":"UserDefinedTypeName","pathNode":{"id":4116,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":3925,"src":"5215:3:19"},"referencedDeclaration":3925,"src":"5215:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3925_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"Bytes32Set","nameLocation":"5194:10:19","nodeType":"StructDefinition","scope":4513,"src":"5187:45:19","visibility":"public"},{"body":{"id":4136,"nodeType":"Block","src":"5478:47:19","statements":[{"expression":{"arguments":[{"expression":{"id":4131,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4123,"src":"5500:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4119_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":4132,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4118,"src":"5500:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3925_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":4133,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4125,"src":"5512:5:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3925_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4130,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"5495:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3925_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":4134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5495:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4129,"id":4135,"nodeType":"Return","src":"5488:30:19"}]},"documentation":{"id":4120,"nodeType":"StructuredDocumentation","src":"5238:159:19","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":4137,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"5411:3:19","nodeType":"FunctionDefinition","parameters":{"id":4126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4123,"mutability":"mutable","name":"set","nameLocation":"5434:3:19","nodeType":"VariableDeclaration","scope":4137,"src":"5415:22:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4119_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":4122,"nodeType":"UserDefinedTypeName","pathNode":{"id":4121,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":4119,"src":"5415:10:19"},"referencedDeclaration":4119,"src":"5415:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4119_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":4125,"mutability":"mutable","name":"value","nameLocation":"5447:5:19","nodeType":"VariableDeclaration","scope":4137,"src":"5439:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4124,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5439:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5414:39:19"},"returnParameters":{"id":4129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4128,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4137,"src":"5472:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4127,"name":"bool","nodeType":"ElementaryTypeName","src":"5472:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5471:6:19"},"scope":4513,"src":"5402:123:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4154,"nodeType":"Block","src":"5772:50:19","statements":[{"expression":{"arguments":[{"expression":{"id":4149,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"5797:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4119_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":4150,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4118,"src":"5797:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3925_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":4151,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4143,"src":"5809:5:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3925_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4148,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4051,"src":"5789:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3925_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":4152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5789:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4147,"id":4153,"nodeType":"Return","src":"5782:33:19"}]},"documentation":{"id":4138,"nodeType":"StructuredDocumentation","src":"5531:157:19","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":4155,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"5702:6:19","nodeType":"FunctionDefinition","parameters":{"id":4144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4141,"mutability":"mutable","name":"set","nameLocation":"5728:3:19","nodeType":"VariableDeclaration","scope":4155,"src":"5709:22:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4119_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":4140,"nodeType":"UserDefinedTypeName","pathNode":{"id":4139,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":4119,"src":"5709:10:19"},"referencedDeclaration":4119,"src":"5709:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4119_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":4143,"mutability":"mutable","name":"value","nameLocation":"5741:5:19","nodeType":"VariableDeclaration","scope":4155,"src":"5733:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4142,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5733:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5708:39:19"},"returnParameters":{"id":4147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4146,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4155,"src":"5766:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4145,"name":"bool","nodeType":"ElementaryTypeName","src":"5766:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5765:6:19"},"scope":4513,"src":"5693:129:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4172,"nodeType":"Block","src":"5989:52:19","statements":[{"expression":{"arguments":[{"expression":{"id":4167,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"6016:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4119_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":4168,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4118,"src":"6016:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3925_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":4169,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4161,"src":"6028:5:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3925_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4166,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"6006:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3925_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":4170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6006:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4165,"id":4171,"nodeType":"Return","src":"5999:35:19"}]},"documentation":{"id":4156,"nodeType":"StructuredDocumentation","src":"5828:70:19","text":" @dev Returns true if the value is in the set. O(1)."},"id":4173,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"5912:8:19","nodeType":"FunctionDefinition","parameters":{"id":4162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4159,"mutability":"mutable","name":"set","nameLocation":"5940:3:19","nodeType":"VariableDeclaration","scope":4173,"src":"5921:22:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4119_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":4158,"nodeType":"UserDefinedTypeName","pathNode":{"id":4157,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":4119,"src":"5921:10:19"},"referencedDeclaration":4119,"src":"5921:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4119_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":4161,"mutability":"mutable","name":"value","nameLocation":"5953:5:19","nodeType":"VariableDeclaration","scope":4173,"src":"5945:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4160,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5945:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5920:39:19"},"returnParameters":{"id":4165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4164,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4173,"src":"5983:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4163,"name":"bool","nodeType":"ElementaryTypeName","src":"5983:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5982:6:19"},"scope":4513,"src":"5903:138:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4187,"nodeType":"Block","src":"6194:43:19","statements":[{"expression":{"arguments":[{"expression":{"id":4183,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4177,"src":"6219:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4119_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":4184,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4118,"src":"6219:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3925_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3925_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":4182,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4084,"src":"6211:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3925_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":4185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6211:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4181,"id":4186,"nodeType":"Return","src":"6204:26:19"}]},"documentation":{"id":4174,"nodeType":"StructuredDocumentation","src":"6047:70:19","text":" @dev Returns the number of values in the set. O(1)."},"id":4188,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"6131:6:19","nodeType":"FunctionDefinition","parameters":{"id":4178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4177,"mutability":"mutable","name":"set","nameLocation":"6157:3:19","nodeType":"VariableDeclaration","scope":4188,"src":"6138:22:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4119_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":4176,"nodeType":"UserDefinedTypeName","pathNode":{"id":4175,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":4119,"src":"6138:10:19"},"referencedDeclaration":4119,"src":"6138:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4119_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"6137:24:19"},"returnParameters":{"id":4181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4180,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4188,"src":"6185:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4179,"name":"uint256","nodeType":"ElementaryTypeName","src":"6185:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6184:9:19"},"scope":4513,"src":"6122:115:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4205,"nodeType":"Block","src":"6662:46:19","statements":[{"expression":{"arguments":[{"expression":{"id":4200,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4192,"src":"6683:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4119_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":4201,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4118,"src":"6683:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3925_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":4202,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"6695:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3925_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4199,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"6679:3:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3925_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":4203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6679:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4198,"id":4204,"nodeType":"Return","src":"6672:29:19"}]},"documentation":{"id":4189,"nodeType":"StructuredDocumentation","src":"6243:331:19","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":4206,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"6588:2:19","nodeType":"FunctionDefinition","parameters":{"id":4195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4192,"mutability":"mutable","name":"set","nameLocation":"6610:3:19","nodeType":"VariableDeclaration","scope":4206,"src":"6591:22:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4119_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":4191,"nodeType":"UserDefinedTypeName","pathNode":{"id":4190,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":4119,"src":"6591:10:19"},"referencedDeclaration":4119,"src":"6591:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4119_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":4194,"mutability":"mutable","name":"index","nameLocation":"6623:5:19","nodeType":"VariableDeclaration","scope":4206,"src":"6615:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4193,"name":"uint256","nodeType":"ElementaryTypeName","src":"6615:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6590:39:19"},"returnParameters":{"id":4198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4206,"src":"6653:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4196,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6653:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6652:9:19"},"scope":4513,"src":"6579:129:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4221,"nodeType":"Block","src":"7329:43:19","statements":[{"expression":{"arguments":[{"expression":{"id":4217,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4210,"src":"7354:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4119_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":4218,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4118,"src":"7354:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3925_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3925_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":4216,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4115,"src":"7346:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3925_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":4219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7346:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":4215,"id":4220,"nodeType":"Return","src":"7339:26:19"}]},"documentation":{"id":4207,"nodeType":"StructuredDocumentation","src":"6714:529:19","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":4222,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"7257:6:19","nodeType":"FunctionDefinition","parameters":{"id":4211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4210,"mutability":"mutable","name":"set","nameLocation":"7283:3:19","nodeType":"VariableDeclaration","scope":4222,"src":"7264:22:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4119_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":4209,"nodeType":"UserDefinedTypeName","pathNode":{"id":4208,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":4119,"src":"7264:10:19"},"referencedDeclaration":4119,"src":"7264:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4119_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"7263:24:19"},"returnParameters":{"id":4215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4214,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4222,"src":"7311:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4212,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7311:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4213,"nodeType":"ArrayTypeName","src":"7311:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7310:18:19"},"scope":4513,"src":"7248:124:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.AddressSet","id":4226,"members":[{"constant":false,"id":4225,"mutability":"mutable","name":"_inner","nameLocation":"7429:6:19","nodeType":"VariableDeclaration","scope":4226,"src":"7425:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3925_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":4224,"nodeType":"UserDefinedTypeName","pathNode":{"id":4223,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":3925,"src":"7425:3:19"},"referencedDeclaration":3925,"src":"7425:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3925_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"AddressSet","nameLocation":"7404:10:19","nodeType":"StructDefinition","scope":4513,"src":"7397:45:19","visibility":"public"},{"body":{"id":4252,"nodeType":"Block","src":"7688:74:19","statements":[{"expression":{"arguments":[{"expression":{"id":4238,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4230,"src":"7710:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4226_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":4239,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4225,"src":"7710:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3925_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":4246,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4232,"src":"7746:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4245,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7738:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4244,"name":"uint160","nodeType":"ElementaryTypeName","src":"7738:7:19","typeDescriptions":{}}},"id":4247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7738:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7730:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4242,"name":"uint256","nodeType":"ElementaryTypeName","src":"7730:7:19","typeDescriptions":{}}},"id":4248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7730:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4241,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7722:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4240,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7722:7:19","typeDescriptions":{}}},"id":4249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7722:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3925_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4237,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"7705:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3925_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":4250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7705:50:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4236,"id":4251,"nodeType":"Return","src":"7698:57:19"}]},"documentation":{"id":4227,"nodeType":"StructuredDocumentation","src":"7448:159:19","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":4253,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"7621:3:19","nodeType":"FunctionDefinition","parameters":{"id":4233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4230,"mutability":"mutable","name":"set","nameLocation":"7644:3:19","nodeType":"VariableDeclaration","scope":4253,"src":"7625:22:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4226_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":4229,"nodeType":"UserDefinedTypeName","pathNode":{"id":4228,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":4226,"src":"7625:10:19"},"referencedDeclaration":4226,"src":"7625:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4226_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":4232,"mutability":"mutable","name":"value","nameLocation":"7657:5:19","nodeType":"VariableDeclaration","scope":4253,"src":"7649:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4231,"name":"address","nodeType":"ElementaryTypeName","src":"7649:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7624:39:19"},"returnParameters":{"id":4236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4235,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4253,"src":"7682:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4234,"name":"bool","nodeType":"ElementaryTypeName","src":"7682:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7681:6:19"},"scope":4513,"src":"7612:150:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4279,"nodeType":"Block","src":"8009:77:19","statements":[{"expression":{"arguments":[{"expression":{"id":4265,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4257,"src":"8034:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4226_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":4266,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4225,"src":"8034:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3925_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":4273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4259,"src":"8070:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8062:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4271,"name":"uint160","nodeType":"ElementaryTypeName","src":"8062:7:19","typeDescriptions":{}}},"id":4274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8062:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8054:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4269,"name":"uint256","nodeType":"ElementaryTypeName","src":"8054:7:19","typeDescriptions":{}}},"id":4275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8054:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8046:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4267,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8046:7:19","typeDescriptions":{}}},"id":4276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8046:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3925_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4264,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4051,"src":"8026:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3925_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":4277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8026:53:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4263,"id":4278,"nodeType":"Return","src":"8019:60:19"}]},"documentation":{"id":4254,"nodeType":"StructuredDocumentation","src":"7768:157:19","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":4280,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"7939:6:19","nodeType":"FunctionDefinition","parameters":{"id":4260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4257,"mutability":"mutable","name":"set","nameLocation":"7965:3:19","nodeType":"VariableDeclaration","scope":4280,"src":"7946:22:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4226_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":4256,"nodeType":"UserDefinedTypeName","pathNode":{"id":4255,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":4226,"src":"7946:10:19"},"referencedDeclaration":4226,"src":"7946:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4226_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":4259,"mutability":"mutable","name":"value","nameLocation":"7978:5:19","nodeType":"VariableDeclaration","scope":4280,"src":"7970:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4258,"name":"address","nodeType":"ElementaryTypeName","src":"7970:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7945:39:19"},"returnParameters":{"id":4263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4262,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4280,"src":"8003:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4261,"name":"bool","nodeType":"ElementaryTypeName","src":"8003:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8002:6:19"},"scope":4513,"src":"7930:156:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4306,"nodeType":"Block","src":"8253:79:19","statements":[{"expression":{"arguments":[{"expression":{"id":4292,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"8280:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4226_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":4293,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4225,"src":"8280:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3925_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":4300,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4286,"src":"8316:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8308:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4298,"name":"uint160","nodeType":"ElementaryTypeName","src":"8308:7:19","typeDescriptions":{}}},"id":4301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8308:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4297,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8300:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4296,"name":"uint256","nodeType":"ElementaryTypeName","src":"8300:7:19","typeDescriptions":{}}},"id":4302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8300:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8292:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4294,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8292:7:19","typeDescriptions":{}}},"id":4303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8292:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3925_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4291,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"8270:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3925_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":4304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8270:55:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4290,"id":4305,"nodeType":"Return","src":"8263:62:19"}]},"documentation":{"id":4281,"nodeType":"StructuredDocumentation","src":"8092:70:19","text":" @dev Returns true if the value is in the set. O(1)."},"id":4307,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"8176:8:19","nodeType":"FunctionDefinition","parameters":{"id":4287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4284,"mutability":"mutable","name":"set","nameLocation":"8204:3:19","nodeType":"VariableDeclaration","scope":4307,"src":"8185:22:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4226_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":4283,"nodeType":"UserDefinedTypeName","pathNode":{"id":4282,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":4226,"src":"8185:10:19"},"referencedDeclaration":4226,"src":"8185:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4226_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":4286,"mutability":"mutable","name":"value","nameLocation":"8217:5:19","nodeType":"VariableDeclaration","scope":4307,"src":"8209:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4285,"name":"address","nodeType":"ElementaryTypeName","src":"8209:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8184:39:19"},"returnParameters":{"id":4290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4289,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4307,"src":"8247:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4288,"name":"bool","nodeType":"ElementaryTypeName","src":"8247:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8246:6:19"},"scope":4513,"src":"8167:165:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4321,"nodeType":"Block","src":"8485:43:19","statements":[{"expression":{"arguments":[{"expression":{"id":4317,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4311,"src":"8510:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4226_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":4318,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4225,"src":"8510:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3925_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3925_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":4316,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4084,"src":"8502:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3925_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":4319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8502:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4315,"id":4320,"nodeType":"Return","src":"8495:26:19"}]},"documentation":{"id":4308,"nodeType":"StructuredDocumentation","src":"8338:70:19","text":" @dev Returns the number of values in the set. O(1)."},"id":4322,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"8422:6:19","nodeType":"FunctionDefinition","parameters":{"id":4312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4311,"mutability":"mutable","name":"set","nameLocation":"8448:3:19","nodeType":"VariableDeclaration","scope":4322,"src":"8429:22:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4226_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":4310,"nodeType":"UserDefinedTypeName","pathNode":{"id":4309,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":4226,"src":"8429:10:19"},"referencedDeclaration":4226,"src":"8429:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4226_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"8428:24:19"},"returnParameters":{"id":4315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4314,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4322,"src":"8476:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4313,"name":"uint256","nodeType":"ElementaryTypeName","src":"8476:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8475:9:19"},"scope":4513,"src":"8413:115:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4348,"nodeType":"Block","src":"8953:73:19","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":4340,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"8998:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4226_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":4341,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4225,"src":"8998:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3925_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":4342,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"9010:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3925_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4339,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"8994:3:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3925_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":4343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8994:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8986:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4337,"name":"uint256","nodeType":"ElementaryTypeName","src":"8986:7:19","typeDescriptions":{}}},"id":4344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8986:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4336,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8978:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4335,"name":"uint160","nodeType":"ElementaryTypeName","src":"8978:7:19","typeDescriptions":{}}},"id":4345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8978:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8970:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4333,"name":"address","nodeType":"ElementaryTypeName","src":"8970:7:19","typeDescriptions":{}}},"id":4346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8970:49:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4332,"id":4347,"nodeType":"Return","src":"8963:56:19"}]},"documentation":{"id":4323,"nodeType":"StructuredDocumentation","src":"8534:331:19","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":4349,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"8879:2:19","nodeType":"FunctionDefinition","parameters":{"id":4329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4326,"mutability":"mutable","name":"set","nameLocation":"8901:3:19","nodeType":"VariableDeclaration","scope":4349,"src":"8882:22:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4226_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":4325,"nodeType":"UserDefinedTypeName","pathNode":{"id":4324,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":4226,"src":"8882:10:19"},"referencedDeclaration":4226,"src":"8882:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4226_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":4328,"mutability":"mutable","name":"index","nameLocation":"8914:5:19","nodeType":"VariableDeclaration","scope":4349,"src":"8906:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4327,"name":"uint256","nodeType":"ElementaryTypeName","src":"8906:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8881:39:19"},"returnParameters":{"id":4332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4331,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4349,"src":"8944:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4330,"name":"address","nodeType":"ElementaryTypeName","src":"8944:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8943:9:19"},"scope":4513,"src":"8870:156:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4378,"nodeType":"Block","src":"9647:176:19","statements":[{"assignments":[4363],"declarations":[{"constant":false,"id":4363,"mutability":"mutable","name":"store","nameLocation":"9674:5:19","nodeType":"VariableDeclaration","scope":4378,"src":"9657:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4361,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9657:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4362,"nodeType":"ArrayTypeName","src":"9657:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":4368,"initialValue":{"arguments":[{"expression":{"id":4365,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"9690:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4226_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":4366,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4225,"src":"9690:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3925_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3925_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":4364,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4115,"src":"9682:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3925_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":4367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9682:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"9657:44:19"},{"assignments":[4373],"declarations":[{"constant":false,"id":4373,"mutability":"mutable","name":"result","nameLocation":"9728:6:19","nodeType":"VariableDeclaration","scope":4378,"src":"9711:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4371,"name":"address","nodeType":"ElementaryTypeName","src":"9711:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4372,"nodeType":"ArrayTypeName","src":"9711:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":4374,"nodeType":"VariableDeclarationStatement","src":"9711:23:19"},{"AST":{"nodeType":"YulBlock","src":"9754:39:19","statements":[{"nodeType":"YulAssignment","src":"9768:15:19","value":{"name":"store","nodeType":"YulIdentifier","src":"9778:5:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"9768:6:19"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":4373,"isOffset":false,"isSlot":false,"src":"9768:6:19","valueSize":1},{"declaration":4363,"isOffset":false,"isSlot":false,"src":"9778:5:19","valueSize":1}],"id":4375,"nodeType":"InlineAssembly","src":"9745:48:19"},{"expression":{"id":4376,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4373,"src":"9810:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":4358,"id":4377,"nodeType":"Return","src":"9803:13:19"}]},"documentation":{"id":4350,"nodeType":"StructuredDocumentation","src":"9032:529:19","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":4379,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"9575:6:19","nodeType":"FunctionDefinition","parameters":{"id":4354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4353,"mutability":"mutable","name":"set","nameLocation":"9601:3:19","nodeType":"VariableDeclaration","scope":4379,"src":"9582:22:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4226_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":4352,"nodeType":"UserDefinedTypeName","pathNode":{"id":4351,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":4226,"src":"9582:10:19"},"referencedDeclaration":4226,"src":"9582:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4226_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"9581:24:19"},"returnParameters":{"id":4358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4357,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4379,"src":"9629:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4355,"name":"address","nodeType":"ElementaryTypeName","src":"9629:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4356,"nodeType":"ArrayTypeName","src":"9629:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"9628:18:19"},"scope":4513,"src":"9566:257:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.UintSet","id":4383,"members":[{"constant":false,"id":4382,"mutability":"mutable","name":"_inner","nameLocation":"9874:6:19","nodeType":"VariableDeclaration","scope":4383,"src":"9870:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3925_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":4381,"nodeType":"UserDefinedTypeName","pathNode":{"id":4380,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":3925,"src":"9870:3:19"},"referencedDeclaration":3925,"src":"9870:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3925_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"UintSet","nameLocation":"9852:7:19","nodeType":"StructDefinition","scope":4513,"src":"9845:42:19","visibility":"public"},{"body":{"id":4403,"nodeType":"Block","src":"10130:56:19","statements":[{"expression":{"arguments":[{"expression":{"id":4395,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4387,"src":"10152:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4383_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":4396,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4382,"src":"10152:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3925_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":4399,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4389,"src":"10172:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10164:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4397,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10164:7:19","typeDescriptions":{}}},"id":4400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10164:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3925_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4394,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"10147:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3925_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":4401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10147:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4393,"id":4402,"nodeType":"Return","src":"10140:39:19"}]},"documentation":{"id":4384,"nodeType":"StructuredDocumentation","src":"9893:159:19","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":4404,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"10066:3:19","nodeType":"FunctionDefinition","parameters":{"id":4390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4387,"mutability":"mutable","name":"set","nameLocation":"10086:3:19","nodeType":"VariableDeclaration","scope":4404,"src":"10070:19:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4383_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":4386,"nodeType":"UserDefinedTypeName","pathNode":{"id":4385,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":4383,"src":"10070:7:19"},"referencedDeclaration":4383,"src":"10070:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4383_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":4389,"mutability":"mutable","name":"value","nameLocation":"10099:5:19","nodeType":"VariableDeclaration","scope":4404,"src":"10091:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4388,"name":"uint256","nodeType":"ElementaryTypeName","src":"10091:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10069:36:19"},"returnParameters":{"id":4393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4392,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4404,"src":"10124:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4391,"name":"bool","nodeType":"ElementaryTypeName","src":"10124:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10123:6:19"},"scope":4513,"src":"10057:129:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4424,"nodeType":"Block","src":"10430:59:19","statements":[{"expression":{"arguments":[{"expression":{"id":4416,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4408,"src":"10455:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4383_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":4417,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4382,"src":"10455:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3925_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":4420,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4410,"src":"10475:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10467:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4418,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10467:7:19","typeDescriptions":{}}},"id":4421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10467:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3925_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4415,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4051,"src":"10447:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3925_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":4422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10447:35:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4414,"id":4423,"nodeType":"Return","src":"10440:42:19"}]},"documentation":{"id":4405,"nodeType":"StructuredDocumentation","src":"10192:157:19","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":4425,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"10363:6:19","nodeType":"FunctionDefinition","parameters":{"id":4411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4408,"mutability":"mutable","name":"set","nameLocation":"10386:3:19","nodeType":"VariableDeclaration","scope":4425,"src":"10370:19:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4383_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":4407,"nodeType":"UserDefinedTypeName","pathNode":{"id":4406,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":4383,"src":"10370:7:19"},"referencedDeclaration":4383,"src":"10370:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4383_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":4410,"mutability":"mutable","name":"value","nameLocation":"10399:5:19","nodeType":"VariableDeclaration","scope":4425,"src":"10391:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4409,"name":"uint256","nodeType":"ElementaryTypeName","src":"10391:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10369:36:19"},"returnParameters":{"id":4414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4413,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4425,"src":"10424:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4412,"name":"bool","nodeType":"ElementaryTypeName","src":"10424:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10423:6:19"},"scope":4513,"src":"10354:135:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4445,"nodeType":"Block","src":"10653:61:19","statements":[{"expression":{"arguments":[{"expression":{"id":4437,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4429,"src":"10680:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4383_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":4438,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4382,"src":"10680:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3925_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":4441,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4431,"src":"10700:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10692:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4439,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10692:7:19","typeDescriptions":{}}},"id":4442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10692:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3925_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4436,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"10670:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3925_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":4443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10670:37:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4435,"id":4444,"nodeType":"Return","src":"10663:44:19"}]},"documentation":{"id":4426,"nodeType":"StructuredDocumentation","src":"10495:70:19","text":" @dev Returns true if the value is in the set. O(1)."},"id":4446,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"10579:8:19","nodeType":"FunctionDefinition","parameters":{"id":4432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4429,"mutability":"mutable","name":"set","nameLocation":"10604:3:19","nodeType":"VariableDeclaration","scope":4446,"src":"10588:19:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4383_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":4428,"nodeType":"UserDefinedTypeName","pathNode":{"id":4427,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":4383,"src":"10588:7:19"},"referencedDeclaration":4383,"src":"10588:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4383_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":4431,"mutability":"mutable","name":"value","nameLocation":"10617:5:19","nodeType":"VariableDeclaration","scope":4446,"src":"10609:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4430,"name":"uint256","nodeType":"ElementaryTypeName","src":"10609:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10587:36:19"},"returnParameters":{"id":4435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4434,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4446,"src":"10647:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4433,"name":"bool","nodeType":"ElementaryTypeName","src":"10647:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10646:6:19"},"scope":4513,"src":"10570:144:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4460,"nodeType":"Block","src":"10864:43:19","statements":[{"expression":{"arguments":[{"expression":{"id":4456,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4450,"src":"10889:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4383_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":4457,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4382,"src":"10889:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3925_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3925_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":4455,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4084,"src":"10881:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3925_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":4458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10881:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4454,"id":4459,"nodeType":"Return","src":"10874:26:19"}]},"documentation":{"id":4447,"nodeType":"StructuredDocumentation","src":"10720:70:19","text":" @dev Returns the number of values on the set. O(1)."},"id":4461,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"10804:6:19","nodeType":"FunctionDefinition","parameters":{"id":4451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4450,"mutability":"mutable","name":"set","nameLocation":"10827:3:19","nodeType":"VariableDeclaration","scope":4461,"src":"10811:19:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4383_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":4449,"nodeType":"UserDefinedTypeName","pathNode":{"id":4448,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":4383,"src":"10811:7:19"},"referencedDeclaration":4383,"src":"10811:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4383_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"10810:21:19"},"returnParameters":{"id":4454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4453,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4461,"src":"10855:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4452,"name":"uint256","nodeType":"ElementaryTypeName","src":"10855:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10854:9:19"},"scope":4513,"src":"10795:112:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4481,"nodeType":"Block","src":"11329:55:19","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":4475,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4465,"src":"11358:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4383_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":4476,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4382,"src":"11358:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3925_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":4477,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4467,"src":"11370:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3925_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4474,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"11354:3:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3925_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":4478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11354:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11346:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4472,"name":"uint256","nodeType":"ElementaryTypeName","src":"11346:7:19","typeDescriptions":{}}},"id":4479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11346:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4471,"id":4480,"nodeType":"Return","src":"11339:38:19"}]},"documentation":{"id":4462,"nodeType":"StructuredDocumentation","src":"10913:331:19","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":4482,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"11258:2:19","nodeType":"FunctionDefinition","parameters":{"id":4468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4465,"mutability":"mutable","name":"set","nameLocation":"11277:3:19","nodeType":"VariableDeclaration","scope":4482,"src":"11261:19:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4383_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":4464,"nodeType":"UserDefinedTypeName","pathNode":{"id":4463,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":4383,"src":"11261:7:19"},"referencedDeclaration":4383,"src":"11261:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4383_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":4467,"mutability":"mutable","name":"index","nameLocation":"11290:5:19","nodeType":"VariableDeclaration","scope":4482,"src":"11282:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4466,"name":"uint256","nodeType":"ElementaryTypeName","src":"11282:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11260:36:19"},"returnParameters":{"id":4471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4470,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4482,"src":"11320:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4469,"name":"uint256","nodeType":"ElementaryTypeName","src":"11320:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11319:9:19"},"scope":4513,"src":"11249:135:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4511,"nodeType":"Block","src":"12002:176:19","statements":[{"assignments":[4496],"declarations":[{"constant":false,"id":4496,"mutability":"mutable","name":"store","nameLocation":"12029:5:19","nodeType":"VariableDeclaration","scope":4511,"src":"12012:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4494,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12012:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4495,"nodeType":"ArrayTypeName","src":"12012:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":4501,"initialValue":{"arguments":[{"expression":{"id":4498,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"12045:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4383_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":4499,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4382,"src":"12045:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3925_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3925_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":4497,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4115,"src":"12037:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3925_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":4500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12037:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12012:44:19"},{"assignments":[4506],"declarations":[{"constant":false,"id":4506,"mutability":"mutable","name":"result","nameLocation":"12083:6:19","nodeType":"VariableDeclaration","scope":4511,"src":"12066:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4504,"name":"uint256","nodeType":"ElementaryTypeName","src":"12066:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4505,"nodeType":"ArrayTypeName","src":"12066:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":4507,"nodeType":"VariableDeclarationStatement","src":"12066:23:19"},{"AST":{"nodeType":"YulBlock","src":"12109:39:19","statements":[{"nodeType":"YulAssignment","src":"12123:15:19","value":{"name":"store","nodeType":"YulIdentifier","src":"12133:5:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12123:6:19"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":4506,"isOffset":false,"isSlot":false,"src":"12123:6:19","valueSize":1},{"declaration":4496,"isOffset":false,"isSlot":false,"src":"12133:5:19","valueSize":1}],"id":4508,"nodeType":"InlineAssembly","src":"12100:48:19"},{"expression":{"id":4509,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4506,"src":"12165:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":4491,"id":4510,"nodeType":"Return","src":"12158:13:19"}]},"documentation":{"id":4483,"nodeType":"StructuredDocumentation","src":"11390:529:19","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":4512,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"11933:6:19","nodeType":"FunctionDefinition","parameters":{"id":4487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4486,"mutability":"mutable","name":"set","nameLocation":"11956:3:19","nodeType":"VariableDeclaration","scope":4512,"src":"11940:19:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4383_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":4485,"nodeType":"UserDefinedTypeName","pathNode":{"id":4484,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":4383,"src":"11940:7:19"},"referencedDeclaration":4383,"src":"11940:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4383_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"11939:21:19"},"returnParameters":{"id":4491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4490,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4512,"src":"11984:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4488,"name":"uint256","nodeType":"ElementaryTypeName","src":"11984:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4489,"nodeType":"ArrayTypeName","src":"11984:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"11983:18:19"},"scope":4513,"src":"11924:254:19","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":4514,"src":"812:11368:19","usedErrors":[]}],"src":"100:12081:19"},"id":19}},"contracts":{"@chainlink/contracts/src/v0.8/Chainlink.sol":{"Chainlink":{"abi":[],"devdoc":{"details":"Uses imported CBOR library for encoding to buffer","kind":"dev","methods":{},"title":"Library for common Chainlink functions","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a6d82f6bc8597a652bad541d6d8a27b97fb8233c4870a19571cc16209d0993ea64736f6c63430008060033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 0xD8 0x2F PUSH12 0xC8597A652BAD541D6D8A27B9 PUSH32 0xB8233C4870A19571CC16209D0993EA64736F6C63430008060033000000000000 ","sourceMap":"293:3494:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a6d82f6bc8597a652bad541d6d8a27b97fb8233c4870a19571cc16209d0993ea64736f6c63430008060033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 0xD8 0x2F PUSH12 0xC8597A652BAD541D6D8A27B9 PUSH32 0xB8233C4870A19571CC16209D0993EA64736F6C63430008060033000000000000 ","sourceMap":"293:3494:0:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"add(struct Chainlink.Request memory,string memory,string memory)":"infinite","addBytes(struct Chainlink.Request memory,string memory,bytes memory)":"infinite","addInt(struct Chainlink.Request memory,string memory,int256)":"infinite","addStringArray(struct Chainlink.Request memory,string memory,string memory[] memory)":"infinite","addUint(struct Chainlink.Request memory,string memory,uint256)":"infinite","initialize(struct Chainlink.Request memory,bytes32,address,bytes4)":"infinite","setBuffer(struct Chainlink.Request memory,bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Uses imported CBOR library for encoding to buffer\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Library for common Chainlink functions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/Chainlink.sol\":\"Chainlink\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/Chainlink.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {CBORChainlink} from \\\"./vendor/CBORChainlink.sol\\\";\\nimport {BufferChainlink} from \\\"./vendor/BufferChainlink.sol\\\";\\n\\n/**\\n * @title Library for common Chainlink functions\\n * @dev Uses imported CBOR library for encoding to buffer\\n */\\nlibrary Chainlink {\\n  uint256 internal constant defaultBufferSize = 256; // solhint-disable-line const-name-snakecase\\n\\n  using CBORChainlink for BufferChainlink.buffer;\\n\\n  struct Request {\\n    bytes32 id;\\n    address callbackAddress;\\n    bytes4 callbackFunctionId;\\n    uint256 nonce;\\n    BufferChainlink.buffer buf;\\n  }\\n\\n  /**\\n   * @notice Initializes a Chainlink request\\n   * @dev Sets the ID, callback address, and callback function signature on the request\\n   * @param self The uninitialized request\\n   * @param jobId The Job Specification ID\\n   * @param callbackAddr The callback address\\n   * @param callbackFunc The callback function signature\\n   * @return The initialized request\\n   */\\n  function initialize(\\n    Request memory self,\\n    bytes32 jobId,\\n    address callbackAddr,\\n    bytes4 callbackFunc\\n  ) internal pure returns (Chainlink.Request memory) {\\n    BufferChainlink.init(self.buf, defaultBufferSize);\\n    self.id = jobId;\\n    self.callbackAddress = callbackAddr;\\n    self.callbackFunctionId = callbackFunc;\\n    return self;\\n  }\\n\\n  /**\\n   * @notice Sets the data for the buffer without encoding CBOR on-chain\\n   * @dev CBOR can be closed with curly-brackets {} or they can be left off\\n   * @param self The initialized request\\n   * @param data The CBOR data\\n   */\\n  function setBuffer(Request memory self, bytes memory data) internal pure {\\n    BufferChainlink.init(self.buf, data.length);\\n    BufferChainlink.append(self.buf, data);\\n  }\\n\\n  /**\\n   * @notice Adds a string value to the request with a given key name\\n   * @param self The initialized request\\n   * @param key The name of the key\\n   * @param value The string value to add\\n   */\\n  function add(\\n    Request memory self,\\n    string memory key,\\n    string memory value\\n  ) internal pure {\\n    self.buf.encodeString(key);\\n    self.buf.encodeString(value);\\n  }\\n\\n  /**\\n   * @notice Adds a bytes value to the request with a given key name\\n   * @param self The initialized request\\n   * @param key The name of the key\\n   * @param value The bytes value to add\\n   */\\n  function addBytes(\\n    Request memory self,\\n    string memory key,\\n    bytes memory value\\n  ) internal pure {\\n    self.buf.encodeString(key);\\n    self.buf.encodeBytes(value);\\n  }\\n\\n  /**\\n   * @notice Adds a int256 value to the request with a given key name\\n   * @param self The initialized request\\n   * @param key The name of the key\\n   * @param value The int256 value to add\\n   */\\n  function addInt(\\n    Request memory self,\\n    string memory key,\\n    int256 value\\n  ) internal pure {\\n    self.buf.encodeString(key);\\n    self.buf.encodeInt(value);\\n  }\\n\\n  /**\\n   * @notice Adds a uint256 value to the request with a given key name\\n   * @param self The initialized request\\n   * @param key The name of the key\\n   * @param value The uint256 value to add\\n   */\\n  function addUint(\\n    Request memory self,\\n    string memory key,\\n    uint256 value\\n  ) internal pure {\\n    self.buf.encodeString(key);\\n    self.buf.encodeUInt(value);\\n  }\\n\\n  /**\\n   * @notice Adds an array of strings to the request with a given key name\\n   * @param self The initialized request\\n   * @param key The name of the key\\n   * @param values The array of string values to add\\n   */\\n  function addStringArray(\\n    Request memory self,\\n    string memory key,\\n    string[] memory values\\n  ) internal pure {\\n    self.buf.encodeString(key);\\n    self.buf.startArray();\\n    for (uint256 i = 0; i < values.length; i++) {\\n      self.buf.encodeString(values[i]);\\n    }\\n    self.buf.endSequence();\\n  }\\n}\\n\",\"keccak256\":\"0x3e133ddc69d0909fbe338c34b70cbf8dd262c70fd670b3632424c1858de25105\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vendor/BufferChainlink.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev A library for working with mutable byte buffers in Solidity.\\n *\\n * Byte buffers are mutable and expandable, and provide a variety of primitives\\n * for writing to them. At any time you can fetch a bytes object containing the\\n * current contents of the buffer. The bytes object should not be stored between\\n * operations, as it may change due to resizing of the buffer.\\n */\\nlibrary BufferChainlink {\\n  /**\\n   * @dev Represents a mutable buffer. Buffers have a current value (buf) and\\n   *      a capacity. The capacity may be longer than the current value, in\\n   *      which case it can be extended without the need to allocate more memory.\\n   */\\n  struct buffer {\\n    bytes buf;\\n    uint256 capacity;\\n  }\\n\\n  /**\\n   * @dev Initializes a buffer with an initial capacity.\\n   * @param buf The buffer to initialize.\\n   * @param capacity The number of bytes of space to allocate the buffer.\\n   * @return The buffer, for chaining.\\n   */\\n  function init(buffer memory buf, uint256 capacity) internal pure returns (buffer memory) {\\n    if (capacity % 32 != 0) {\\n      capacity += 32 - (capacity % 32);\\n    }\\n    // Allocate space for the buffer data\\n    buf.capacity = capacity;\\n    assembly {\\n      let ptr := mload(0x40)\\n      mstore(buf, ptr)\\n      mstore(ptr, 0)\\n      mstore(0x40, add(32, add(ptr, capacity)))\\n    }\\n    return buf;\\n  }\\n\\n  /**\\n   * @dev Initializes a new buffer from an existing bytes object.\\n   *      Changes to the buffer may mutate the original value.\\n   * @param b The bytes object to initialize the buffer with.\\n   * @return A new buffer.\\n   */\\n  function fromBytes(bytes memory b) internal pure returns (buffer memory) {\\n    buffer memory buf;\\n    buf.buf = b;\\n    buf.capacity = b.length;\\n    return buf;\\n  }\\n\\n  function resize(buffer memory buf, uint256 capacity) private pure {\\n    bytes memory oldbuf = buf.buf;\\n    init(buf, capacity);\\n    append(buf, oldbuf);\\n  }\\n\\n  function max(uint256 a, uint256 b) private pure returns (uint256) {\\n    if (a > b) {\\n      return a;\\n    }\\n    return b;\\n  }\\n\\n  /**\\n   * @dev Sets buffer length to 0.\\n   * @param buf The buffer to truncate.\\n   * @return The original buffer, for chaining..\\n   */\\n  function truncate(buffer memory buf) internal pure returns (buffer memory) {\\n    assembly {\\n      let bufptr := mload(buf)\\n      mstore(bufptr, 0)\\n    }\\n    return buf;\\n  }\\n\\n  /**\\n   * @dev Writes a byte string to a buffer. Resizes if doing so would exceed\\n   *      the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param off The start offset to write to.\\n   * @param data The data to append.\\n   * @param len The number of bytes to copy.\\n   * @return The original buffer, for chaining.\\n   */\\n  function write(\\n    buffer memory buf,\\n    uint256 off,\\n    bytes memory data,\\n    uint256 len\\n  ) internal pure returns (buffer memory) {\\n    require(len <= data.length);\\n\\n    if (off + len > buf.capacity) {\\n      resize(buf, max(buf.capacity, len + off) * 2);\\n    }\\n\\n    uint256 dest;\\n    uint256 src;\\n    assembly {\\n      // Memory address of the buffer data\\n      let bufptr := mload(buf)\\n      // Length of existing buffer data\\n      let buflen := mload(bufptr)\\n      // Start address = buffer address + offset + sizeof(buffer length)\\n      dest := add(add(bufptr, 32), off)\\n      // Update buffer length if we're extending it\\n      if gt(add(len, off), buflen) {\\n        mstore(bufptr, add(len, off))\\n      }\\n      src := add(data, 32)\\n    }\\n\\n    // Copy word-length chunks while possible\\n    for (; len >= 32; len -= 32) {\\n      assembly {\\n        mstore(dest, mload(src))\\n      }\\n      dest += 32;\\n      src += 32;\\n    }\\n\\n    // Copy remaining bytes\\n    unchecked {\\n      uint256 mask = (256**(32 - len)) - 1;\\n      assembly {\\n        let srcpart := and(mload(src), not(mask))\\n        let destpart := and(mload(dest), mask)\\n        mstore(dest, or(destpart, srcpart))\\n      }\\n    }\\n\\n    return buf;\\n  }\\n\\n  /**\\n   * @dev Appends a byte string to a buffer. Resizes if doing so would exceed\\n   *      the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param data The data to append.\\n   * @param len The number of bytes to copy.\\n   * @return The original buffer, for chaining.\\n   */\\n  function append(\\n    buffer memory buf,\\n    bytes memory data,\\n    uint256 len\\n  ) internal pure returns (buffer memory) {\\n    return write(buf, buf.buf.length, data, len);\\n  }\\n\\n  /**\\n   * @dev Appends a byte string to a buffer. Resizes if doing so would exceed\\n   *      the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param data The data to append.\\n   * @return The original buffer, for chaining.\\n   */\\n  function append(buffer memory buf, bytes memory data) internal pure returns (buffer memory) {\\n    return write(buf, buf.buf.length, data, data.length);\\n  }\\n\\n  /**\\n   * @dev Writes a byte to the buffer. Resizes if doing so would exceed the\\n   *      capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param off The offset to write the byte at.\\n   * @param data The data to append.\\n   * @return The original buffer, for chaining.\\n   */\\n  function writeUint8(\\n    buffer memory buf,\\n    uint256 off,\\n    uint8 data\\n  ) internal pure returns (buffer memory) {\\n    if (off >= buf.capacity) {\\n      resize(buf, buf.capacity * 2);\\n    }\\n\\n    assembly {\\n      // Memory address of the buffer data\\n      let bufptr := mload(buf)\\n      // Length of existing buffer data\\n      let buflen := mload(bufptr)\\n      // Address = buffer address + sizeof(buffer length) + off\\n      let dest := add(add(bufptr, off), 32)\\n      mstore8(dest, data)\\n      // Update buffer length if we extended it\\n      if eq(off, buflen) {\\n        mstore(bufptr, add(buflen, 1))\\n      }\\n    }\\n    return buf;\\n  }\\n\\n  /**\\n   * @dev Appends a byte to the buffer. Resizes if doing so would exceed the\\n   *      capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param data The data to append.\\n   * @return The original buffer, for chaining.\\n   */\\n  function appendUint8(buffer memory buf, uint8 data) internal pure returns (buffer memory) {\\n    return writeUint8(buf, buf.buf.length, data);\\n  }\\n\\n  /**\\n   * @dev Writes up to 32 bytes to the buffer. Resizes if doing so would\\n   *      exceed the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param off The offset to write at.\\n   * @param data The data to append.\\n   * @param len The number of bytes to write (left-aligned).\\n   * @return The original buffer, for chaining.\\n   */\\n  function write(\\n    buffer memory buf,\\n    uint256 off,\\n    bytes32 data,\\n    uint256 len\\n  ) private pure returns (buffer memory) {\\n    if (len + off > buf.capacity) {\\n      resize(buf, (len + off) * 2);\\n    }\\n\\n    unchecked {\\n      uint256 mask = (256**len) - 1;\\n      // Right-align data\\n      data = data >> (8 * (32 - len));\\n      assembly {\\n        // Memory address of the buffer data\\n        let bufptr := mload(buf)\\n        // Address = buffer address + sizeof(buffer length) + off + len\\n        let dest := add(add(bufptr, off), len)\\n        mstore(dest, or(and(mload(dest), not(mask)), data))\\n        // Update buffer length if we extended it\\n        if gt(add(off, len), mload(bufptr)) {\\n          mstore(bufptr, add(off, len))\\n        }\\n      }\\n    }\\n    return buf;\\n  }\\n\\n  /**\\n   * @dev Writes a bytes20 to the buffer. Resizes if doing so would exceed the\\n   *      capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param off The offset to write at.\\n   * @param data The data to append.\\n   * @return The original buffer, for chaining.\\n   */\\n  function writeBytes20(\\n    buffer memory buf,\\n    uint256 off,\\n    bytes20 data\\n  ) internal pure returns (buffer memory) {\\n    return write(buf, off, bytes32(data), 20);\\n  }\\n\\n  /**\\n   * @dev Appends a bytes20 to the buffer. Resizes if doing so would exceed\\n   *      the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param data The data to append.\\n   * @return The original buffer, for chhaining.\\n   */\\n  function appendBytes20(buffer memory buf, bytes20 data) internal pure returns (buffer memory) {\\n    return write(buf, buf.buf.length, bytes32(data), 20);\\n  }\\n\\n  /**\\n   * @dev Appends a bytes32 to the buffer. Resizes if doing so would exceed\\n   *      the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param data The data to append.\\n   * @return The original buffer, for chaining.\\n   */\\n  function appendBytes32(buffer memory buf, bytes32 data) internal pure returns (buffer memory) {\\n    return write(buf, buf.buf.length, data, 32);\\n  }\\n\\n  /**\\n   * @dev Writes an integer to the buffer. Resizes if doing so would exceed\\n   *      the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param off The offset to write at.\\n   * @param data The data to append.\\n   * @param len The number of bytes to write (right-aligned).\\n   * @return The original buffer, for chaining.\\n   */\\n  function writeInt(\\n    buffer memory buf,\\n    uint256 off,\\n    uint256 data,\\n    uint256 len\\n  ) private pure returns (buffer memory) {\\n    if (len + off > buf.capacity) {\\n      resize(buf, (len + off) * 2);\\n    }\\n\\n    uint256 mask = (256**len) - 1;\\n    assembly {\\n      // Memory address of the buffer data\\n      let bufptr := mload(buf)\\n      // Address = buffer address + off + sizeof(buffer length) + len\\n      let dest := add(add(bufptr, off), len)\\n      mstore(dest, or(and(mload(dest), not(mask)), data))\\n      // Update buffer length if we extended it\\n      if gt(add(off, len), mload(bufptr)) {\\n        mstore(bufptr, add(off, len))\\n      }\\n    }\\n    return buf;\\n  }\\n\\n  /**\\n   * @dev Appends a byte to the end of the buffer. Resizes if doing so would\\n   * exceed the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param data The data to append.\\n   * @return The original buffer.\\n   */\\n  function appendInt(\\n    buffer memory buf,\\n    uint256 data,\\n    uint256 len\\n  ) internal pure returns (buffer memory) {\\n    return writeInt(buf, buf.buf.length, data, len);\\n  }\\n}\\n\",\"keccak256\":\"0x89388a631c16ad993e4d76d8d19e08ae98e1397f5dfdfb5f9c0b91015df4cf5d\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vendor/CBORChainlink.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.4.19;\\n\\nimport {BufferChainlink} from \\\"./BufferChainlink.sol\\\";\\n\\nlibrary CBORChainlink {\\n  using BufferChainlink for BufferChainlink.buffer;\\n\\n  uint8 private constant MAJOR_TYPE_INT = 0;\\n  uint8 private constant MAJOR_TYPE_NEGATIVE_INT = 1;\\n  uint8 private constant MAJOR_TYPE_BYTES = 2;\\n  uint8 private constant MAJOR_TYPE_STRING = 3;\\n  uint8 private constant MAJOR_TYPE_ARRAY = 4;\\n  uint8 private constant MAJOR_TYPE_MAP = 5;\\n  uint8 private constant MAJOR_TYPE_TAG = 6;\\n  uint8 private constant MAJOR_TYPE_CONTENT_FREE = 7;\\n\\n  uint8 private constant TAG_TYPE_BIGNUM = 2;\\n  uint8 private constant TAG_TYPE_NEGATIVE_BIGNUM = 3;\\n\\n  function encodeFixedNumeric(BufferChainlink.buffer memory buf, uint8 major, uint64 value) private pure {\\n    if(value <= 23) {\\n      buf.appendUint8(uint8((major << 5) | value));\\n    } else if (value <= 0xFF) {\\n      buf.appendUint8(uint8((major << 5) | 24));\\n      buf.appendInt(value, 1);\\n    } else if (value <= 0xFFFF) {\\n      buf.appendUint8(uint8((major << 5) | 25));\\n      buf.appendInt(value, 2);\\n    } else if (value <= 0xFFFFFFFF) {\\n      buf.appendUint8(uint8((major << 5) | 26));\\n      buf.appendInt(value, 4);\\n    } else {\\n      buf.appendUint8(uint8((major << 5) | 27));\\n      buf.appendInt(value, 8);\\n    }\\n  }\\n\\n  function encodeIndefiniteLengthType(BufferChainlink.buffer memory buf, uint8 major) private pure {\\n    buf.appendUint8(uint8((major << 5) | 31));\\n  }\\n\\n  function encodeUInt(BufferChainlink.buffer memory buf, uint value) internal pure {\\n    if(value > 0xFFFFFFFFFFFFFFFF) {\\n      encodeBigNum(buf, value);\\n    } else {\\n      encodeFixedNumeric(buf, MAJOR_TYPE_INT, uint64(value));\\n    }\\n  }\\n\\n  function encodeInt(BufferChainlink.buffer memory buf, int value) internal pure {\\n    if(value < -0x10000000000000000) {\\n      encodeSignedBigNum(buf, value);\\n    } else if(value > 0xFFFFFFFFFFFFFFFF) {\\n      encodeBigNum(buf, uint(value));\\n    } else if(value >= 0) {\\n      encodeFixedNumeric(buf, MAJOR_TYPE_INT, uint64(uint256(value)));\\n    } else {\\n      encodeFixedNumeric(buf, MAJOR_TYPE_NEGATIVE_INT, uint64(uint256(-1 - value)));\\n    }\\n  }\\n\\n  function encodeBytes(BufferChainlink.buffer memory buf, bytes memory value) internal pure {\\n    encodeFixedNumeric(buf, MAJOR_TYPE_BYTES, uint64(value.length));\\n    buf.append(value);\\n  }\\n\\n  function encodeBigNum(BufferChainlink.buffer memory buf, uint value) internal pure {\\n    buf.appendUint8(uint8((MAJOR_TYPE_TAG << 5) | TAG_TYPE_BIGNUM));\\n    encodeBytes(buf, abi.encode(value));\\n  }\\n\\n  function encodeSignedBigNum(BufferChainlink.buffer memory buf, int input) internal pure {\\n    buf.appendUint8(uint8((MAJOR_TYPE_TAG << 5) | TAG_TYPE_NEGATIVE_BIGNUM));\\n    encodeBytes(buf, abi.encode(uint256(-1 - input)));\\n  }\\n\\n  function encodeString(BufferChainlink.buffer memory buf, string memory value) internal pure {\\n    encodeFixedNumeric(buf, MAJOR_TYPE_STRING, uint64(bytes(value).length));\\n    buf.append(bytes(value));\\n  }\\n\\n  function startArray(BufferChainlink.buffer memory buf) internal pure {\\n    encodeIndefiniteLengthType(buf, MAJOR_TYPE_ARRAY);\\n  }\\n\\n  function startMap(BufferChainlink.buffer memory buf) internal pure {\\n    encodeIndefiniteLengthType(buf, MAJOR_TYPE_MAP);\\n  }\\n\\n  function endSequence(BufferChainlink.buffer memory buf) internal pure {\\n    encodeIndefiniteLengthType(buf, MAJOR_TYPE_CONTENT_FREE);\\n  }\\n}\\n\",\"keccak256\":\"0x08bda450d4dc1d17147fd29810234d35e2c437f1a99be733cfa7ee516db08a48\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/ChainlinkClient.sol":{"ChainlinkClient":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"ChainlinkCancelled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"ChainlinkFulfilled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"ChainlinkRequested","type":"event"}],"devdoc":{"kind":"dev","methods":{},"title":"The ChainlinkClient contract","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"ChainlinkCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"ChainlinkFulfilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"ChainlinkRequested\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"The ChainlinkClient contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contract writers can inherit this contract in order to create requests for the Chainlink network\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/ChainlinkClient.sol\":\"ChainlinkClient\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/Chainlink.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {CBORChainlink} from \\\"./vendor/CBORChainlink.sol\\\";\\nimport {BufferChainlink} from \\\"./vendor/BufferChainlink.sol\\\";\\n\\n/**\\n * @title Library for common Chainlink functions\\n * @dev Uses imported CBOR library for encoding to buffer\\n */\\nlibrary Chainlink {\\n  uint256 internal constant defaultBufferSize = 256; // solhint-disable-line const-name-snakecase\\n\\n  using CBORChainlink for BufferChainlink.buffer;\\n\\n  struct Request {\\n    bytes32 id;\\n    address callbackAddress;\\n    bytes4 callbackFunctionId;\\n    uint256 nonce;\\n    BufferChainlink.buffer buf;\\n  }\\n\\n  /**\\n   * @notice Initializes a Chainlink request\\n   * @dev Sets the ID, callback address, and callback function signature on the request\\n   * @param self The uninitialized request\\n   * @param jobId The Job Specification ID\\n   * @param callbackAddr The callback address\\n   * @param callbackFunc The callback function signature\\n   * @return The initialized request\\n   */\\n  function initialize(\\n    Request memory self,\\n    bytes32 jobId,\\n    address callbackAddr,\\n    bytes4 callbackFunc\\n  ) internal pure returns (Chainlink.Request memory) {\\n    BufferChainlink.init(self.buf, defaultBufferSize);\\n    self.id = jobId;\\n    self.callbackAddress = callbackAddr;\\n    self.callbackFunctionId = callbackFunc;\\n    return self;\\n  }\\n\\n  /**\\n   * @notice Sets the data for the buffer without encoding CBOR on-chain\\n   * @dev CBOR can be closed with curly-brackets {} or they can be left off\\n   * @param self The initialized request\\n   * @param data The CBOR data\\n   */\\n  function setBuffer(Request memory self, bytes memory data) internal pure {\\n    BufferChainlink.init(self.buf, data.length);\\n    BufferChainlink.append(self.buf, data);\\n  }\\n\\n  /**\\n   * @notice Adds a string value to the request with a given key name\\n   * @param self The initialized request\\n   * @param key The name of the key\\n   * @param value The string value to add\\n   */\\n  function add(\\n    Request memory self,\\n    string memory key,\\n    string memory value\\n  ) internal pure {\\n    self.buf.encodeString(key);\\n    self.buf.encodeString(value);\\n  }\\n\\n  /**\\n   * @notice Adds a bytes value to the request with a given key name\\n   * @param self The initialized request\\n   * @param key The name of the key\\n   * @param value The bytes value to add\\n   */\\n  function addBytes(\\n    Request memory self,\\n    string memory key,\\n    bytes memory value\\n  ) internal pure {\\n    self.buf.encodeString(key);\\n    self.buf.encodeBytes(value);\\n  }\\n\\n  /**\\n   * @notice Adds a int256 value to the request with a given key name\\n   * @param self The initialized request\\n   * @param key The name of the key\\n   * @param value The int256 value to add\\n   */\\n  function addInt(\\n    Request memory self,\\n    string memory key,\\n    int256 value\\n  ) internal pure {\\n    self.buf.encodeString(key);\\n    self.buf.encodeInt(value);\\n  }\\n\\n  /**\\n   * @notice Adds a uint256 value to the request with a given key name\\n   * @param self The initialized request\\n   * @param key The name of the key\\n   * @param value The uint256 value to add\\n   */\\n  function addUint(\\n    Request memory self,\\n    string memory key,\\n    uint256 value\\n  ) internal pure {\\n    self.buf.encodeString(key);\\n    self.buf.encodeUInt(value);\\n  }\\n\\n  /**\\n   * @notice Adds an array of strings to the request with a given key name\\n   * @param self The initialized request\\n   * @param key The name of the key\\n   * @param values The array of string values to add\\n   */\\n  function addStringArray(\\n    Request memory self,\\n    string memory key,\\n    string[] memory values\\n  ) internal pure {\\n    self.buf.encodeString(key);\\n    self.buf.startArray();\\n    for (uint256 i = 0; i < values.length; i++) {\\n      self.buf.encodeString(values[i]);\\n    }\\n    self.buf.endSequence();\\n  }\\n}\\n\",\"keccak256\":\"0x3e133ddc69d0909fbe338c34b70cbf8dd262c70fd670b3632424c1858de25105\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/ChainlinkClient.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./Chainlink.sol\\\";\\nimport \\\"./interfaces/ENSInterface.sol\\\";\\nimport \\\"./interfaces/LinkTokenInterface.sol\\\";\\nimport \\\"./interfaces/ChainlinkRequestInterface.sol\\\";\\nimport \\\"./interfaces/OperatorInterface.sol\\\";\\nimport \\\"./interfaces/PointerInterface.sol\\\";\\nimport {ENSResolver as ENSResolver_Chainlink} from \\\"./vendor/ENSResolver.sol\\\";\\n\\n/**\\n * @title The ChainlinkClient contract\\n * @notice Contract writers can inherit this contract in order to create requests for the\\n * Chainlink network\\n */\\nabstract contract ChainlinkClient {\\n  using Chainlink for Chainlink.Request;\\n\\n  uint256 internal constant LINK_DIVISIBILITY = 10**18;\\n  uint256 private constant AMOUNT_OVERRIDE = 0;\\n  address private constant SENDER_OVERRIDE = address(0);\\n  uint256 private constant ORACLE_ARGS_VERSION = 1;\\n  uint256 private constant OPERATOR_ARGS_VERSION = 2;\\n  bytes32 private constant ENS_TOKEN_SUBNAME = keccak256(\\\"link\\\");\\n  bytes32 private constant ENS_ORACLE_SUBNAME = keccak256(\\\"oracle\\\");\\n  address private constant LINK_TOKEN_POINTER = 0xC89bD4E1632D3A43CB03AAAd5262cbe4038Bc571;\\n\\n  ENSInterface private s_ens;\\n  bytes32 private s_ensNode;\\n  LinkTokenInterface private s_link;\\n  OperatorInterface private s_oracle;\\n  uint256 private s_requestCount = 1;\\n  mapping(bytes32 => address) private s_pendingRequests;\\n\\n  event ChainlinkRequested(bytes32 indexed id);\\n  event ChainlinkFulfilled(bytes32 indexed id);\\n  event ChainlinkCancelled(bytes32 indexed id);\\n\\n  /**\\n   * @notice Creates a request that can hold additional parameters\\n   * @param specId The Job Specification ID that the request will be created for\\n   * @param callbackAddr address to operate the callback on\\n   * @param callbackFunctionSignature function signature to use for the callback\\n   * @return A Chainlink Request struct in memory\\n   */\\n  function buildChainlinkRequest(\\n    bytes32 specId,\\n    address callbackAddr,\\n    bytes4 callbackFunctionSignature\\n  ) internal pure returns (Chainlink.Request memory) {\\n    Chainlink.Request memory req;\\n    return req.initialize(specId, callbackAddr, callbackFunctionSignature);\\n  }\\n\\n  /**\\n   * @notice Creates a request that can hold additional parameters\\n   * @param specId The Job Specification ID that the request will be created for\\n   * @param callbackFunctionSignature function signature to use for the callback\\n   * @return A Chainlink Request struct in memory\\n   */\\n  function buildOperatorRequest(bytes32 specId, bytes4 callbackFunctionSignature)\\n    internal\\n    view\\n    returns (Chainlink.Request memory)\\n  {\\n    Chainlink.Request memory req;\\n    return req.initialize(specId, address(this), callbackFunctionSignature);\\n  }\\n\\n  /**\\n   * @notice Creates a Chainlink request to the stored oracle address\\n   * @dev Calls `chainlinkRequestTo` with the stored oracle address\\n   * @param req The initialized Chainlink Request\\n   * @param payment The amount of LINK to send for the request\\n   * @return requestId The request ID\\n   */\\n  function sendChainlinkRequest(Chainlink.Request memory req, uint256 payment) internal returns (bytes32) {\\n    return sendChainlinkRequestTo(address(s_oracle), req, payment);\\n  }\\n\\n  /**\\n   * @notice Creates a Chainlink request to the specified oracle address\\n   * @dev Generates and stores a request ID, increments the local nonce, and uses `transferAndCall` to\\n   * send LINK which creates a request on the target oracle contract.\\n   * Emits ChainlinkRequested event.\\n   * @param oracleAddress The address of the oracle for the request\\n   * @param req The initialized Chainlink Request\\n   * @param payment The amount of LINK to send for the request\\n   * @return requestId The request ID\\n   */\\n  function sendChainlinkRequestTo(\\n    address oracleAddress,\\n    Chainlink.Request memory req,\\n    uint256 payment\\n  ) internal returns (bytes32 requestId) {\\n    uint256 nonce = s_requestCount;\\n    s_requestCount = nonce + 1;\\n    bytes memory encodedRequest = abi.encodeWithSelector(\\n      ChainlinkRequestInterface.oracleRequest.selector,\\n      SENDER_OVERRIDE, // Sender value - overridden by onTokenTransfer by the requesting contract's address\\n      AMOUNT_OVERRIDE, // Amount value - overridden by onTokenTransfer by the actual amount of LINK sent\\n      req.id,\\n      address(this),\\n      req.callbackFunctionId,\\n      nonce,\\n      ORACLE_ARGS_VERSION,\\n      req.buf.buf\\n    );\\n    return _rawRequest(oracleAddress, nonce, payment, encodedRequest);\\n  }\\n\\n  /**\\n   * @notice Creates a Chainlink request to the stored oracle address\\n   * @dev This function supports multi-word response\\n   * @dev Calls `sendOperatorRequestTo` with the stored oracle address\\n   * @param req The initialized Chainlink Request\\n   * @param payment The amount of LINK to send for the request\\n   * @return requestId The request ID\\n   */\\n  function sendOperatorRequest(Chainlink.Request memory req, uint256 payment) internal returns (bytes32) {\\n    return sendOperatorRequestTo(address(s_oracle), req, payment);\\n  }\\n\\n  /**\\n   * @notice Creates a Chainlink request to the specified oracle address\\n   * @dev This function supports multi-word response\\n   * @dev Generates and stores a request ID, increments the local nonce, and uses `transferAndCall` to\\n   * send LINK which creates a request on the target oracle contract.\\n   * Emits ChainlinkRequested event.\\n   * @param oracleAddress The address of the oracle for the request\\n   * @param req The initialized Chainlink Request\\n   * @param payment The amount of LINK to send for the request\\n   * @return requestId The request ID\\n   */\\n  function sendOperatorRequestTo(\\n    address oracleAddress,\\n    Chainlink.Request memory req,\\n    uint256 payment\\n  ) internal returns (bytes32 requestId) {\\n    uint256 nonce = s_requestCount;\\n    s_requestCount = nonce + 1;\\n    bytes memory encodedRequest = abi.encodeWithSelector(\\n      OperatorInterface.operatorRequest.selector,\\n      SENDER_OVERRIDE, // Sender value - overridden by onTokenTransfer by the requesting contract's address\\n      AMOUNT_OVERRIDE, // Amount value - overridden by onTokenTransfer by the actual amount of LINK sent\\n      req.id,\\n      req.callbackFunctionId,\\n      nonce,\\n      OPERATOR_ARGS_VERSION,\\n      req.buf.buf\\n    );\\n    return _rawRequest(oracleAddress, nonce, payment, encodedRequest);\\n  }\\n\\n  /**\\n   * @notice Make a request to an oracle\\n   * @param oracleAddress The address of the oracle for the request\\n   * @param nonce used to generate the request ID\\n   * @param payment The amount of LINK to send for the request\\n   * @param encodedRequest data encoded for request type specific format\\n   * @return requestId The request ID\\n   */\\n  function _rawRequest(\\n    address oracleAddress,\\n    uint256 nonce,\\n    uint256 payment,\\n    bytes memory encodedRequest\\n  ) private returns (bytes32 requestId) {\\n    requestId = keccak256(abi.encodePacked(this, nonce));\\n    s_pendingRequests[requestId] = oracleAddress;\\n    emit ChainlinkRequested(requestId);\\n    require(s_link.transferAndCall(oracleAddress, payment, encodedRequest), \\\"unable to transferAndCall to oracle\\\");\\n  }\\n\\n  /**\\n   * @notice Allows a request to be cancelled if it has not been fulfilled\\n   * @dev Requires keeping track of the expiration value emitted from the oracle contract.\\n   * Deletes the request from the `pendingRequests` mapping.\\n   * Emits ChainlinkCancelled event.\\n   * @param requestId The request ID\\n   * @param payment The amount of LINK sent for the request\\n   * @param callbackFunc The callback function specified for the request\\n   * @param expiration The time of the expiration for the request\\n   */\\n  function cancelChainlinkRequest(\\n    bytes32 requestId,\\n    uint256 payment,\\n    bytes4 callbackFunc,\\n    uint256 expiration\\n  ) internal {\\n    OperatorInterface requested = OperatorInterface(s_pendingRequests[requestId]);\\n    delete s_pendingRequests[requestId];\\n    emit ChainlinkCancelled(requestId);\\n    requested.cancelOracleRequest(requestId, payment, callbackFunc, expiration);\\n  }\\n\\n  /**\\n   * @notice the next request count to be used in generating a nonce\\n   * @dev starts at 1 in order to ensure consistent gas cost\\n   * @return returns the next request count to be used in a nonce\\n   */\\n  function getNextRequestCount() internal view returns (uint256) {\\n    return s_requestCount;\\n  }\\n\\n  /**\\n   * @notice Sets the stored oracle address\\n   * @param oracleAddress The address of the oracle contract\\n   */\\n  function setChainlinkOracle(address oracleAddress) internal {\\n    s_oracle = OperatorInterface(oracleAddress);\\n  }\\n\\n  /**\\n   * @notice Sets the LINK token address\\n   * @param linkAddress The address of the LINK token contract\\n   */\\n  function setChainlinkToken(address linkAddress) internal {\\n    s_link = LinkTokenInterface(linkAddress);\\n  }\\n\\n  /**\\n   * @notice Sets the Chainlink token address for the public\\n   * network as given by the Pointer contract\\n   */\\n  function setPublicChainlinkToken() internal {\\n    setChainlinkToken(PointerInterface(LINK_TOKEN_POINTER).getAddress());\\n  }\\n\\n  /**\\n   * @notice Retrieves the stored address of the LINK token\\n   * @return The address of the LINK token\\n   */\\n  function chainlinkTokenAddress() internal view returns (address) {\\n    return address(s_link);\\n  }\\n\\n  /**\\n   * @notice Retrieves the stored address of the oracle contract\\n   * @return The address of the oracle contract\\n   */\\n  function chainlinkOracleAddress() internal view returns (address) {\\n    return address(s_oracle);\\n  }\\n\\n  /**\\n   * @notice Allows for a request which was created on another contract to be fulfilled\\n   * on this contract\\n   * @param oracleAddress The address of the oracle contract that will fulfill the request\\n   * @param requestId The request ID used for the response\\n   */\\n  function addChainlinkExternalRequest(address oracleAddress, bytes32 requestId) internal notPendingRequest(requestId) {\\n    s_pendingRequests[requestId] = oracleAddress;\\n  }\\n\\n  /**\\n   * @notice Sets the stored oracle and LINK token contracts with the addresses resolved by ENS\\n   * @dev Accounts for subnodes having different resolvers\\n   * @param ensAddress The address of the ENS contract\\n   * @param node The ENS node hash\\n   */\\n  function useChainlinkWithENS(address ensAddress, bytes32 node) internal {\\n    s_ens = ENSInterface(ensAddress);\\n    s_ensNode = node;\\n    bytes32 linkSubnode = keccak256(abi.encodePacked(s_ensNode, ENS_TOKEN_SUBNAME));\\n    ENSResolver_Chainlink resolver = ENSResolver_Chainlink(s_ens.resolver(linkSubnode));\\n    setChainlinkToken(resolver.addr(linkSubnode));\\n    updateChainlinkOracleWithENS();\\n  }\\n\\n  /**\\n   * @notice Sets the stored oracle contract with the address resolved by ENS\\n   * @dev This may be called on its own as long as `useChainlinkWithENS` has been called previously\\n   */\\n  function updateChainlinkOracleWithENS() internal {\\n    bytes32 oracleSubnode = keccak256(abi.encodePacked(s_ensNode, ENS_ORACLE_SUBNAME));\\n    ENSResolver_Chainlink resolver = ENSResolver_Chainlink(s_ens.resolver(oracleSubnode));\\n    setChainlinkOracle(resolver.addr(oracleSubnode));\\n  }\\n\\n  /**\\n   * @notice Ensures that the fulfillment is valid for this contract\\n   * @dev Use if the contract developer prefers methods instead of modifiers for validation\\n   * @param requestId The request ID for fulfillment\\n   */\\n  function validateChainlinkCallback(bytes32 requestId)\\n    internal\\n    recordChainlinkFulfillment(requestId)\\n  // solhint-disable-next-line no-empty-blocks\\n  {\\n\\n  }\\n\\n  /**\\n   * @dev Reverts if the sender is not the oracle of the request.\\n   * Emits ChainlinkFulfilled event.\\n   * @param requestId The request ID for fulfillment\\n   */\\n  modifier recordChainlinkFulfillment(bytes32 requestId) {\\n    require(msg.sender == s_pendingRequests[requestId], \\\"Source must be the oracle of the request\\\");\\n    delete s_pendingRequests[requestId];\\n    emit ChainlinkFulfilled(requestId);\\n    _;\\n  }\\n\\n  /**\\n   * @dev Reverts if the request is already pending\\n   * @param requestId The request ID for fulfillment\\n   */\\n  modifier notPendingRequest(bytes32 requestId) {\\n    require(s_pendingRequests[requestId] == address(0), \\\"Request is already pending\\\");\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0xa221ccfa4763977cc78c57e3a83d47f5aaf7c15535a2c20dba5f46af80fb3bd7\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/ChainlinkRequestInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface ChainlinkRequestInterface {\\n  function oracleRequest(\\n    address sender,\\n    uint256 requestPrice,\\n    bytes32 serviceAgreementID,\\n    address callbackAddress,\\n    bytes4 callbackFunctionId,\\n    uint256 nonce,\\n    uint256 dataVersion,\\n    bytes calldata data\\n  ) external;\\n\\n  function cancelOracleRequest(\\n    bytes32 requestId,\\n    uint256 payment,\\n    bytes4 callbackFunctionId,\\n    uint256 expiration\\n  ) external;\\n}\\n\",\"keccak256\":\"0xa8adfbd0326c982c38ea3808a4da52f0a51807241787c4bd28235bbe86707c04\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/ENSInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface ENSInterface {\\n  // Logged when the owner of a node assigns a new owner to a subnode.\\n  event NewOwner(bytes32 indexed node, bytes32 indexed label, address owner);\\n\\n  // Logged when the owner of a node transfers ownership to a new account.\\n  event Transfer(bytes32 indexed node, address owner);\\n\\n  // Logged when the resolver for a node changes.\\n  event NewResolver(bytes32 indexed node, address resolver);\\n\\n  // Logged when the TTL of a node changes\\n  event NewTTL(bytes32 indexed node, uint64 ttl);\\n\\n  function setSubnodeOwner(\\n    bytes32 node,\\n    bytes32 label,\\n    address owner\\n  ) external;\\n\\n  function setResolver(bytes32 node, address resolver) external;\\n\\n  function setOwner(bytes32 node, address owner) external;\\n\\n  function setTTL(bytes32 node, uint64 ttl) external;\\n\\n  function owner(bytes32 node) external view returns (address);\\n\\n  function resolver(bytes32 node) external view returns (address);\\n\\n  function ttl(bytes32 node) external view returns (uint64);\\n}\\n\",\"keccak256\":\"0xe51365458d82233a55f5ad4492a3b6bf56332d21cad6b0a5f21b8a026fcfd6d0\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface LinkTokenInterface {\\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\\n\\n  function approve(address spender, uint256 value) external returns (bool success);\\n\\n  function balanceOf(address owner) external view returns (uint256 balance);\\n\\n  function decimals() external view returns (uint8 decimalPlaces);\\n\\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\\n\\n  function increaseApproval(address spender, uint256 subtractedValue) external;\\n\\n  function name() external view returns (string memory tokenName);\\n\\n  function symbol() external view returns (string memory tokenSymbol);\\n\\n  function totalSupply() external view returns (uint256 totalTokensIssued);\\n\\n  function transfer(address to, uint256 value) external returns (bool success);\\n\\n  function transferAndCall(\\n    address to,\\n    uint256 value,\\n    bytes calldata data\\n  ) external returns (bool success);\\n\\n  function transferFrom(\\n    address from,\\n    address to,\\n    uint256 value\\n  ) external returns (bool success);\\n}\\n\",\"keccak256\":\"0xc7d7cd730d36825485ef4107d93c3ff18b9f3a5a00ea3d5988ba9a0bd70b10c5\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/OperatorInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./OracleInterface.sol\\\";\\nimport \\\"./ChainlinkRequestInterface.sol\\\";\\n\\ninterface OperatorInterface is OracleInterface, ChainlinkRequestInterface {\\n  function operatorRequest(\\n    address sender,\\n    uint256 payment,\\n    bytes32 specId,\\n    bytes4 callbackFunctionId,\\n    uint256 nonce,\\n    uint256 dataVersion,\\n    bytes calldata data\\n  ) external;\\n\\n  function fulfillOracleRequest2(\\n    bytes32 requestId,\\n    uint256 payment,\\n    address callbackAddress,\\n    bytes4 callbackFunctionId,\\n    uint256 expiration,\\n    bytes calldata data\\n  ) external returns (bool);\\n\\n  function ownerTransferAndCall(\\n    address to,\\n    uint256 value,\\n    bytes calldata data\\n  ) external returns (bool success);\\n\\n  function distributeFunds(address payable[] calldata receivers, uint256[] calldata amounts) external payable;\\n\\n  function getAuthorizedSenders() external returns (address[] memory);\\n\\n  function setAuthorizedSenders(address[] calldata senders) external;\\n\\n  function getForwarder() external returns (address);\\n}\\n\",\"keccak256\":\"0x79a7c77b8f87be6ef02a566765077ed599724b060a209f34f8907eec5615da68\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/OracleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface OracleInterface {\\n  function fulfillOracleRequest(\\n    bytes32 requestId,\\n    uint256 payment,\\n    address callbackAddress,\\n    bytes4 callbackFunctionId,\\n    uint256 expiration,\\n    bytes32 data\\n  ) external returns (bool);\\n\\n  function isAuthorizedSender(address node) external view returns (bool);\\n\\n  function withdraw(address recipient, uint256 amount) external;\\n\\n  function withdrawable() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x3a86242e005bad9daf1b4794399a81ba373069355f38c8a07b58e57abc32513a\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/PointerInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface PointerInterface {\\n  function getAddress() external view returns (address);\\n}\\n\",\"keccak256\":\"0x42e5d62984f9d57bab7e32b2c6e3af86f4feb232ea2af6c822032fae88203bd7\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vendor/BufferChainlink.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev A library for working with mutable byte buffers in Solidity.\\n *\\n * Byte buffers are mutable and expandable, and provide a variety of primitives\\n * for writing to them. At any time you can fetch a bytes object containing the\\n * current contents of the buffer. The bytes object should not be stored between\\n * operations, as it may change due to resizing of the buffer.\\n */\\nlibrary BufferChainlink {\\n  /**\\n   * @dev Represents a mutable buffer. Buffers have a current value (buf) and\\n   *      a capacity. The capacity may be longer than the current value, in\\n   *      which case it can be extended without the need to allocate more memory.\\n   */\\n  struct buffer {\\n    bytes buf;\\n    uint256 capacity;\\n  }\\n\\n  /**\\n   * @dev Initializes a buffer with an initial capacity.\\n   * @param buf The buffer to initialize.\\n   * @param capacity The number of bytes of space to allocate the buffer.\\n   * @return The buffer, for chaining.\\n   */\\n  function init(buffer memory buf, uint256 capacity) internal pure returns (buffer memory) {\\n    if (capacity % 32 != 0) {\\n      capacity += 32 - (capacity % 32);\\n    }\\n    // Allocate space for the buffer data\\n    buf.capacity = capacity;\\n    assembly {\\n      let ptr := mload(0x40)\\n      mstore(buf, ptr)\\n      mstore(ptr, 0)\\n      mstore(0x40, add(32, add(ptr, capacity)))\\n    }\\n    return buf;\\n  }\\n\\n  /**\\n   * @dev Initializes a new buffer from an existing bytes object.\\n   *      Changes to the buffer may mutate the original value.\\n   * @param b The bytes object to initialize the buffer with.\\n   * @return A new buffer.\\n   */\\n  function fromBytes(bytes memory b) internal pure returns (buffer memory) {\\n    buffer memory buf;\\n    buf.buf = b;\\n    buf.capacity = b.length;\\n    return buf;\\n  }\\n\\n  function resize(buffer memory buf, uint256 capacity) private pure {\\n    bytes memory oldbuf = buf.buf;\\n    init(buf, capacity);\\n    append(buf, oldbuf);\\n  }\\n\\n  function max(uint256 a, uint256 b) private pure returns (uint256) {\\n    if (a > b) {\\n      return a;\\n    }\\n    return b;\\n  }\\n\\n  /**\\n   * @dev Sets buffer length to 0.\\n   * @param buf The buffer to truncate.\\n   * @return The original buffer, for chaining..\\n   */\\n  function truncate(buffer memory buf) internal pure returns (buffer memory) {\\n    assembly {\\n      let bufptr := mload(buf)\\n      mstore(bufptr, 0)\\n    }\\n    return buf;\\n  }\\n\\n  /**\\n   * @dev Writes a byte string to a buffer. Resizes if doing so would exceed\\n   *      the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param off The start offset to write to.\\n   * @param data The data to append.\\n   * @param len The number of bytes to copy.\\n   * @return The original buffer, for chaining.\\n   */\\n  function write(\\n    buffer memory buf,\\n    uint256 off,\\n    bytes memory data,\\n    uint256 len\\n  ) internal pure returns (buffer memory) {\\n    require(len <= data.length);\\n\\n    if (off + len > buf.capacity) {\\n      resize(buf, max(buf.capacity, len + off) * 2);\\n    }\\n\\n    uint256 dest;\\n    uint256 src;\\n    assembly {\\n      // Memory address of the buffer data\\n      let bufptr := mload(buf)\\n      // Length of existing buffer data\\n      let buflen := mload(bufptr)\\n      // Start address = buffer address + offset + sizeof(buffer length)\\n      dest := add(add(bufptr, 32), off)\\n      // Update buffer length if we're extending it\\n      if gt(add(len, off), buflen) {\\n        mstore(bufptr, add(len, off))\\n      }\\n      src := add(data, 32)\\n    }\\n\\n    // Copy word-length chunks while possible\\n    for (; len >= 32; len -= 32) {\\n      assembly {\\n        mstore(dest, mload(src))\\n      }\\n      dest += 32;\\n      src += 32;\\n    }\\n\\n    // Copy remaining bytes\\n    unchecked {\\n      uint256 mask = (256**(32 - len)) - 1;\\n      assembly {\\n        let srcpart := and(mload(src), not(mask))\\n        let destpart := and(mload(dest), mask)\\n        mstore(dest, or(destpart, srcpart))\\n      }\\n    }\\n\\n    return buf;\\n  }\\n\\n  /**\\n   * @dev Appends a byte string to a buffer. Resizes if doing so would exceed\\n   *      the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param data The data to append.\\n   * @param len The number of bytes to copy.\\n   * @return The original buffer, for chaining.\\n   */\\n  function append(\\n    buffer memory buf,\\n    bytes memory data,\\n    uint256 len\\n  ) internal pure returns (buffer memory) {\\n    return write(buf, buf.buf.length, data, len);\\n  }\\n\\n  /**\\n   * @dev Appends a byte string to a buffer. Resizes if doing so would exceed\\n   *      the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param data The data to append.\\n   * @return The original buffer, for chaining.\\n   */\\n  function append(buffer memory buf, bytes memory data) internal pure returns (buffer memory) {\\n    return write(buf, buf.buf.length, data, data.length);\\n  }\\n\\n  /**\\n   * @dev Writes a byte to the buffer. Resizes if doing so would exceed the\\n   *      capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param off The offset to write the byte at.\\n   * @param data The data to append.\\n   * @return The original buffer, for chaining.\\n   */\\n  function writeUint8(\\n    buffer memory buf,\\n    uint256 off,\\n    uint8 data\\n  ) internal pure returns (buffer memory) {\\n    if (off >= buf.capacity) {\\n      resize(buf, buf.capacity * 2);\\n    }\\n\\n    assembly {\\n      // Memory address of the buffer data\\n      let bufptr := mload(buf)\\n      // Length of existing buffer data\\n      let buflen := mload(bufptr)\\n      // Address = buffer address + sizeof(buffer length) + off\\n      let dest := add(add(bufptr, off), 32)\\n      mstore8(dest, data)\\n      // Update buffer length if we extended it\\n      if eq(off, buflen) {\\n        mstore(bufptr, add(buflen, 1))\\n      }\\n    }\\n    return buf;\\n  }\\n\\n  /**\\n   * @dev Appends a byte to the buffer. Resizes if doing so would exceed the\\n   *      capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param data The data to append.\\n   * @return The original buffer, for chaining.\\n   */\\n  function appendUint8(buffer memory buf, uint8 data) internal pure returns (buffer memory) {\\n    return writeUint8(buf, buf.buf.length, data);\\n  }\\n\\n  /**\\n   * @dev Writes up to 32 bytes to the buffer. Resizes if doing so would\\n   *      exceed the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param off The offset to write at.\\n   * @param data The data to append.\\n   * @param len The number of bytes to write (left-aligned).\\n   * @return The original buffer, for chaining.\\n   */\\n  function write(\\n    buffer memory buf,\\n    uint256 off,\\n    bytes32 data,\\n    uint256 len\\n  ) private pure returns (buffer memory) {\\n    if (len + off > buf.capacity) {\\n      resize(buf, (len + off) * 2);\\n    }\\n\\n    unchecked {\\n      uint256 mask = (256**len) - 1;\\n      // Right-align data\\n      data = data >> (8 * (32 - len));\\n      assembly {\\n        // Memory address of the buffer data\\n        let bufptr := mload(buf)\\n        // Address = buffer address + sizeof(buffer length) + off + len\\n        let dest := add(add(bufptr, off), len)\\n        mstore(dest, or(and(mload(dest), not(mask)), data))\\n        // Update buffer length if we extended it\\n        if gt(add(off, len), mload(bufptr)) {\\n          mstore(bufptr, add(off, len))\\n        }\\n      }\\n    }\\n    return buf;\\n  }\\n\\n  /**\\n   * @dev Writes a bytes20 to the buffer. Resizes if doing so would exceed the\\n   *      capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param off The offset to write at.\\n   * @param data The data to append.\\n   * @return The original buffer, for chaining.\\n   */\\n  function writeBytes20(\\n    buffer memory buf,\\n    uint256 off,\\n    bytes20 data\\n  ) internal pure returns (buffer memory) {\\n    return write(buf, off, bytes32(data), 20);\\n  }\\n\\n  /**\\n   * @dev Appends a bytes20 to the buffer. Resizes if doing so would exceed\\n   *      the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param data The data to append.\\n   * @return The original buffer, for chhaining.\\n   */\\n  function appendBytes20(buffer memory buf, bytes20 data) internal pure returns (buffer memory) {\\n    return write(buf, buf.buf.length, bytes32(data), 20);\\n  }\\n\\n  /**\\n   * @dev Appends a bytes32 to the buffer. Resizes if doing so would exceed\\n   *      the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param data The data to append.\\n   * @return The original buffer, for chaining.\\n   */\\n  function appendBytes32(buffer memory buf, bytes32 data) internal pure returns (buffer memory) {\\n    return write(buf, buf.buf.length, data, 32);\\n  }\\n\\n  /**\\n   * @dev Writes an integer to the buffer. Resizes if doing so would exceed\\n   *      the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param off The offset to write at.\\n   * @param data The data to append.\\n   * @param len The number of bytes to write (right-aligned).\\n   * @return The original buffer, for chaining.\\n   */\\n  function writeInt(\\n    buffer memory buf,\\n    uint256 off,\\n    uint256 data,\\n    uint256 len\\n  ) private pure returns (buffer memory) {\\n    if (len + off > buf.capacity) {\\n      resize(buf, (len + off) * 2);\\n    }\\n\\n    uint256 mask = (256**len) - 1;\\n    assembly {\\n      // Memory address of the buffer data\\n      let bufptr := mload(buf)\\n      // Address = buffer address + off + sizeof(buffer length) + len\\n      let dest := add(add(bufptr, off), len)\\n      mstore(dest, or(and(mload(dest), not(mask)), data))\\n      // Update buffer length if we extended it\\n      if gt(add(off, len), mload(bufptr)) {\\n        mstore(bufptr, add(off, len))\\n      }\\n    }\\n    return buf;\\n  }\\n\\n  /**\\n   * @dev Appends a byte to the end of the buffer. Resizes if doing so would\\n   * exceed the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param data The data to append.\\n   * @return The original buffer.\\n   */\\n  function appendInt(\\n    buffer memory buf,\\n    uint256 data,\\n    uint256 len\\n  ) internal pure returns (buffer memory) {\\n    return writeInt(buf, buf.buf.length, data, len);\\n  }\\n}\\n\",\"keccak256\":\"0x89388a631c16ad993e4d76d8d19e08ae98e1397f5dfdfb5f9c0b91015df4cf5d\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vendor/CBORChainlink.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.4.19;\\n\\nimport {BufferChainlink} from \\\"./BufferChainlink.sol\\\";\\n\\nlibrary CBORChainlink {\\n  using BufferChainlink for BufferChainlink.buffer;\\n\\n  uint8 private constant MAJOR_TYPE_INT = 0;\\n  uint8 private constant MAJOR_TYPE_NEGATIVE_INT = 1;\\n  uint8 private constant MAJOR_TYPE_BYTES = 2;\\n  uint8 private constant MAJOR_TYPE_STRING = 3;\\n  uint8 private constant MAJOR_TYPE_ARRAY = 4;\\n  uint8 private constant MAJOR_TYPE_MAP = 5;\\n  uint8 private constant MAJOR_TYPE_TAG = 6;\\n  uint8 private constant MAJOR_TYPE_CONTENT_FREE = 7;\\n\\n  uint8 private constant TAG_TYPE_BIGNUM = 2;\\n  uint8 private constant TAG_TYPE_NEGATIVE_BIGNUM = 3;\\n\\n  function encodeFixedNumeric(BufferChainlink.buffer memory buf, uint8 major, uint64 value) private pure {\\n    if(value <= 23) {\\n      buf.appendUint8(uint8((major << 5) | value));\\n    } else if (value <= 0xFF) {\\n      buf.appendUint8(uint8((major << 5) | 24));\\n      buf.appendInt(value, 1);\\n    } else if (value <= 0xFFFF) {\\n      buf.appendUint8(uint8((major << 5) | 25));\\n      buf.appendInt(value, 2);\\n    } else if (value <= 0xFFFFFFFF) {\\n      buf.appendUint8(uint8((major << 5) | 26));\\n      buf.appendInt(value, 4);\\n    } else {\\n      buf.appendUint8(uint8((major << 5) | 27));\\n      buf.appendInt(value, 8);\\n    }\\n  }\\n\\n  function encodeIndefiniteLengthType(BufferChainlink.buffer memory buf, uint8 major) private pure {\\n    buf.appendUint8(uint8((major << 5) | 31));\\n  }\\n\\n  function encodeUInt(BufferChainlink.buffer memory buf, uint value) internal pure {\\n    if(value > 0xFFFFFFFFFFFFFFFF) {\\n      encodeBigNum(buf, value);\\n    } else {\\n      encodeFixedNumeric(buf, MAJOR_TYPE_INT, uint64(value));\\n    }\\n  }\\n\\n  function encodeInt(BufferChainlink.buffer memory buf, int value) internal pure {\\n    if(value < -0x10000000000000000) {\\n      encodeSignedBigNum(buf, value);\\n    } else if(value > 0xFFFFFFFFFFFFFFFF) {\\n      encodeBigNum(buf, uint(value));\\n    } else if(value >= 0) {\\n      encodeFixedNumeric(buf, MAJOR_TYPE_INT, uint64(uint256(value)));\\n    } else {\\n      encodeFixedNumeric(buf, MAJOR_TYPE_NEGATIVE_INT, uint64(uint256(-1 - value)));\\n    }\\n  }\\n\\n  function encodeBytes(BufferChainlink.buffer memory buf, bytes memory value) internal pure {\\n    encodeFixedNumeric(buf, MAJOR_TYPE_BYTES, uint64(value.length));\\n    buf.append(value);\\n  }\\n\\n  function encodeBigNum(BufferChainlink.buffer memory buf, uint value) internal pure {\\n    buf.appendUint8(uint8((MAJOR_TYPE_TAG << 5) | TAG_TYPE_BIGNUM));\\n    encodeBytes(buf, abi.encode(value));\\n  }\\n\\n  function encodeSignedBigNum(BufferChainlink.buffer memory buf, int input) internal pure {\\n    buf.appendUint8(uint8((MAJOR_TYPE_TAG << 5) | TAG_TYPE_NEGATIVE_BIGNUM));\\n    encodeBytes(buf, abi.encode(uint256(-1 - input)));\\n  }\\n\\n  function encodeString(BufferChainlink.buffer memory buf, string memory value) internal pure {\\n    encodeFixedNumeric(buf, MAJOR_TYPE_STRING, uint64(bytes(value).length));\\n    buf.append(bytes(value));\\n  }\\n\\n  function startArray(BufferChainlink.buffer memory buf) internal pure {\\n    encodeIndefiniteLengthType(buf, MAJOR_TYPE_ARRAY);\\n  }\\n\\n  function startMap(BufferChainlink.buffer memory buf) internal pure {\\n    encodeIndefiniteLengthType(buf, MAJOR_TYPE_MAP);\\n  }\\n\\n  function endSequence(BufferChainlink.buffer memory buf) internal pure {\\n    encodeIndefiniteLengthType(buf, MAJOR_TYPE_CONTENT_FREE);\\n  }\\n}\\n\",\"keccak256\":\"0x08bda450d4dc1d17147fd29810234d35e2c437f1a99be733cfa7ee516db08a48\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vendor/ENSResolver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nabstract contract ENSResolver {\\n  function addr(bytes32 node) public view virtual returns (address);\\n}\\n\",\"keccak256\":\"0x606bda5f3fa27be4cf04f6636dda443b7787b56e87ade988fca2e51d2147613d\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":319,"contract":"@chainlink/contracts/src/v0.8/ChainlinkClient.sol:ChainlinkClient","label":"s_ens","offset":0,"slot":"0","type":"t_contract(ENSInterface)974"},{"astId":321,"contract":"@chainlink/contracts/src/v0.8/ChainlinkClient.sol:ChainlinkClient","label":"s_ensNode","offset":0,"slot":"1","type":"t_bytes32"},{"astId":324,"contract":"@chainlink/contracts/src/v0.8/ChainlinkClient.sol:ChainlinkClient","label":"s_link","offset":0,"slot":"2","type":"t_contract(LinkTokenInterface)1069"},{"astId":327,"contract":"@chainlink/contracts/src/v0.8/ChainlinkClient.sol:ChainlinkClient","label":"s_oracle","offset":0,"slot":"3","type":"t_contract(OperatorInterface)1149"},{"astId":330,"contract":"@chainlink/contracts/src/v0.8/ChainlinkClient.sol:ChainlinkClient","label":"s_requestCount","offset":0,"slot":"4","type":"t_uint256"},{"astId":334,"contract":"@chainlink/contracts/src/v0.8/ChainlinkClient.sol:ChainlinkClient","label":"s_pendingRequests","offset":0,"slot":"5","type":"t_mapping(t_bytes32,t_address)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_contract(ENSInterface)974":{"encoding":"inplace","label":"contract ENSInterface","numberOfBytes":"20"},"t_contract(LinkTokenInterface)1069":{"encoding":"inplace","label":"contract LinkTokenInterface","numberOfBytes":"20"},"t_contract(OperatorInterface)1149":{"encoding":"inplace","label":"contract OperatorInterface","numberOfBytes":"20"},"t_mapping(t_bytes32,t_address)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => address)","numberOfBytes":"32","value":"t_address"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"notice":"Contract writers can inherit this contract in order to create requests for the Chainlink network","version":1}}},"@chainlink/contracts/src/v0.8/interfaces/ChainlinkRequestInterface.sol":{"ChainlinkRequestInterface":{"abi":[{"inputs":[{"internalType":"bytes32","name":"requestId","type":"bytes32"},{"internalType":"uint256","name":"payment","type":"uint256"},{"internalType":"bytes4","name":"callbackFunctionId","type":"bytes4"},{"internalType":"uint256","name":"expiration","type":"uint256"}],"name":"cancelOracleRequest","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"requestPrice","type":"uint256"},{"internalType":"bytes32","name":"serviceAgreementID","type":"bytes32"},{"internalType":"address","name":"callbackAddress","type":"address"},{"internalType":"bytes4","name":"callbackFunctionId","type":"bytes4"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"dataVersion","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"oracleRequest","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"cancelOracleRequest(bytes32,uint256,bytes4,uint256)":"6ee4d553","oracleRequest(address,uint256,bytes32,address,bytes4,uint256,uint256,bytes)":"40429946"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"payment\",\"type\":\"uint256\"},{\"internalType\":\"bytes4\",\"name\":\"callbackFunctionId\",\"type\":\"bytes4\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"}],\"name\":\"cancelOracleRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestPrice\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"serviceAgreementID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callbackAddress\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"callbackFunctionId\",\"type\":\"bytes4\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dataVersion\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"oracleRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/ChainlinkRequestInterface.sol\":\"ChainlinkRequestInterface\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/ChainlinkRequestInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface ChainlinkRequestInterface {\\n  function oracleRequest(\\n    address sender,\\n    uint256 requestPrice,\\n    bytes32 serviceAgreementID,\\n    address callbackAddress,\\n    bytes4 callbackFunctionId,\\n    uint256 nonce,\\n    uint256 dataVersion,\\n    bytes calldata data\\n  ) external;\\n\\n  function cancelOracleRequest(\\n    bytes32 requestId,\\n    uint256 payment,\\n    bytes4 callbackFunctionId,\\n    uint256 expiration\\n  ) external;\\n}\\n\",\"keccak256\":\"0xa8adfbd0326c982c38ea3808a4da52f0a51807241787c4bd28235bbe86707c04\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/interfaces/ENSInterface.sol":{"ENSInterface":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"node","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"label","type":"bytes32"},{"indexed":false,"internalType":"address","name":"owner","type":"address"}],"name":"NewOwner","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"node","type":"bytes32"},{"indexed":false,"internalType":"address","name":"resolver","type":"address"}],"name":"NewResolver","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"node","type":"bytes32"},{"indexed":false,"internalType":"uint64","name":"ttl","type":"uint64"}],"name":"NewTTL","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"node","type":"bytes32"},{"indexed":false,"internalType":"address","name":"owner","type":"address"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"bytes32","name":"node","type":"bytes32"}],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"node","type":"bytes32"}],"name":"resolver","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"node","type":"bytes32"},{"internalType":"address","name":"owner","type":"address"}],"name":"setOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"node","type":"bytes32"},{"internalType":"address","name":"resolver","type":"address"}],"name":"setResolver","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"node","type":"bytes32"},{"internalType":"bytes32","name":"label","type":"bytes32"},{"internalType":"address","name":"owner","type":"address"}],"name":"setSubnodeOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"node","type":"bytes32"},{"internalType":"uint64","name":"ttl","type":"uint64"}],"name":"setTTL","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"node","type":"bytes32"}],"name":"ttl","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner(bytes32)":"02571be3","resolver(bytes32)":"0178b8bf","setOwner(bytes32,address)":"5b0fc9c3","setResolver(bytes32,address)":"1896f70a","setSubnodeOwner(bytes32,bytes32,address)":"06ab5923","setTTL(bytes32,uint64)":"14ab9038","ttl(bytes32)":"16a25cbd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"label\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"NewOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"}],\"name\":\"NewResolver\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"ttl\",\"type\":\"uint64\"}],\"name\":\"NewTTL\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"resolver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"}],\"name\":\"setResolver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"label\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"setSubnodeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"ttl\",\"type\":\"uint64\"}],\"name\":\"setTTL\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"ttl\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/ENSInterface.sol\":\"ENSInterface\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/ENSInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface ENSInterface {\\n  // Logged when the owner of a node assigns a new owner to a subnode.\\n  event NewOwner(bytes32 indexed node, bytes32 indexed label, address owner);\\n\\n  // Logged when the owner of a node transfers ownership to a new account.\\n  event Transfer(bytes32 indexed node, address owner);\\n\\n  // Logged when the resolver for a node changes.\\n  event NewResolver(bytes32 indexed node, address resolver);\\n\\n  // Logged when the TTL of a node changes\\n  event NewTTL(bytes32 indexed node, uint64 ttl);\\n\\n  function setSubnodeOwner(\\n    bytes32 node,\\n    bytes32 label,\\n    address owner\\n  ) external;\\n\\n  function setResolver(bytes32 node, address resolver) external;\\n\\n  function setOwner(bytes32 node, address owner) external;\\n\\n  function setTTL(bytes32 node, uint64 ttl) external;\\n\\n  function owner(bytes32 node) external view returns (address);\\n\\n  function resolver(bytes32 node) external view returns (address);\\n\\n  function ttl(bytes32 node) external view returns (uint64);\\n}\\n\",\"keccak256\":\"0xe51365458d82233a55f5ad4492a3b6bf56332d21cad6b0a5f21b8a026fcfd6d0\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol":{"LinkTokenInterface":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"remaining","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"decimalPlaces","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"decreaseApproval","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"increaseApproval","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"tokenName","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"tokenSymbol","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"totalTokensIssued","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseApproval(address,uint256)":"66188463","increaseApproval(address,uint256)":"d73dd623","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferAndCall(address,uint256,bytes)":"4000aea0","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"decimalPlaces\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalTokensIssued\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\":\"LinkTokenInterface\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface LinkTokenInterface {\\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\\n\\n  function approve(address spender, uint256 value) external returns (bool success);\\n\\n  function balanceOf(address owner) external view returns (uint256 balance);\\n\\n  function decimals() external view returns (uint8 decimalPlaces);\\n\\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\\n\\n  function increaseApproval(address spender, uint256 subtractedValue) external;\\n\\n  function name() external view returns (string memory tokenName);\\n\\n  function symbol() external view returns (string memory tokenSymbol);\\n\\n  function totalSupply() external view returns (uint256 totalTokensIssued);\\n\\n  function transfer(address to, uint256 value) external returns (bool success);\\n\\n  function transferAndCall(\\n    address to,\\n    uint256 value,\\n    bytes calldata data\\n  ) external returns (bool success);\\n\\n  function transferFrom(\\n    address from,\\n    address to,\\n    uint256 value\\n  ) external returns (bool success);\\n}\\n\",\"keccak256\":\"0xc7d7cd730d36825485ef4107d93c3ff18b9f3a5a00ea3d5988ba9a0bd70b10c5\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/interfaces/OperatorInterface.sol":{"OperatorInterface":{"abi":[{"inputs":[{"internalType":"bytes32","name":"requestId","type":"bytes32"},{"internalType":"uint256","name":"payment","type":"uint256"},{"internalType":"bytes4","name":"callbackFunctionId","type":"bytes4"},{"internalType":"uint256","name":"expiration","type":"uint256"}],"name":"cancelOracleRequest","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable[]","name":"receivers","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"name":"distributeFunds","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"requestId","type":"bytes32"},{"internalType":"uint256","name":"payment","type":"uint256"},{"internalType":"address","name":"callbackAddress","type":"address"},{"internalType":"bytes4","name":"callbackFunctionId","type":"bytes4"},{"internalType":"uint256","name":"expiration","type":"uint256"},{"internalType":"bytes32","name":"data","type":"bytes32"}],"name":"fulfillOracleRequest","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"requestId","type":"bytes32"},{"internalType":"uint256","name":"payment","type":"uint256"},{"internalType":"address","name":"callbackAddress","type":"address"},{"internalType":"bytes4","name":"callbackFunctionId","type":"bytes4"},{"internalType":"uint256","name":"expiration","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"fulfillOracleRequest2","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getAuthorizedSenders","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getForwarder","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"node","type":"address"}],"name":"isAuthorizedSender","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"payment","type":"uint256"},{"internalType":"bytes32","name":"specId","type":"bytes32"},{"internalType":"bytes4","name":"callbackFunctionId","type":"bytes4"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"dataVersion","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"operatorRequest","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"requestPrice","type":"uint256"},{"internalType":"bytes32","name":"serviceAgreementID","type":"bytes32"},{"internalType":"address","name":"callbackAddress","type":"address"},{"internalType":"bytes4","name":"callbackFunctionId","type":"bytes4"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"dataVersion","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"oracleRequest","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"ownerTransferAndCall","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"senders","type":"address[]"}],"name":"setAuthorizedSenders","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawable","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"cancelOracleRequest(bytes32,uint256,bytes4,uint256)":"6ee4d553","distributeFunds(address[],uint256[])":"6bd59ec0","fulfillOracleRequest(bytes32,uint256,address,bytes4,uint256,bytes32)":"4ab0d190","fulfillOracleRequest2(bytes32,uint256,address,bytes4,uint256,bytes)":"6ae0bc76","getAuthorizedSenders()":"2408afaa","getForwarder()":"a0042526","isAuthorizedSender(address)":"fa00763a","operatorRequest(address,uint256,bytes32,bytes4,uint256,uint256,bytes)":"3c6d41b9","oracleRequest(address,uint256,bytes32,address,bytes4,uint256,uint256,bytes)":"40429946","ownerTransferAndCall(address,uint256,bytes)":"902fc370","setAuthorizedSenders(address[])":"ee56997b","withdraw(address,uint256)":"f3fef3a3","withdrawable()":"50188301"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"payment\",\"type\":\"uint256\"},{\"internalType\":\"bytes4\",\"name\":\"callbackFunctionId\",\"type\":\"bytes4\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"}],\"name\":\"cancelOracleRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable[]\",\"name\":\"receivers\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"distributeFunds\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"payment\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"callbackAddress\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"callbackFunctionId\",\"type\":\"bytes4\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"name\":\"fulfillOracleRequest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"payment\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"callbackAddress\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"callbackFunctionId\",\"type\":\"bytes4\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"fulfillOracleRequest2\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAuthorizedSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"node\",\"type\":\"address\"}],\"name\":\"isAuthorizedSender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"payment\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"specId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes4\",\"name\":\"callbackFunctionId\",\"type\":\"bytes4\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dataVersion\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"operatorRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestPrice\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"serviceAgreementID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callbackAddress\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"callbackFunctionId\",\"type\":\"bytes4\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dataVersion\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"oracleRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ownerTransferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"senders\",\"type\":\"address[]\"}],\"name\":\"setAuthorizedSenders\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/OperatorInterface.sol\":\"OperatorInterface\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/ChainlinkRequestInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface ChainlinkRequestInterface {\\n  function oracleRequest(\\n    address sender,\\n    uint256 requestPrice,\\n    bytes32 serviceAgreementID,\\n    address callbackAddress,\\n    bytes4 callbackFunctionId,\\n    uint256 nonce,\\n    uint256 dataVersion,\\n    bytes calldata data\\n  ) external;\\n\\n  function cancelOracleRequest(\\n    bytes32 requestId,\\n    uint256 payment,\\n    bytes4 callbackFunctionId,\\n    uint256 expiration\\n  ) external;\\n}\\n\",\"keccak256\":\"0xa8adfbd0326c982c38ea3808a4da52f0a51807241787c4bd28235bbe86707c04\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/OperatorInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./OracleInterface.sol\\\";\\nimport \\\"./ChainlinkRequestInterface.sol\\\";\\n\\ninterface OperatorInterface is OracleInterface, ChainlinkRequestInterface {\\n  function operatorRequest(\\n    address sender,\\n    uint256 payment,\\n    bytes32 specId,\\n    bytes4 callbackFunctionId,\\n    uint256 nonce,\\n    uint256 dataVersion,\\n    bytes calldata data\\n  ) external;\\n\\n  function fulfillOracleRequest2(\\n    bytes32 requestId,\\n    uint256 payment,\\n    address callbackAddress,\\n    bytes4 callbackFunctionId,\\n    uint256 expiration,\\n    bytes calldata data\\n  ) external returns (bool);\\n\\n  function ownerTransferAndCall(\\n    address to,\\n    uint256 value,\\n    bytes calldata data\\n  ) external returns (bool success);\\n\\n  function distributeFunds(address payable[] calldata receivers, uint256[] calldata amounts) external payable;\\n\\n  function getAuthorizedSenders() external returns (address[] memory);\\n\\n  function setAuthorizedSenders(address[] calldata senders) external;\\n\\n  function getForwarder() external returns (address);\\n}\\n\",\"keccak256\":\"0x79a7c77b8f87be6ef02a566765077ed599724b060a209f34f8907eec5615da68\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/OracleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface OracleInterface {\\n  function fulfillOracleRequest(\\n    bytes32 requestId,\\n    uint256 payment,\\n    address callbackAddress,\\n    bytes4 callbackFunctionId,\\n    uint256 expiration,\\n    bytes32 data\\n  ) external returns (bool);\\n\\n  function isAuthorizedSender(address node) external view returns (bool);\\n\\n  function withdraw(address recipient, uint256 amount) external;\\n\\n  function withdrawable() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x3a86242e005bad9daf1b4794399a81ba373069355f38c8a07b58e57abc32513a\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/interfaces/OracleInterface.sol":{"OracleInterface":{"abi":[{"inputs":[{"internalType":"bytes32","name":"requestId","type":"bytes32"},{"internalType":"uint256","name":"payment","type":"uint256"},{"internalType":"address","name":"callbackAddress","type":"address"},{"internalType":"bytes4","name":"callbackFunctionId","type":"bytes4"},{"internalType":"uint256","name":"expiration","type":"uint256"},{"internalType":"bytes32","name":"data","type":"bytes32"}],"name":"fulfillOracleRequest","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"node","type":"address"}],"name":"isAuthorizedSender","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawable","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"fulfillOracleRequest(bytes32,uint256,address,bytes4,uint256,bytes32)":"4ab0d190","isAuthorizedSender(address)":"fa00763a","withdraw(address,uint256)":"f3fef3a3","withdrawable()":"50188301"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"payment\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"callbackAddress\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"callbackFunctionId\",\"type\":\"bytes4\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"name\":\"fulfillOracleRequest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"node\",\"type\":\"address\"}],\"name\":\"isAuthorizedSender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/OracleInterface.sol\":\"OracleInterface\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/OracleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface OracleInterface {\\n  function fulfillOracleRequest(\\n    bytes32 requestId,\\n    uint256 payment,\\n    address callbackAddress,\\n    bytes4 callbackFunctionId,\\n    uint256 expiration,\\n    bytes32 data\\n  ) external returns (bool);\\n\\n  function isAuthorizedSender(address node) external view returns (bool);\\n\\n  function withdraw(address recipient, uint256 amount) external;\\n\\n  function withdrawable() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x3a86242e005bad9daf1b4794399a81ba373069355f38c8a07b58e57abc32513a\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/interfaces/PointerInterface.sol":{"PointerInterface":{"abi":[{"inputs":[],"name":"getAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getAddress()":"38cc4831"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/PointerInterface.sol\":\"PointerInterface\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/PointerInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface PointerInterface {\\n  function getAddress() external view returns (address);\\n}\\n\",\"keccak256\":\"0x42e5d62984f9d57bab7e32b2c6e3af86f4feb232ea2af6c822032fae88203bd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/vendor/BufferChainlink.sol":{"BufferChainlink":{"abi":[],"devdoc":{"details":"A library for working with mutable byte buffers in Solidity. Byte buffers are mutable and expandable, and provide a variety of primitives for writing to them. At any time you can fetch a bytes object containing the current contents of the buffer. The bytes object should not be stored between operations, as it may change due to resizing of the buffer.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a167a3d4862b6f092650eea8eaaa5ed806674c2567598017b1d423087f37c31764736f6c63430008060033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 PUSH8 0xA3D4862B6F092650 0xEE 0xA8 0xEA 0xAA 0x5E 0xD8 MOD PUSH8 0x4C2567598017B1D4 0x23 ADDMOD PUSH32 0x37C31764736F6C63430008060033000000000000000000000000000000000000 ","sourceMap":"441:9632:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a167a3d4862b6f092650eea8eaaa5ed806674c2567598017b1d423087f37c31764736f6c63430008060033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 PUSH8 0xA3D4862B6F092650 0xEE 0xA8 0xEA 0xAA 0x5E 0xD8 MOD PUSH8 0x4C2567598017B1D4 0x23 ADDMOD PUSH32 0x37C31764736F6C63430008060033000000000000000000000000000000000000 ","sourceMap":"441:9632:8:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"append(struct BufferChainlink.buffer memory,bytes memory)":"infinite","append(struct BufferChainlink.buffer memory,bytes memory,uint256)":"infinite","appendBytes20(struct BufferChainlink.buffer memory,bytes20)":"infinite","appendBytes32(struct BufferChainlink.buffer memory,bytes32)":"infinite","appendInt(struct BufferChainlink.buffer memory,uint256,uint256)":"infinite","appendUint8(struct BufferChainlink.buffer memory,uint8)":"infinite","fromBytes(bytes memory)":"infinite","init(struct BufferChainlink.buffer memory,uint256)":"infinite","max(uint256,uint256)":"infinite","resize(struct BufferChainlink.buffer memory,uint256)":"infinite","truncate(struct BufferChainlink.buffer memory)":"infinite","write(struct BufferChainlink.buffer memory,uint256,bytes memory,uint256)":"infinite","write(struct BufferChainlink.buffer memory,uint256,bytes32,uint256)":"infinite","writeBytes20(struct BufferChainlink.buffer memory,uint256,bytes20)":"infinite","writeInt(struct BufferChainlink.buffer memory,uint256,uint256,uint256)":"infinite","writeUint8(struct BufferChainlink.buffer memory,uint256,uint8)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"A library for working with mutable byte buffers in Solidity. Byte buffers are mutable and expandable, and provide a variety of primitives for writing to them. At any time you can fetch a bytes object containing the current contents of the buffer. The bytes object should not be stored between operations, as it may change due to resizing of the buffer.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vendor/BufferChainlink.sol\":\"BufferChainlink\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/vendor/BufferChainlink.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev A library for working with mutable byte buffers in Solidity.\\n *\\n * Byte buffers are mutable and expandable, and provide a variety of primitives\\n * for writing to them. At any time you can fetch a bytes object containing the\\n * current contents of the buffer. The bytes object should not be stored between\\n * operations, as it may change due to resizing of the buffer.\\n */\\nlibrary BufferChainlink {\\n  /**\\n   * @dev Represents a mutable buffer. Buffers have a current value (buf) and\\n   *      a capacity. The capacity may be longer than the current value, in\\n   *      which case it can be extended without the need to allocate more memory.\\n   */\\n  struct buffer {\\n    bytes buf;\\n    uint256 capacity;\\n  }\\n\\n  /**\\n   * @dev Initializes a buffer with an initial capacity.\\n   * @param buf The buffer to initialize.\\n   * @param capacity The number of bytes of space to allocate the buffer.\\n   * @return The buffer, for chaining.\\n   */\\n  function init(buffer memory buf, uint256 capacity) internal pure returns (buffer memory) {\\n    if (capacity % 32 != 0) {\\n      capacity += 32 - (capacity % 32);\\n    }\\n    // Allocate space for the buffer data\\n    buf.capacity = capacity;\\n    assembly {\\n      let ptr := mload(0x40)\\n      mstore(buf, ptr)\\n      mstore(ptr, 0)\\n      mstore(0x40, add(32, add(ptr, capacity)))\\n    }\\n    return buf;\\n  }\\n\\n  /**\\n   * @dev Initializes a new buffer from an existing bytes object.\\n   *      Changes to the buffer may mutate the original value.\\n   * @param b The bytes object to initialize the buffer with.\\n   * @return A new buffer.\\n   */\\n  function fromBytes(bytes memory b) internal pure returns (buffer memory) {\\n    buffer memory buf;\\n    buf.buf = b;\\n    buf.capacity = b.length;\\n    return buf;\\n  }\\n\\n  function resize(buffer memory buf, uint256 capacity) private pure {\\n    bytes memory oldbuf = buf.buf;\\n    init(buf, capacity);\\n    append(buf, oldbuf);\\n  }\\n\\n  function max(uint256 a, uint256 b) private pure returns (uint256) {\\n    if (a > b) {\\n      return a;\\n    }\\n    return b;\\n  }\\n\\n  /**\\n   * @dev Sets buffer length to 0.\\n   * @param buf The buffer to truncate.\\n   * @return The original buffer, for chaining..\\n   */\\n  function truncate(buffer memory buf) internal pure returns (buffer memory) {\\n    assembly {\\n      let bufptr := mload(buf)\\n      mstore(bufptr, 0)\\n    }\\n    return buf;\\n  }\\n\\n  /**\\n   * @dev Writes a byte string to a buffer. Resizes if doing so would exceed\\n   *      the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param off The start offset to write to.\\n   * @param data The data to append.\\n   * @param len The number of bytes to copy.\\n   * @return The original buffer, for chaining.\\n   */\\n  function write(\\n    buffer memory buf,\\n    uint256 off,\\n    bytes memory data,\\n    uint256 len\\n  ) internal pure returns (buffer memory) {\\n    require(len <= data.length);\\n\\n    if (off + len > buf.capacity) {\\n      resize(buf, max(buf.capacity, len + off) * 2);\\n    }\\n\\n    uint256 dest;\\n    uint256 src;\\n    assembly {\\n      // Memory address of the buffer data\\n      let bufptr := mload(buf)\\n      // Length of existing buffer data\\n      let buflen := mload(bufptr)\\n      // Start address = buffer address + offset + sizeof(buffer length)\\n      dest := add(add(bufptr, 32), off)\\n      // Update buffer length if we're extending it\\n      if gt(add(len, off), buflen) {\\n        mstore(bufptr, add(len, off))\\n      }\\n      src := add(data, 32)\\n    }\\n\\n    // Copy word-length chunks while possible\\n    for (; len >= 32; len -= 32) {\\n      assembly {\\n        mstore(dest, mload(src))\\n      }\\n      dest += 32;\\n      src += 32;\\n    }\\n\\n    // Copy remaining bytes\\n    unchecked {\\n      uint256 mask = (256**(32 - len)) - 1;\\n      assembly {\\n        let srcpart := and(mload(src), not(mask))\\n        let destpart := and(mload(dest), mask)\\n        mstore(dest, or(destpart, srcpart))\\n      }\\n    }\\n\\n    return buf;\\n  }\\n\\n  /**\\n   * @dev Appends a byte string to a buffer. Resizes if doing so would exceed\\n   *      the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param data The data to append.\\n   * @param len The number of bytes to copy.\\n   * @return The original buffer, for chaining.\\n   */\\n  function append(\\n    buffer memory buf,\\n    bytes memory data,\\n    uint256 len\\n  ) internal pure returns (buffer memory) {\\n    return write(buf, buf.buf.length, data, len);\\n  }\\n\\n  /**\\n   * @dev Appends a byte string to a buffer. Resizes if doing so would exceed\\n   *      the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param data The data to append.\\n   * @return The original buffer, for chaining.\\n   */\\n  function append(buffer memory buf, bytes memory data) internal pure returns (buffer memory) {\\n    return write(buf, buf.buf.length, data, data.length);\\n  }\\n\\n  /**\\n   * @dev Writes a byte to the buffer. Resizes if doing so would exceed the\\n   *      capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param off The offset to write the byte at.\\n   * @param data The data to append.\\n   * @return The original buffer, for chaining.\\n   */\\n  function writeUint8(\\n    buffer memory buf,\\n    uint256 off,\\n    uint8 data\\n  ) internal pure returns (buffer memory) {\\n    if (off >= buf.capacity) {\\n      resize(buf, buf.capacity * 2);\\n    }\\n\\n    assembly {\\n      // Memory address of the buffer data\\n      let bufptr := mload(buf)\\n      // Length of existing buffer data\\n      let buflen := mload(bufptr)\\n      // Address = buffer address + sizeof(buffer length) + off\\n      let dest := add(add(bufptr, off), 32)\\n      mstore8(dest, data)\\n      // Update buffer length if we extended it\\n      if eq(off, buflen) {\\n        mstore(bufptr, add(buflen, 1))\\n      }\\n    }\\n    return buf;\\n  }\\n\\n  /**\\n   * @dev Appends a byte to the buffer. Resizes if doing so would exceed the\\n   *      capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param data The data to append.\\n   * @return The original buffer, for chaining.\\n   */\\n  function appendUint8(buffer memory buf, uint8 data) internal pure returns (buffer memory) {\\n    return writeUint8(buf, buf.buf.length, data);\\n  }\\n\\n  /**\\n   * @dev Writes up to 32 bytes to the buffer. Resizes if doing so would\\n   *      exceed the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param off The offset to write at.\\n   * @param data The data to append.\\n   * @param len The number of bytes to write (left-aligned).\\n   * @return The original buffer, for chaining.\\n   */\\n  function write(\\n    buffer memory buf,\\n    uint256 off,\\n    bytes32 data,\\n    uint256 len\\n  ) private pure returns (buffer memory) {\\n    if (len + off > buf.capacity) {\\n      resize(buf, (len + off) * 2);\\n    }\\n\\n    unchecked {\\n      uint256 mask = (256**len) - 1;\\n      // Right-align data\\n      data = data >> (8 * (32 - len));\\n      assembly {\\n        // Memory address of the buffer data\\n        let bufptr := mload(buf)\\n        // Address = buffer address + sizeof(buffer length) + off + len\\n        let dest := add(add(bufptr, off), len)\\n        mstore(dest, or(and(mload(dest), not(mask)), data))\\n        // Update buffer length if we extended it\\n        if gt(add(off, len), mload(bufptr)) {\\n          mstore(bufptr, add(off, len))\\n        }\\n      }\\n    }\\n    return buf;\\n  }\\n\\n  /**\\n   * @dev Writes a bytes20 to the buffer. Resizes if doing so would exceed the\\n   *      capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param off The offset to write at.\\n   * @param data The data to append.\\n   * @return The original buffer, for chaining.\\n   */\\n  function writeBytes20(\\n    buffer memory buf,\\n    uint256 off,\\n    bytes20 data\\n  ) internal pure returns (buffer memory) {\\n    return write(buf, off, bytes32(data), 20);\\n  }\\n\\n  /**\\n   * @dev Appends a bytes20 to the buffer. Resizes if doing so would exceed\\n   *      the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param data The data to append.\\n   * @return The original buffer, for chhaining.\\n   */\\n  function appendBytes20(buffer memory buf, bytes20 data) internal pure returns (buffer memory) {\\n    return write(buf, buf.buf.length, bytes32(data), 20);\\n  }\\n\\n  /**\\n   * @dev Appends a bytes32 to the buffer. Resizes if doing so would exceed\\n   *      the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param data The data to append.\\n   * @return The original buffer, for chaining.\\n   */\\n  function appendBytes32(buffer memory buf, bytes32 data) internal pure returns (buffer memory) {\\n    return write(buf, buf.buf.length, data, 32);\\n  }\\n\\n  /**\\n   * @dev Writes an integer to the buffer. Resizes if doing so would exceed\\n   *      the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param off The offset to write at.\\n   * @param data The data to append.\\n   * @param len The number of bytes to write (right-aligned).\\n   * @return The original buffer, for chaining.\\n   */\\n  function writeInt(\\n    buffer memory buf,\\n    uint256 off,\\n    uint256 data,\\n    uint256 len\\n  ) private pure returns (buffer memory) {\\n    if (len + off > buf.capacity) {\\n      resize(buf, (len + off) * 2);\\n    }\\n\\n    uint256 mask = (256**len) - 1;\\n    assembly {\\n      // Memory address of the buffer data\\n      let bufptr := mload(buf)\\n      // Address = buffer address + off + sizeof(buffer length) + len\\n      let dest := add(add(bufptr, off), len)\\n      mstore(dest, or(and(mload(dest), not(mask)), data))\\n      // Update buffer length if we extended it\\n      if gt(add(off, len), mload(bufptr)) {\\n        mstore(bufptr, add(off, len))\\n      }\\n    }\\n    return buf;\\n  }\\n\\n  /**\\n   * @dev Appends a byte to the end of the buffer. Resizes if doing so would\\n   * exceed the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param data The data to append.\\n   * @return The original buffer.\\n   */\\n  function appendInt(\\n    buffer memory buf,\\n    uint256 data,\\n    uint256 len\\n  ) internal pure returns (buffer memory) {\\n    return writeInt(buf, buf.buf.length, data, len);\\n  }\\n}\\n\",\"keccak256\":\"0x89388a631c16ad993e4d76d8d19e08ae98e1397f5dfdfb5f9c0b91015df4cf5d\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/vendor/CBORChainlink.sol":{"CBORChainlink":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c30bede0ac87fa82f230ac09480ada7a72189d519f252d2ba5ab51146b89d7f164736f6c63430008060033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 SIGNEXTEND 0xED 0xE0 0xAC DUP8 STATICCALL DUP3 CALLCODE ADDRESS 0xAC MULMOD 0x48 EXP 0xDA PUSH27 0x72189D519F252D2BA5AB51146B89D7F164736F6C63430008060033 ","sourceMap":"115:3271:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c30bede0ac87fa82f230ac09480ada7a72189d519f252d2ba5ab51146b89d7f164736f6c63430008060033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 SIGNEXTEND 0xED 0xE0 0xAC DUP8 STATICCALL DUP3 CALLCODE ADDRESS 0xAC MULMOD 0x48 EXP 0xDA PUSH27 0x72189D519F252D2BA5AB51146B89D7F164736F6C63430008060033 ","sourceMap":"115:3271:9:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"encodeBigNum(struct BufferChainlink.buffer memory,uint256)":"infinite","encodeBytes(struct BufferChainlink.buffer memory,bytes memory)":"infinite","encodeFixedNumeric(struct BufferChainlink.buffer memory,uint8,uint64)":"infinite","encodeIndefiniteLengthType(struct BufferChainlink.buffer memory,uint8)":"infinite","encodeInt(struct BufferChainlink.buffer memory,int256)":"infinite","encodeSignedBigNum(struct BufferChainlink.buffer memory,int256)":"infinite","encodeString(struct BufferChainlink.buffer memory,string memory)":"infinite","encodeUInt(struct BufferChainlink.buffer memory,uint256)":"infinite","endSequence(struct BufferChainlink.buffer memory)":"infinite","startArray(struct BufferChainlink.buffer memory)":"infinite","startMap(struct BufferChainlink.buffer memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vendor/CBORChainlink.sol\":\"CBORChainlink\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/vendor/BufferChainlink.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev A library for working with mutable byte buffers in Solidity.\\n *\\n * Byte buffers are mutable and expandable, and provide a variety of primitives\\n * for writing to them. At any time you can fetch a bytes object containing the\\n * current contents of the buffer. The bytes object should not be stored between\\n * operations, as it may change due to resizing of the buffer.\\n */\\nlibrary BufferChainlink {\\n  /**\\n   * @dev Represents a mutable buffer. Buffers have a current value (buf) and\\n   *      a capacity. The capacity may be longer than the current value, in\\n   *      which case it can be extended without the need to allocate more memory.\\n   */\\n  struct buffer {\\n    bytes buf;\\n    uint256 capacity;\\n  }\\n\\n  /**\\n   * @dev Initializes a buffer with an initial capacity.\\n   * @param buf The buffer to initialize.\\n   * @param capacity The number of bytes of space to allocate the buffer.\\n   * @return The buffer, for chaining.\\n   */\\n  function init(buffer memory buf, uint256 capacity) internal pure returns (buffer memory) {\\n    if (capacity % 32 != 0) {\\n      capacity += 32 - (capacity % 32);\\n    }\\n    // Allocate space for the buffer data\\n    buf.capacity = capacity;\\n    assembly {\\n      let ptr := mload(0x40)\\n      mstore(buf, ptr)\\n      mstore(ptr, 0)\\n      mstore(0x40, add(32, add(ptr, capacity)))\\n    }\\n    return buf;\\n  }\\n\\n  /**\\n   * @dev Initializes a new buffer from an existing bytes object.\\n   *      Changes to the buffer may mutate the original value.\\n   * @param b The bytes object to initialize the buffer with.\\n   * @return A new buffer.\\n   */\\n  function fromBytes(bytes memory b) internal pure returns (buffer memory) {\\n    buffer memory buf;\\n    buf.buf = b;\\n    buf.capacity = b.length;\\n    return buf;\\n  }\\n\\n  function resize(buffer memory buf, uint256 capacity) private pure {\\n    bytes memory oldbuf = buf.buf;\\n    init(buf, capacity);\\n    append(buf, oldbuf);\\n  }\\n\\n  function max(uint256 a, uint256 b) private pure returns (uint256) {\\n    if (a > b) {\\n      return a;\\n    }\\n    return b;\\n  }\\n\\n  /**\\n   * @dev Sets buffer length to 0.\\n   * @param buf The buffer to truncate.\\n   * @return The original buffer, for chaining..\\n   */\\n  function truncate(buffer memory buf) internal pure returns (buffer memory) {\\n    assembly {\\n      let bufptr := mload(buf)\\n      mstore(bufptr, 0)\\n    }\\n    return buf;\\n  }\\n\\n  /**\\n   * @dev Writes a byte string to a buffer. Resizes if doing so would exceed\\n   *      the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param off The start offset to write to.\\n   * @param data The data to append.\\n   * @param len The number of bytes to copy.\\n   * @return The original buffer, for chaining.\\n   */\\n  function write(\\n    buffer memory buf,\\n    uint256 off,\\n    bytes memory data,\\n    uint256 len\\n  ) internal pure returns (buffer memory) {\\n    require(len <= data.length);\\n\\n    if (off + len > buf.capacity) {\\n      resize(buf, max(buf.capacity, len + off) * 2);\\n    }\\n\\n    uint256 dest;\\n    uint256 src;\\n    assembly {\\n      // Memory address of the buffer data\\n      let bufptr := mload(buf)\\n      // Length of existing buffer data\\n      let buflen := mload(bufptr)\\n      // Start address = buffer address + offset + sizeof(buffer length)\\n      dest := add(add(bufptr, 32), off)\\n      // Update buffer length if we're extending it\\n      if gt(add(len, off), buflen) {\\n        mstore(bufptr, add(len, off))\\n      }\\n      src := add(data, 32)\\n    }\\n\\n    // Copy word-length chunks while possible\\n    for (; len >= 32; len -= 32) {\\n      assembly {\\n        mstore(dest, mload(src))\\n      }\\n      dest += 32;\\n      src += 32;\\n    }\\n\\n    // Copy remaining bytes\\n    unchecked {\\n      uint256 mask = (256**(32 - len)) - 1;\\n      assembly {\\n        let srcpart := and(mload(src), not(mask))\\n        let destpart := and(mload(dest), mask)\\n        mstore(dest, or(destpart, srcpart))\\n      }\\n    }\\n\\n    return buf;\\n  }\\n\\n  /**\\n   * @dev Appends a byte string to a buffer. Resizes if doing so would exceed\\n   *      the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param data The data to append.\\n   * @param len The number of bytes to copy.\\n   * @return The original buffer, for chaining.\\n   */\\n  function append(\\n    buffer memory buf,\\n    bytes memory data,\\n    uint256 len\\n  ) internal pure returns (buffer memory) {\\n    return write(buf, buf.buf.length, data, len);\\n  }\\n\\n  /**\\n   * @dev Appends a byte string to a buffer. Resizes if doing so would exceed\\n   *      the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param data The data to append.\\n   * @return The original buffer, for chaining.\\n   */\\n  function append(buffer memory buf, bytes memory data) internal pure returns (buffer memory) {\\n    return write(buf, buf.buf.length, data, data.length);\\n  }\\n\\n  /**\\n   * @dev Writes a byte to the buffer. Resizes if doing so would exceed the\\n   *      capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param off The offset to write the byte at.\\n   * @param data The data to append.\\n   * @return The original buffer, for chaining.\\n   */\\n  function writeUint8(\\n    buffer memory buf,\\n    uint256 off,\\n    uint8 data\\n  ) internal pure returns (buffer memory) {\\n    if (off >= buf.capacity) {\\n      resize(buf, buf.capacity * 2);\\n    }\\n\\n    assembly {\\n      // Memory address of the buffer data\\n      let bufptr := mload(buf)\\n      // Length of existing buffer data\\n      let buflen := mload(bufptr)\\n      // Address = buffer address + sizeof(buffer length) + off\\n      let dest := add(add(bufptr, off), 32)\\n      mstore8(dest, data)\\n      // Update buffer length if we extended it\\n      if eq(off, buflen) {\\n        mstore(bufptr, add(buflen, 1))\\n      }\\n    }\\n    return buf;\\n  }\\n\\n  /**\\n   * @dev Appends a byte to the buffer. Resizes if doing so would exceed the\\n   *      capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param data The data to append.\\n   * @return The original buffer, for chaining.\\n   */\\n  function appendUint8(buffer memory buf, uint8 data) internal pure returns (buffer memory) {\\n    return writeUint8(buf, buf.buf.length, data);\\n  }\\n\\n  /**\\n   * @dev Writes up to 32 bytes to the buffer. Resizes if doing so would\\n   *      exceed the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param off The offset to write at.\\n   * @param data The data to append.\\n   * @param len The number of bytes to write (left-aligned).\\n   * @return The original buffer, for chaining.\\n   */\\n  function write(\\n    buffer memory buf,\\n    uint256 off,\\n    bytes32 data,\\n    uint256 len\\n  ) private pure returns (buffer memory) {\\n    if (len + off > buf.capacity) {\\n      resize(buf, (len + off) * 2);\\n    }\\n\\n    unchecked {\\n      uint256 mask = (256**len) - 1;\\n      // Right-align data\\n      data = data >> (8 * (32 - len));\\n      assembly {\\n        // Memory address of the buffer data\\n        let bufptr := mload(buf)\\n        // Address = buffer address + sizeof(buffer length) + off + len\\n        let dest := add(add(bufptr, off), len)\\n        mstore(dest, or(and(mload(dest), not(mask)), data))\\n        // Update buffer length if we extended it\\n        if gt(add(off, len), mload(bufptr)) {\\n          mstore(bufptr, add(off, len))\\n        }\\n      }\\n    }\\n    return buf;\\n  }\\n\\n  /**\\n   * @dev Writes a bytes20 to the buffer. Resizes if doing so would exceed the\\n   *      capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param off The offset to write at.\\n   * @param data The data to append.\\n   * @return The original buffer, for chaining.\\n   */\\n  function writeBytes20(\\n    buffer memory buf,\\n    uint256 off,\\n    bytes20 data\\n  ) internal pure returns (buffer memory) {\\n    return write(buf, off, bytes32(data), 20);\\n  }\\n\\n  /**\\n   * @dev Appends a bytes20 to the buffer. Resizes if doing so would exceed\\n   *      the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param data The data to append.\\n   * @return The original buffer, for chhaining.\\n   */\\n  function appendBytes20(buffer memory buf, bytes20 data) internal pure returns (buffer memory) {\\n    return write(buf, buf.buf.length, bytes32(data), 20);\\n  }\\n\\n  /**\\n   * @dev Appends a bytes32 to the buffer. Resizes if doing so would exceed\\n   *      the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param data The data to append.\\n   * @return The original buffer, for chaining.\\n   */\\n  function appendBytes32(buffer memory buf, bytes32 data) internal pure returns (buffer memory) {\\n    return write(buf, buf.buf.length, data, 32);\\n  }\\n\\n  /**\\n   * @dev Writes an integer to the buffer. Resizes if doing so would exceed\\n   *      the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param off The offset to write at.\\n   * @param data The data to append.\\n   * @param len The number of bytes to write (right-aligned).\\n   * @return The original buffer, for chaining.\\n   */\\n  function writeInt(\\n    buffer memory buf,\\n    uint256 off,\\n    uint256 data,\\n    uint256 len\\n  ) private pure returns (buffer memory) {\\n    if (len + off > buf.capacity) {\\n      resize(buf, (len + off) * 2);\\n    }\\n\\n    uint256 mask = (256**len) - 1;\\n    assembly {\\n      // Memory address of the buffer data\\n      let bufptr := mload(buf)\\n      // Address = buffer address + off + sizeof(buffer length) + len\\n      let dest := add(add(bufptr, off), len)\\n      mstore(dest, or(and(mload(dest), not(mask)), data))\\n      // Update buffer length if we extended it\\n      if gt(add(off, len), mload(bufptr)) {\\n        mstore(bufptr, add(off, len))\\n      }\\n    }\\n    return buf;\\n  }\\n\\n  /**\\n   * @dev Appends a byte to the end of the buffer. Resizes if doing so would\\n   * exceed the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param data The data to append.\\n   * @return The original buffer.\\n   */\\n  function appendInt(\\n    buffer memory buf,\\n    uint256 data,\\n    uint256 len\\n  ) internal pure returns (buffer memory) {\\n    return writeInt(buf, buf.buf.length, data, len);\\n  }\\n}\\n\",\"keccak256\":\"0x89388a631c16ad993e4d76d8d19e08ae98e1397f5dfdfb5f9c0b91015df4cf5d\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vendor/CBORChainlink.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.4.19;\\n\\nimport {BufferChainlink} from \\\"./BufferChainlink.sol\\\";\\n\\nlibrary CBORChainlink {\\n  using BufferChainlink for BufferChainlink.buffer;\\n\\n  uint8 private constant MAJOR_TYPE_INT = 0;\\n  uint8 private constant MAJOR_TYPE_NEGATIVE_INT = 1;\\n  uint8 private constant MAJOR_TYPE_BYTES = 2;\\n  uint8 private constant MAJOR_TYPE_STRING = 3;\\n  uint8 private constant MAJOR_TYPE_ARRAY = 4;\\n  uint8 private constant MAJOR_TYPE_MAP = 5;\\n  uint8 private constant MAJOR_TYPE_TAG = 6;\\n  uint8 private constant MAJOR_TYPE_CONTENT_FREE = 7;\\n\\n  uint8 private constant TAG_TYPE_BIGNUM = 2;\\n  uint8 private constant TAG_TYPE_NEGATIVE_BIGNUM = 3;\\n\\n  function encodeFixedNumeric(BufferChainlink.buffer memory buf, uint8 major, uint64 value) private pure {\\n    if(value <= 23) {\\n      buf.appendUint8(uint8((major << 5) | value));\\n    } else if (value <= 0xFF) {\\n      buf.appendUint8(uint8((major << 5) | 24));\\n      buf.appendInt(value, 1);\\n    } else if (value <= 0xFFFF) {\\n      buf.appendUint8(uint8((major << 5) | 25));\\n      buf.appendInt(value, 2);\\n    } else if (value <= 0xFFFFFFFF) {\\n      buf.appendUint8(uint8((major << 5) | 26));\\n      buf.appendInt(value, 4);\\n    } else {\\n      buf.appendUint8(uint8((major << 5) | 27));\\n      buf.appendInt(value, 8);\\n    }\\n  }\\n\\n  function encodeIndefiniteLengthType(BufferChainlink.buffer memory buf, uint8 major) private pure {\\n    buf.appendUint8(uint8((major << 5) | 31));\\n  }\\n\\n  function encodeUInt(BufferChainlink.buffer memory buf, uint value) internal pure {\\n    if(value > 0xFFFFFFFFFFFFFFFF) {\\n      encodeBigNum(buf, value);\\n    } else {\\n      encodeFixedNumeric(buf, MAJOR_TYPE_INT, uint64(value));\\n    }\\n  }\\n\\n  function encodeInt(BufferChainlink.buffer memory buf, int value) internal pure {\\n    if(value < -0x10000000000000000) {\\n      encodeSignedBigNum(buf, value);\\n    } else if(value > 0xFFFFFFFFFFFFFFFF) {\\n      encodeBigNum(buf, uint(value));\\n    } else if(value >= 0) {\\n      encodeFixedNumeric(buf, MAJOR_TYPE_INT, uint64(uint256(value)));\\n    } else {\\n      encodeFixedNumeric(buf, MAJOR_TYPE_NEGATIVE_INT, uint64(uint256(-1 - value)));\\n    }\\n  }\\n\\n  function encodeBytes(BufferChainlink.buffer memory buf, bytes memory value) internal pure {\\n    encodeFixedNumeric(buf, MAJOR_TYPE_BYTES, uint64(value.length));\\n    buf.append(value);\\n  }\\n\\n  function encodeBigNum(BufferChainlink.buffer memory buf, uint value) internal pure {\\n    buf.appendUint8(uint8((MAJOR_TYPE_TAG << 5) | TAG_TYPE_BIGNUM));\\n    encodeBytes(buf, abi.encode(value));\\n  }\\n\\n  function encodeSignedBigNum(BufferChainlink.buffer memory buf, int input) internal pure {\\n    buf.appendUint8(uint8((MAJOR_TYPE_TAG << 5) | TAG_TYPE_NEGATIVE_BIGNUM));\\n    encodeBytes(buf, abi.encode(uint256(-1 - input)));\\n  }\\n\\n  function encodeString(BufferChainlink.buffer memory buf, string memory value) internal pure {\\n    encodeFixedNumeric(buf, MAJOR_TYPE_STRING, uint64(bytes(value).length));\\n    buf.append(bytes(value));\\n  }\\n\\n  function startArray(BufferChainlink.buffer memory buf) internal pure {\\n    encodeIndefiniteLengthType(buf, MAJOR_TYPE_ARRAY);\\n  }\\n\\n  function startMap(BufferChainlink.buffer memory buf) internal pure {\\n    encodeIndefiniteLengthType(buf, MAJOR_TYPE_MAP);\\n  }\\n\\n  function endSequence(BufferChainlink.buffer memory buf) internal pure {\\n    encodeIndefiniteLengthType(buf, MAJOR_TYPE_CONTENT_FREE);\\n  }\\n}\\n\",\"keccak256\":\"0x08bda450d4dc1d17147fd29810234d35e2c437f1a99be733cfa7ee516db08a48\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/vendor/ENSResolver.sol":{"ENSResolver":{"abi":[{"inputs":[{"internalType":"bytes32","name":"node","type":"bytes32"}],"name":"addr","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"addr(bytes32)":"3b3b57de"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"addr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vendor/ENSResolver.sol\":\"ENSResolver\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/vendor/ENSResolver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nabstract contract ENSResolver {\\n  function addr(bytes32 node) public view virtual returns (address);\\n}\\n\",\"keccak256\":\"0x606bda5f3fa27be4cf04f6636dda443b7787b56e87ade988fca2e51d2147613d\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/connectors/Twitter.sol":{"TwitterV1":{"abi":[{"inputs":[{"internalType":"bytes32","name":"_jobId","type":"bytes32"},{"internalType":"string","name":"_requestBaseURI","type":"string"},{"internalType":"address","name":"_oracle","type":"address"},{"internalType":"address","name":"_link","type":"address"},{"internalType":"uint256","name":"_treasuryFee","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"campaignId","type":"uint256"}],"name":"CampaignClosed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"campaignId","type":"uint256"},{"indexed":false,"internalType":"address","name":"company","type":"address"}],"name":"CampaignCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"ChainlinkCancelled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"ChainlinkFulfilled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"ChainlinkRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"campaignId","type":"uint256"},{"indexed":false,"internalType":"address","name":"contributor","type":"address"}],"name":"ContributorAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"campaignId","type":"uint256"},{"indexed":false,"internalType":"address","name":"contributor","type":"address"},{"indexed":false,"internalType":"uint256","name":"retribution","type":"uint256"}],"name":"ContributorRetributed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"userId","type":"uint256"},{"indexed":true,"internalType":"bytes32","name":"requestId","type":"bytes32"}],"name":"SignUpRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"userId","type":"uint256"},{"indexed":false,"internalType":"address","name":"userAddress","type":"address"}],"name":"SignedUp","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"MAX_TREASURY_FEE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_userId","type":"uint256"},{"internalType":"address","name":"_userAddress","type":"address"}],"name":"addUser","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_requestId","type":"bytes32"},{"internalType":"uint256","name":"_payment","type":"uint256"},{"internalType":"bytes4","name":"_callbackFunctionId","type":"bytes4"},{"internalType":"uint256","name":"_expiration","type":"uint256"}],"name":"cancelRequest","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"campaignId","type":"uint256"},{"internalType":"string","name":"postId","type":"string"},{"internalType":"uint256","name":"claimedCounter","type":"uint256"}],"name":"claimCampaignContribution","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"campaignId","type":"uint256"}],"name":"claimCampaignRetribution","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"campaignId","type":"uint256"}],"name":"closeCampaign","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"budget","type":"uint256"},{"internalType":"uint256","name":"validationThreshold","type":"uint256"},{"internalType":"uint256","name":"partakersLimit","type":"uint256"}],"name":"createCampaign","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_requestId","type":"bytes32"},{"internalType":"uint256","name":"_userId","type":"uint256"},{"internalType":"bool","name":"_hasSignedUp","type":"bool"}],"name":"fulfillSignUp","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"campaignId","type":"uint256"}],"name":"getCampaign","outputs":[{"components":[{"internalType":"uint256","name":"campaignId","type":"uint256"},{"internalType":"string","name":"name","type":"string"},{"internalType":"address","name":"company","type":"address"},{"internalType":"uint256","name":"budget","type":"uint256"},{"internalType":"uint256","name":"validationThreshold","type":"uint256"},{"internalType":"uint256","name":"partakersLimit","type":"uint256"},{"internalType":"bool","name":"isClosed","type":"bool"}],"internalType":"struct TwitterV1.Campaign","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_userId","type":"uint256"}],"name":"getSignUpURI","outputs":[{"internalType":"string","name":"_signUpURI","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_twitterId","type":"uint256"}],"name":"getTwitterURI","outputs":[{"internalType":"string","name":"_twitterURI","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"hasSignedUp","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_userId","type":"uint256"}],"name":"hasSignedUp","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"jobId","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"keeper","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"requestBaseURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_requestBaseURI","type":"string"}],"name":"setRequestBaseURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_userId","type":"uint256"}],"name":"signUp","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"treasuryAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"treasuryFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdrawLink","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"addUser(uint256,address)":{"details":"only admin can call this function"},"cancelRequest(bytes32,uint256,bytes4,uint256)":{"details":"only admin can call this function","params":{"_callbackFunctionId":"The bytes4 callback function ID specified for the request to cancel","_expiration":"The expiration generated for the request to cancel","_payment":"The payment specified for the request to cancel","_requestId":"The ID that was generated for the request to cancel"}},"claimCampaignContribution(uint256,string,uint256)":{"params":{"campaignId":"- The id of the campaign"}},"closeCampaign(uint256)":{"params":{"campaignId":"- The id of the campaign"}},"createCampaign(string,uint256,uint256,uint256)":{"params":{"budget":"- Budget each winning partaker will share with each other","partakersLimit":"- Maximum amount of winning partakers for this campaign","validationThreshold":"- Minimum amount of retweet, likes etc for a partaker to win"}},"fulfillSignUp(bytes32,uint256,bool)":{"params":{"_hasSignedUp":"- true if  twitter userId match msg.sender address","_requestId":"- id of the request","_userId":"- twitter user id"}},"hasSignedUp(uint256)":{"params":{"_userId":"- twitter user id"}},"owner()":{"details":"Returns the address of the current owner."},"paused()":{"details":"Returns true if the contract is paused, and false otherwise."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setRequestBaseURI(string)":{"details":"only admin can call this function"},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"withdrawLink()":{"details":"only admin can call this function"}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_2346":{"entryPoint":null,"id":2346,"parameterSlots":5,"returnSlots":0},"@_3045":{"entryPoint":null,"id":3045,"parameterSlots":0,"returnSlots":0},"@_3233":{"entryPoint":null,"id":3233,"parameterSlots":0,"returnSlots":0},"@_3317":{"entryPoint":null,"id":3317,"parameterSlots":0,"returnSlots":0},"@_msgSender_3350":{"entryPoint":254,"id":3350,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_3125":{"entryPoint":262,"id":3125,"parameterSlots":1,"returnSlots":0},"@setChainlinkOracle_656":{"entryPoint":527,"id":656,"parameterSlots":1,"returnSlots":0},"@setChainlinkToken_669":{"entryPoint":459,"id":669,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":771,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":846,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":869,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":892,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":943,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_string_memory_ptrt_addresst_addresst_uint256_fromMemory":{"entryPoint":966,"id":null,"parameterSlots":2,"returnSlots":5},"allocate_memory":{"entryPoint":1133,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":1164,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":1174,"id":null,"parameterSlots":1,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":1228,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":1284,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":1381,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":1401,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1411,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1443,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":1453,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":1507,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":1561,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x11":{"entryPoint":1615,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":1662,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":1709,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1756,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":1803,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":1808,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":1813,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1818,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":1823,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":1840,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":1866,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":1892,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:6538:20","statements":[{"body":{"nodeType":"YulBlock","src":"102:326:20","statements":[{"nodeType":"YulAssignment","src":"112:75:20","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"179:6:20"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"137:41:20"},"nodeType":"YulFunctionCall","src":"137:49:20"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"121:15:20"},"nodeType":"YulFunctionCall","src":"121:66:20"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"112:5:20"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"203:5:20"},{"name":"length","nodeType":"YulIdentifier","src":"210:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"196:6:20"},"nodeType":"YulFunctionCall","src":"196:21:20"},"nodeType":"YulExpressionStatement","src":"196:21:20"},{"nodeType":"YulVariableDeclaration","src":"226:27:20","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"241:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"248:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"237:3:20"},"nodeType":"YulFunctionCall","src":"237:16:20"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"230:3:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"291:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"293:77:20"},"nodeType":"YulFunctionCall","src":"293:79:20"},"nodeType":"YulExpressionStatement","src":"293:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"272:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"277:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"268:3:20"},"nodeType":"YulFunctionCall","src":"268:16:20"},{"name":"end","nodeType":"YulIdentifier","src":"286:3:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"265:2:20"},"nodeType":"YulFunctionCall","src":"265:25:20"},"nodeType":"YulIf","src":"262:2:20"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"405:3:20"},{"name":"dst","nodeType":"YulIdentifier","src":"410:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"415:6:20"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"383:21:20"},"nodeType":"YulFunctionCall","src":"383:39:20"},"nodeType":"YulExpressionStatement","src":"383:39:20"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"75:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"80:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"88:3:20","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"96:5:20","type":""}],"src":"7:421:20"},{"body":{"nodeType":"YulBlock","src":"497:80:20","statements":[{"nodeType":"YulAssignment","src":"507:22:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"522:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"516:5:20"},"nodeType":"YulFunctionCall","src":"516:13:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"507:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"565:5:20"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"538:26:20"},"nodeType":"YulFunctionCall","src":"538:33:20"},"nodeType":"YulExpressionStatement","src":"538:33:20"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"475:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"483:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"491:5:20","type":""}],"src":"434:143:20"},{"body":{"nodeType":"YulBlock","src":"646:80:20","statements":[{"nodeType":"YulAssignment","src":"656:22:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"671:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"665:5:20"},"nodeType":"YulFunctionCall","src":"665:13:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"714:5:20"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"687:26:20"},"nodeType":"YulFunctionCall","src":"687:33:20"},"nodeType":"YulExpressionStatement","src":"687:33:20"}]},"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"624:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"632:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"640:5:20","type":""}],"src":"583:143:20"},{"body":{"nodeType":"YulBlock","src":"819:282:20","statements":[{"body":{"nodeType":"YulBlock","src":"868:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"870:77:20"},"nodeType":"YulFunctionCall","src":"870:79:20"},"nodeType":"YulExpressionStatement","src":"870:79:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"847:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"855:4:20","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"843:3:20"},"nodeType":"YulFunctionCall","src":"843:17:20"},{"name":"end","nodeType":"YulIdentifier","src":"862:3:20"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"839:3:20"},"nodeType":"YulFunctionCall","src":"839:27:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"832:6:20"},"nodeType":"YulFunctionCall","src":"832:35:20"},"nodeType":"YulIf","src":"829:2:20"},{"nodeType":"YulVariableDeclaration","src":"960:27:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"980:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"974:5:20"},"nodeType":"YulFunctionCall","src":"974:13:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"964:6:20","type":""}]},{"nodeType":"YulAssignment","src":"996:99:20","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1068:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"1076:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1064:3:20"},"nodeType":"YulFunctionCall","src":"1064:17:20"},{"name":"length","nodeType":"YulIdentifier","src":"1083:6:20"},{"name":"end","nodeType":"YulIdentifier","src":"1091:3:20"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"1005:58:20"},"nodeType":"YulFunctionCall","src":"1005:90:20"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"996:5:20"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"797:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"805:3:20","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"813:5:20","type":""}],"src":"746:355:20"},{"body":{"nodeType":"YulBlock","src":"1170:80:20","statements":[{"nodeType":"YulAssignment","src":"1180:22:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1195:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1189:5:20"},"nodeType":"YulFunctionCall","src":"1189:13:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1180:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1238:5:20"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1211:26:20"},"nodeType":"YulFunctionCall","src":"1211:33:20"},"nodeType":"YulExpressionStatement","src":"1211:33:20"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1148:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"1156:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1164:5:20","type":""}],"src":"1107:143:20"},{"body":{"nodeType":"YulBlock","src":"1411:995:20","statements":[{"body":{"nodeType":"YulBlock","src":"1458:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1460:77:20"},"nodeType":"YulFunctionCall","src":"1460:79:20"},"nodeType":"YulExpressionStatement","src":"1460:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1432:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"1441:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1428:3:20"},"nodeType":"YulFunctionCall","src":"1428:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"1453:3:20","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1424:3:20"},"nodeType":"YulFunctionCall","src":"1424:33:20"},"nodeType":"YulIf","src":"1421:2:20"},{"nodeType":"YulBlock","src":"1551:128:20","statements":[{"nodeType":"YulVariableDeclaration","src":"1566:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"1580:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1570:6:20","type":""}]},{"nodeType":"YulAssignment","src":"1595:74:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1641:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"1652:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1637:3:20"},"nodeType":"YulFunctionCall","src":"1637:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1661:7:20"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulIdentifier","src":"1605:31:20"},"nodeType":"YulFunctionCall","src":"1605:64:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1595:6:20"}]}]},{"nodeType":"YulBlock","src":"1689:292:20","statements":[{"nodeType":"YulVariableDeclaration","src":"1704:39:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1728:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"1739:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1724:3:20"},"nodeType":"YulFunctionCall","src":"1724:18:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1718:5:20"},"nodeType":"YulFunctionCall","src":"1718:25:20"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1708:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"1790:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"1792:77:20"},"nodeType":"YulFunctionCall","src":"1792:79:20"},"nodeType":"YulExpressionStatement","src":"1792:79:20"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1762:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"1770:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1759:2:20"},"nodeType":"YulFunctionCall","src":"1759:30:20"},"nodeType":"YulIf","src":"1756:2:20"},{"nodeType":"YulAssignment","src":"1887:84:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1943:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"1954:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1939:3:20"},"nodeType":"YulFunctionCall","src":"1939:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1963:7:20"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"1897:41:20"},"nodeType":"YulFunctionCall","src":"1897:74:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1887:6:20"}]}]},{"nodeType":"YulBlock","src":"1991:129:20","statements":[{"nodeType":"YulVariableDeclaration","src":"2006:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"2020:2:20","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2010:6:20","type":""}]},{"nodeType":"YulAssignment","src":"2036:74:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2082:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"2093:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2078:3:20"},"nodeType":"YulFunctionCall","src":"2078:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2102:7:20"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"2046:31:20"},"nodeType":"YulFunctionCall","src":"2046:64:20"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2036:6:20"}]}]},{"nodeType":"YulBlock","src":"2130:129:20","statements":[{"nodeType":"YulVariableDeclaration","src":"2145:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"2159:2:20","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2149:6:20","type":""}]},{"nodeType":"YulAssignment","src":"2175:74:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2221:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"2232:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2217:3:20"},"nodeType":"YulFunctionCall","src":"2217:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2241:7:20"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"2185:31:20"},"nodeType":"YulFunctionCall","src":"2185:64:20"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"2175:6:20"}]}]},{"nodeType":"YulBlock","src":"2269:130:20","statements":[{"nodeType":"YulVariableDeclaration","src":"2284:17:20","value":{"kind":"number","nodeType":"YulLiteral","src":"2298:3:20","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2288:6:20","type":""}]},{"nodeType":"YulAssignment","src":"2315:74:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2361:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"2372:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2357:3:20"},"nodeType":"YulFunctionCall","src":"2357:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2381:7:20"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"2325:31:20"},"nodeType":"YulFunctionCall","src":"2325:64:20"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"2315:6:20"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_string_memory_ptrt_addresst_addresst_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1349:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1360:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1372:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1380:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1388:6:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1396:6:20","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1404:6:20","type":""}],"src":"1256:1150:20"},{"body":{"nodeType":"YulBlock","src":"2453:88:20","statements":[{"nodeType":"YulAssignment","src":"2463:30:20","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"2473:18:20"},"nodeType":"YulFunctionCall","src":"2473:20:20"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2463:6:20"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2522:6:20"},{"name":"size","nodeType":"YulIdentifier","src":"2530:4:20"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"2502:19:20"},"nodeType":"YulFunctionCall","src":"2502:33:20"},"nodeType":"YulExpressionStatement","src":"2502:33:20"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"2437:4:20","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2446:6:20","type":""}],"src":"2412:129:20"},{"body":{"nodeType":"YulBlock","src":"2587:35:20","statements":[{"nodeType":"YulAssignment","src":"2597:19:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2613:2:20","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2607:5:20"},"nodeType":"YulFunctionCall","src":"2607:9:20"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2597:6:20"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2580:6:20","type":""}],"src":"2547:75:20"},{"body":{"nodeType":"YulBlock","src":"2695:241:20","statements":[{"body":{"nodeType":"YulBlock","src":"2800:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2802:16:20"},"nodeType":"YulFunctionCall","src":"2802:18:20"},"nodeType":"YulExpressionStatement","src":"2802:18:20"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2772:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"2780:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2769:2:20"},"nodeType":"YulFunctionCall","src":"2769:30:20"},"nodeType":"YulIf","src":"2766:2:20"},{"nodeType":"YulAssignment","src":"2832:37:20","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2862:6:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2840:21:20"},"nodeType":"YulFunctionCall","src":"2840:29:20"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2832:4:20"}]},{"nodeType":"YulAssignment","src":"2906:23:20","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2918:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"2924:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2914:3:20"},"nodeType":"YulFunctionCall","src":"2914:15:20"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2906:4:20"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"2679:6:20","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"2690:4:20","type":""}],"src":"2628:308:20"},{"body":{"nodeType":"YulBlock","src":"2984:143:20","statements":[{"nodeType":"YulAssignment","src":"2994:25:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3017:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2999:17:20"},"nodeType":"YulFunctionCall","src":"2999:20:20"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"2994:1:20"}]},{"nodeType":"YulAssignment","src":"3028:25:20","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"3051:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3033:17:20"},"nodeType":"YulFunctionCall","src":"3033:20:20"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"3028:1:20"}]},{"body":{"nodeType":"YulBlock","src":"3075:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"3077:16:20"},"nodeType":"YulFunctionCall","src":"3077:18:20"},"nodeType":"YulExpressionStatement","src":"3077:18:20"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"3072:1:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3065:6:20"},"nodeType":"YulFunctionCall","src":"3065:9:20"},"nodeType":"YulIf","src":"3062:2:20"},{"nodeType":"YulAssignment","src":"3107:14:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3116:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"3119:1:20"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3112:3:20"},"nodeType":"YulFunctionCall","src":"3112:9:20"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"3107:1:20"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"2973:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"2976:1:20","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"2982:1:20","type":""}],"src":"2942:185:20"},{"body":{"nodeType":"YulBlock","src":"3181:300:20","statements":[{"nodeType":"YulAssignment","src":"3191:25:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3214:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3196:17:20"},"nodeType":"YulFunctionCall","src":"3196:20:20"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"3191:1:20"}]},{"nodeType":"YulAssignment","src":"3225:25:20","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"3248:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3230:17:20"},"nodeType":"YulFunctionCall","src":"3230:20:20"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"3225:1:20"}]},{"body":{"nodeType":"YulBlock","src":"3423:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"3425:16:20"},"nodeType":"YulFunctionCall","src":"3425:18:20"},"nodeType":"YulExpressionStatement","src":"3425:18:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3335:1:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3328:6:20"},"nodeType":"YulFunctionCall","src":"3328:9:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3321:6:20"},"nodeType":"YulFunctionCall","src":"3321:17:20"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"3343:1:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3350:66:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"3418:1:20"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3346:3:20"},"nodeType":"YulFunctionCall","src":"3346:74:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3340:2:20"},"nodeType":"YulFunctionCall","src":"3340:81:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3317:3:20"},"nodeType":"YulFunctionCall","src":"3317:105:20"},"nodeType":"YulIf","src":"3314:2:20"},{"nodeType":"YulAssignment","src":"3455:20:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3470:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"3473:1:20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3466:3:20"},"nodeType":"YulFunctionCall","src":"3466:9:20"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"3455:7:20"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"3164:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"3167:1:20","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"3173:7:20","type":""}],"src":"3133:348:20"},{"body":{"nodeType":"YulBlock","src":"3532:51:20","statements":[{"nodeType":"YulAssignment","src":"3542:35:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3571:5:20"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3553:17:20"},"nodeType":"YulFunctionCall","src":"3553:24:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3542:7:20"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3514:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3524:7:20","type":""}],"src":"3487:96:20"},{"body":{"nodeType":"YulBlock","src":"3634:32:20","statements":[{"nodeType":"YulAssignment","src":"3644:16:20","value":{"name":"value","nodeType":"YulIdentifier","src":"3655:5:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3644:7:20"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3616:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3626:7:20","type":""}],"src":"3589:77:20"},{"body":{"nodeType":"YulBlock","src":"3717:81:20","statements":[{"nodeType":"YulAssignment","src":"3727:65:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3742:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"3749:42:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3738:3:20"},"nodeType":"YulFunctionCall","src":"3738:54:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3727:7:20"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3699:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3709:7:20","type":""}],"src":"3672:126:20"},{"body":{"nodeType":"YulBlock","src":"3849:32:20","statements":[{"nodeType":"YulAssignment","src":"3859:16:20","value":{"name":"value","nodeType":"YulIdentifier","src":"3870:5:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3859:7:20"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3831:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3841:7:20","type":""}],"src":"3804:77:20"},{"body":{"nodeType":"YulBlock","src":"3936:258:20","statements":[{"nodeType":"YulVariableDeclaration","src":"3946:10:20","value":{"kind":"number","nodeType":"YulLiteral","src":"3955:1:20","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3950:1:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"4015:63:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4040:3:20"},{"name":"i","nodeType":"YulIdentifier","src":"4045:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4036:3:20"},"nodeType":"YulFunctionCall","src":"4036:11:20"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4059:3:20"},{"name":"i","nodeType":"YulIdentifier","src":"4064:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4055:3:20"},"nodeType":"YulFunctionCall","src":"4055:11:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4049:5:20"},"nodeType":"YulFunctionCall","src":"4049:18:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4029:6:20"},"nodeType":"YulFunctionCall","src":"4029:39:20"},"nodeType":"YulExpressionStatement","src":"4029:39:20"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3976:1:20"},{"name":"length","nodeType":"YulIdentifier","src":"3979:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3973:2:20"},"nodeType":"YulFunctionCall","src":"3973:13:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3987:19:20","statements":[{"nodeType":"YulAssignment","src":"3989:15:20","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3998:1:20"},{"kind":"number","nodeType":"YulLiteral","src":"4001:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3994:3:20"},"nodeType":"YulFunctionCall","src":"3994:10:20"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3989:1:20"}]}]},"pre":{"nodeType":"YulBlock","src":"3969:3:20","statements":[]},"src":"3965:113:20"},{"body":{"nodeType":"YulBlock","src":"4112:76:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4162:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"4167:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4158:3:20"},"nodeType":"YulFunctionCall","src":"4158:16:20"},{"kind":"number","nodeType":"YulLiteral","src":"4176:1:20","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4151:6:20"},"nodeType":"YulFunctionCall","src":"4151:27:20"},"nodeType":"YulExpressionStatement","src":"4151:27:20"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4093:1:20"},{"name":"length","nodeType":"YulIdentifier","src":"4096:6:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4090:2:20"},"nodeType":"YulFunctionCall","src":"4090:13:20"},"nodeType":"YulIf","src":"4087:2:20"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"3918:3:20","type":""},{"name":"dst","nodeType":"YulTypedName","src":"3923:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"3928:6:20","type":""}],"src":"3887:307:20"},{"body":{"nodeType":"YulBlock","src":"4251:269:20","statements":[{"nodeType":"YulAssignment","src":"4261:22:20","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4275:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"4281:1:20","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4271:3:20"},"nodeType":"YulFunctionCall","src":"4271:12:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4261:6:20"}]},{"nodeType":"YulVariableDeclaration","src":"4292:38:20","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4322:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"4328:1:20","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4318:3:20"},"nodeType":"YulFunctionCall","src":"4318:12:20"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"4296:18:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"4369:51:20","statements":[{"nodeType":"YulAssignment","src":"4383:27:20","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4397:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"4405:4:20","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4393:3:20"},"nodeType":"YulFunctionCall","src":"4393:17:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4383:6:20"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4349:18:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4342:6:20"},"nodeType":"YulFunctionCall","src":"4342:26:20"},"nodeType":"YulIf","src":"4339:2:20"},{"body":{"nodeType":"YulBlock","src":"4472:42:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"4486:16:20"},"nodeType":"YulFunctionCall","src":"4486:18:20"},"nodeType":"YulExpressionStatement","src":"4486:18:20"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4436:18:20"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4459:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"4467:2:20","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4456:2:20"},"nodeType":"YulFunctionCall","src":"4456:14:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4433:2:20"},"nodeType":"YulFunctionCall","src":"4433:38:20"},"nodeType":"YulIf","src":"4430:2:20"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4235:4:20","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4244:6:20","type":""}],"src":"4200:320:20"},{"body":{"nodeType":"YulBlock","src":"4569:238:20","statements":[{"nodeType":"YulVariableDeclaration","src":"4579:58:20","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4601:6:20"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"4631:4:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4609:21:20"},"nodeType":"YulFunctionCall","src":"4609:27:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4597:3:20"},"nodeType":"YulFunctionCall","src":"4597:40:20"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"4583:10:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"4748:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4750:16:20"},"nodeType":"YulFunctionCall","src":"4750:18:20"},"nodeType":"YulExpressionStatement","src":"4750:18:20"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4691:10:20"},{"kind":"number","nodeType":"YulLiteral","src":"4703:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4688:2:20"},"nodeType":"YulFunctionCall","src":"4688:34:20"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4727:10:20"},{"name":"memPtr","nodeType":"YulIdentifier","src":"4739:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4724:2:20"},"nodeType":"YulFunctionCall","src":"4724:22:20"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4685:2:20"},"nodeType":"YulFunctionCall","src":"4685:62:20"},"nodeType":"YulIf","src":"4682:2:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4786:2:20","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4790:10:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4779:6:20"},"nodeType":"YulFunctionCall","src":"4779:22:20"},"nodeType":"YulExpressionStatement","src":"4779:22:20"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"4555:6:20","type":""},{"name":"size","nodeType":"YulTypedName","src":"4563:4:20","type":""}],"src":"4526:281:20"},{"body":{"nodeType":"YulBlock","src":"4841:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4858:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4861:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4851:6:20"},"nodeType":"YulFunctionCall","src":"4851:88:20"},"nodeType":"YulExpressionStatement","src":"4851:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4955:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4958:4:20","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4948:6:20"},"nodeType":"YulFunctionCall","src":"4948:15:20"},"nodeType":"YulExpressionStatement","src":"4948:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4979:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4982:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4972:6:20"},"nodeType":"YulFunctionCall","src":"4972:15:20"},"nodeType":"YulExpressionStatement","src":"4972:15:20"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"4813:180:20"},{"body":{"nodeType":"YulBlock","src":"5027:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5044:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5047:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5037:6:20"},"nodeType":"YulFunctionCall","src":"5037:88:20"},"nodeType":"YulExpressionStatement","src":"5037:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5141:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5144:4:20","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5134:6:20"},"nodeType":"YulFunctionCall","src":"5134:15:20"},"nodeType":"YulExpressionStatement","src":"5134:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5165:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5168:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5158:6:20"},"nodeType":"YulFunctionCall","src":"5158:15:20"},"nodeType":"YulExpressionStatement","src":"5158:15:20"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"4999:180:20"},{"body":{"nodeType":"YulBlock","src":"5213:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5230:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5233:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5223:6:20"},"nodeType":"YulFunctionCall","src":"5223:88:20"},"nodeType":"YulExpressionStatement","src":"5223:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5327:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5330:4:20","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5320:6:20"},"nodeType":"YulFunctionCall","src":"5320:15:20"},"nodeType":"YulExpressionStatement","src":"5320:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5351:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5354:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5344:6:20"},"nodeType":"YulFunctionCall","src":"5344:15:20"},"nodeType":"YulExpressionStatement","src":"5344:15:20"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"5185:180:20"},{"body":{"nodeType":"YulBlock","src":"5399:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5416:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5419:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5409:6:20"},"nodeType":"YulFunctionCall","src":"5409:88:20"},"nodeType":"YulExpressionStatement","src":"5409:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5513:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5516:4:20","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5506:6:20"},"nodeType":"YulFunctionCall","src":"5506:15:20"},"nodeType":"YulExpressionStatement","src":"5506:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5537:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5540:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5530:6:20"},"nodeType":"YulFunctionCall","src":"5530:15:20"},"nodeType":"YulExpressionStatement","src":"5530:15:20"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"5371:180:20"},{"body":{"nodeType":"YulBlock","src":"5646:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5663:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5666:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5656:6:20"},"nodeType":"YulFunctionCall","src":"5656:12:20"},"nodeType":"YulExpressionStatement","src":"5656:12:20"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"5557:117:20"},{"body":{"nodeType":"YulBlock","src":"5769:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5786:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5789:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5779:6:20"},"nodeType":"YulFunctionCall","src":"5779:12:20"},"nodeType":"YulExpressionStatement","src":"5779:12:20"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"5680:117:20"},{"body":{"nodeType":"YulBlock","src":"5892:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5909:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5912:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5902:6:20"},"nodeType":"YulFunctionCall","src":"5902:12:20"},"nodeType":"YulExpressionStatement","src":"5902:12:20"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"5803:117:20"},{"body":{"nodeType":"YulBlock","src":"6015:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6032:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6035:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6025:6:20"},"nodeType":"YulFunctionCall","src":"6025:12:20"},"nodeType":"YulExpressionStatement","src":"6025:12:20"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"5926:117:20"},{"body":{"nodeType":"YulBlock","src":"6097:54:20","statements":[{"nodeType":"YulAssignment","src":"6107:38:20","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6125:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"6132:2:20","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6121:3:20"},"nodeType":"YulFunctionCall","src":"6121:14:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6141:2:20","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6137:3:20"},"nodeType":"YulFunctionCall","src":"6137:7:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6117:3:20"},"nodeType":"YulFunctionCall","src":"6117:28:20"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"6107:6:20"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6080:5:20","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"6090:6:20","type":""}],"src":"6049:102:20"},{"body":{"nodeType":"YulBlock","src":"6200:79:20","statements":[{"body":{"nodeType":"YulBlock","src":"6257:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6266:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6269:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6259:6:20"},"nodeType":"YulFunctionCall","src":"6259:12:20"},"nodeType":"YulExpressionStatement","src":"6259:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6223:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6248:5:20"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"6230:17:20"},"nodeType":"YulFunctionCall","src":"6230:24:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6220:2:20"},"nodeType":"YulFunctionCall","src":"6220:35:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6213:6:20"},"nodeType":"YulFunctionCall","src":"6213:43:20"},"nodeType":"YulIf","src":"6210:2:20"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6193:5:20","type":""}],"src":"6157:122:20"},{"body":{"nodeType":"YulBlock","src":"6328:79:20","statements":[{"body":{"nodeType":"YulBlock","src":"6385:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6394:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6397:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6387:6:20"},"nodeType":"YulFunctionCall","src":"6387:12:20"},"nodeType":"YulExpressionStatement","src":"6387:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6351:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6376:5:20"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"6358:17:20"},"nodeType":"YulFunctionCall","src":"6358:24:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6348:2:20"},"nodeType":"YulFunctionCall","src":"6348:35:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6341:6:20"},"nodeType":"YulFunctionCall","src":"6341:43:20"},"nodeType":"YulIf","src":"6338:2:20"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6321:5:20","type":""}],"src":"6285:122:20"},{"body":{"nodeType":"YulBlock","src":"6456:79:20","statements":[{"body":{"nodeType":"YulBlock","src":"6513:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6522:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6525:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6515:6:20"},"nodeType":"YulFunctionCall","src":"6515:12:20"},"nodeType":"YulExpressionStatement","src":"6515:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6479:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6504:5:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6486:17:20"},"nodeType":"YulFunctionCall","src":"6486:24:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6476:2:20"},"nodeType":"YulFunctionCall","src":"6476:35:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6469:6:20"},"nodeType":"YulFunctionCall","src":"6469:43:20"},"nodeType":"YulIf","src":"6466:2:20"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6449:5:20","type":""}],"src":"6413:122:20"}]},"contents":"{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_string_memory_ptrt_addresst_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":20,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60c060405260016006553480156200001657600080fd5b50604051620049713803806200497183398181016040528101906200003c9190620003c6565b60008060006101000a81548160ff021916908315150217905550620000766200006a620000fe60201b60201c565b6200010660201b60201c565b600180819055506200008e82620001cb60201b60201c565b6200009f836200020f60201b60201c565b8460808181525050600a670de0b6b3a76400006001620000c0919062000504565b620000cc9190620004cc565b60a08181525050806011819055508360099080519060200190620000f292919062000253565b5050505050506200077e565b600033905090565b60008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b8280546200026190620005e3565b90600052602060002090601f016020900481019282620002855760008555620002d1565b82601f10620002a057805160ff1916838001178555620002d1565b82800160010185558215620002d1579182015b82811115620002d0578251825591602001919060010190620002b3565b5b509050620002e09190620002e4565b5090565b5b80821115620002ff576000816000905550600101620002e5565b5090565b60006200031a620003148462000496565b6200046d565b90508281526020810184848401111562000339576200033862000710565b5b62000346848285620005ad565b509392505050565b6000815190506200035f8162000730565b92915050565b60008151905062000376816200074a565b92915050565b600082601f8301126200039457620003936200070b565b5b8151620003a684826020860162000303565b91505092915050565b600081519050620003c08162000764565b92915050565b600080600080600060a08688031215620003e557620003e46200071a565b5b6000620003f58882890162000365565b955050602086015167ffffffffffffffff81111562000419576200041862000715565b5b62000427888289016200037c565b94505060406200043a888289016200034e565b93505060606200044d888289016200034e565b92505060806200046088828901620003af565b9150509295509295909350565b6000620004796200048c565b905062000487828262000619565b919050565b6000604051905090565b600067ffffffffffffffff821115620004b457620004b3620006dc565b5b620004bf826200071f565b9050602081019050919050565b6000620004d982620005a3565b9150620004e683620005a3565b925082620004f957620004f86200067e565b5b828204905092915050565b60006200051182620005a3565b91506200051e83620005a3565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156200055a57620005596200064f565b5b828202905092915050565b6000620005728262000583565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015620005cd578082015181840152602081019050620005b0565b83811115620005dd576000848401525b50505050565b60006002820490506001821680620005fc57607f821691505b60208210811415620006135762000612620006ad565b5b50919050565b62000624826200071f565b810181811067ffffffffffffffff82111715620006465762000645620006dc565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6200073b8162000565565b81146200074757600080fd5b50565b620007558162000579565b81146200076157600080fd5b50565b6200076f81620005a3565b81146200077b57600080fd5b50565b60805160a0516141c6620007ab600039600061161f015260008181611156015261151701526141c66000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c8063a9654ad4116100de578063c2939d9711610097578063ec65d0f811610071578063ec65d0f814610400578063ec8f04e91461041c578063f2b3c80914610438578063f2fde38b1461045657610173565b8063c2939d97146103a6578063cc32d176146103c4578063dc4d5efb146103e257610173565b8063a9654ad4146102d4578063aa2bdef914610304578063aced166114610334578063b0e1c1e114610352578063b1d3c7001461036e578063b5a898ae1461038a57610173565b80635c975abb116101305780635c975abb1461024a5780635ec4bc3814610268578063715018a6146102865780638da5cb5b146102905780638dc654a2146102ae578063a4e336c3146102b857610173565b80630a944292146101785780631fc645c7146101a8578063368acb09146101c45780634a732795146101e25780635598f8cc146101fe57806358d9fa041461022e575b600080fd5b610192600480360381019061018d9190612c1b565b610472565b60405161019f9190613441565b60405180910390f35b6101c260048036038101906101bd9190612c1b565b6104a0565b005b6101cc6104fc565b6040516101d99190613645565b60405180910390f35b6101fc60048036038101906101f79190612c1b565b610502565b005b61021860048036038101906102139190612c1b565b6106e0565b6040516102259190613623565b60405180910390f35b61024860048036038101906102439190612c75565b61082e565b005b6102526108d7565b60405161025f91906133c6565b60405180910390f35b6102706108ed565b60405161027d91906133c6565b60405180910390f35b61028e61096f565b005b6102986109f7565b6040516102a591906132bf565b60405180910390f35b6102b6610a20565b005b6102d260048036038101906102cd9190612a8c565b610bff565b005b6102ee60048036038101906102e99190612c1b565b610d3e565b6040516102fb91906133c6565b60405180910390f35b61031e60048036038101906103199190612c1b565b610d5b565b60405161032b9190613441565b60405180910390f35b61033c610d87565b60405161034991906132bf565b60405180910390f35b61036c60048036038101906103679190612c1b565b610dad565b005b61038860048036038101906103839190612cb5565b610ea4565b005b6103a4600480360381019061039f9190612b93565b610f43565b005b6103ae611154565b6040516103bb91906133e1565b60405180910390f35b6103cc611178565b6040516103d99190613645565b60405180910390f35b6103ea61117e565b6040516103f79190613441565b60405180910390f35b61041a60048036038101906104159190612adf565b61120c565b005b61043660048036038101906104319190612b46565b611293565b005b61044061131e565b60405161044d9190613645565b60405180910390f35b610470600480360381019061046b9190612a32565b611324565b005b60606009468360405160200161048a93929190613265565b6040516020818303038152906040529050919050565b6104b68133600a61141c9092919063ffffffff16565b50807f98eacf4f33e6a76b9b0916f3a1f00cbfe38f5728e60c71cdec75362365c23a15336040516104e791906132bf565b60405180910390a26104f881611451565b5050565b60125481565b6000601060008381526020019081526020016000209050600115158160010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146105ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a590613483565b60405180910390fd5b600015158160020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514610643576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063a90613583565b60405180910390fd5b600061064e8361167d565b9050610659836116ad565b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561069f573d6000803e3d6000fd5b507f834b5fc2655a3b64cb9dfbbf39cb1b67bff9e533ab318dbb3677e4edcf9dc25d8333836040516106d393929190613689565b60405180910390a1505050565b6106e86126cd565b6106f182611722565b6040518060e00160405290816000820154815260200160018201805461071690613ae9565b80601f016020809104026020016040519081016040528092919081815260200182805461074290613ae9565b801561078f5780601f106107645761010080835404028352916020019161078f565b820191906000526020600020905b81548152906001019060200180831161077257829003601f168201915b505050505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820154815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff1615151515815250509050919050565b6108366109f7565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089a90613543565b60405180910390fd5b6108b782600a61173e90919063ffffffff16565b6108d3576108d18282600a61141c9092919063ffffffff16565b505b5050565b60008060009054906101000a900460ff16905090565b6000806000905060005b610901600a611758565b811015610967573373ffffffffffffffffffffffffffffffffffffffff1661093382600a61176d90919063ffffffff16565b73ffffffffffffffffffffffffffffffffffffffff16141561095457600191505b808061095f90613b4c565b9150506108f7565b508091505090565b61097761178a565b73ffffffffffffffffffffffffffffffffffffffff166109956109f7565b73ffffffffffffffffffffffffffffffffffffffff16146109eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e290613523565b60405180910390fd5b6109f56000611792565b565b60008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610a286109f7565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8c90613543565b60405180910390fd5b6000610a9f611857565b90508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb610ac56109f7565b8373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610afe91906132bf565b60206040518083038186803b158015610b1657600080fd5b505afa158015610b2a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4e9190612c48565b6040518363ffffffff1660e01b8152600401610b6b9291906132da565b602060405180830381600087803b158015610b8557600080fd5b505af1158015610b99573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bbd9190612a5f565b610bfc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf390613503565b60405180910390fd5b50565b826007600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ca1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c98906135e3565b60405180910390fd5b6007600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055807f7cc135e0cebb02c3480ae5d74d377283180a2601f8f644edf7987b009316c63a60405160405180910390a281610d1f57610d1d83600a61188190919063ffffffff16565b505b6000610d3584600a61176d90919063ffffffff16565b90505050505050565b6000610d5482600a61173e90919063ffffffff16565b9050919050565b6060600982604051602001610d71929190613232565b6040516020818303038152906040529050919050565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610db882611722565b90508060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4390613563565b60405180910390fd5b60018160060160006101000a81548160ff0219169083151502179055507f5e6eb33a418de5dbbc17f989f7ae362cdfbb1748c5d603137c767027a354edbc82604051610e989190613645565b60405180910390a15050565b6000610eb184848461189b565b90506001151581151514610efa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef1906135a3565b60405180910390fd5b610f0484336118bb565b7f7c29733edbbbc7f83fc8c5fb3231ab4c21421e8da3e7bb05cddc0c2be2d0cf658433604051610f35929190613660565b60405180910390a150505050565b600d6000815480929190610f5690613b4c565b91905055506000600d5490506000600f600083815260200190815260200160002090508481600301819055508686826001019190610f95929190612722565b50838160040181905550828160050181905550338160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008160060160006101000a81548160ff021916908315150217905550600e81908060018154018082558091505060019003906000526020600020906007020160009091909190915060008201548160000155600182018160010190805461105290613ae9565b61105d9291906127a8565b506002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506003820154816003015560048201548160040155600582015481600501556006820160009054906101000a900460ff168160060160006101000a81548160ff02191690831515021790555050507f633109eec20320eded000fc1e2634211aa7e92ba3f5b15faf6dcdafca05094e48233604051611143929190613660565b60405180910390a150505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60115481565b6009805461118b90613ae9565b80601f01602080910402602001604051908101604052809291908181526020018280546111b790613ae9565b80156112045780601f106111d957610100808354040283529160200191611204565b820191906000526020600020905b8154815290600101906020018083116111e757829003601f168201915b505050505081565b6112146109f7565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611281576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161127890613543565b60405180910390fd5b61128d84848484611a3c565b50505050565b61129b6109f7565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611308576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112ff90613543565b60405180910390fd5b818160099190611319929190612722565b505050565b6103e881565b61132c61178a565b73ffffffffffffffffffffffffffffffffffffffff1661134a6109f7565b73ffffffffffffffffffffffffffffffffffffffff16146113a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161139790613523565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611410576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611407906134a3565b60405180910390fd5b61141981611792565b50565b6000611448846000018460001b8473ffffffffffffffffffffffffffffffffffffffff1660001b611b4f565b90509392505050565b600061145b6109f7565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146114c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114bf90613543565b60405180910390fd5b6114d06108d7565b15611510576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611507906134e3565b60405180910390fd5b60006115447f00000000000000000000000000000000000000000000000000000000000000003063a4e336c360e01b611b8a565b90506115986040518060400160405280600381526020017f676574000000000000000000000000000000000000000000000000000000000081525061158885610d5b565b83611bbb9092919063ffffffff16565b6116176040518060400160405280600481526020017f70617468000000000000000000000000000000000000000000000000000000008152506040518060400160405280600b81526020017f6861735369676e6564557000000000000000000000000000000000000000000081525083611bbb9092919063ffffffff16565b6000611643827f0000000000000000000000000000000000000000000000000000000000000000611bee565b905080847fbe1937b7feca9c000f1f748ebba989954549c773449bbab49ab3d6f796af50d760405160405180910390a38092505050919050565b60008061168983611722565b90506000816005015482600301546116a191906137d5565b90508092505050919050565b600060106000838152602001908152602001600020905060018160020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6000600f60008381526020019081526020016000209050919050565b6000611750836000018360001b611c25565b905092915050565b600061176682600001611c45565b9050919050565b600061177f836000018360001b611c5a565b60001c905092915050565b600033905090565b60008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000611893836000018360001b611cd6565b905092915050565b6000806118a785611722565b905080600401548310159150509392505050565b60006118c683611722565b9050600060106000858152602001908152602001600020905080600001548260050154101561192a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161192190613603565b60405180910390fd5b600015158260060160009054906101000a900460ff16151514611982576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161197990613463565b60405180910390fd5b60018160010160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060008160020160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050505050565b60006007600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506007600086815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055847fe1fe3afa0f7f761ff0a8b89086790efd5140d2907ebd5b7ff6bfcb5e075fd4c560405160405180910390a28073ffffffffffffffffffffffffffffffffffffffff16636ee4d553868686866040518563ffffffff1660e01b8152600401611b1694939291906133fc565b600060405180830381600087803b158015611b3057600080fd5b505af1158015611b44573d6000803e3d6000fd5b505050505050505050565b60008184600201600085815260200190815260200160002081905550611b818385600001611d0f90919063ffffffff16565b90509392505050565b611b92612835565b611b9a612835565b611bb185858584611d26909392919063ffffffff16565b9150509392505050565b611bd2828460800151611dd690919063ffffffff16565b611be9818460800151611dd690919063ffffffff16565b505050565b6000611c1d600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168484611dfb565b905092915050565b6000611c3d8284600001611ec790919063ffffffff16565b905092915050565b6000611c5382600001611ede565b9050919050565b6000808360020160008481526020019081526020016000205490506000801b81141580611c8d5750611c8c8484611c25565b5b611ccc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cc3906135c3565b60405180910390fd5b8091505092915050565b600082600201600083815260200190815260200160002060009055611d078284600001611ef390919063ffffffff16565b905092915050565b6000611d1e8360000183611f0a565b905092915050565b611d2e612835565b611d3e8560800151610100611f7a565b508385600001818152505082856020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508185604001907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681525050849050949350505050565b611de38260038351611fe4565b611df6818361216990919063ffffffff16565b505050565b6000806006549050600181611e10919061377f565b6006819055506000634042994660e01b60008087600001513089604001518760018c6080015160000151604051602401611e51989796959493929190613303565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050611ebc8683868461218b565b925050509392505050565b6000611ed6836000018361232f565b905092915050565b6000611eec82600001612352565b9050919050565b6000611f028360000183612363565b905092915050565b6000611f16838361232f565b611f6f578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050611f74565b600090505b92915050565b611f826128a2565b6000602083611f919190613bc3565b14611fbd57602082611fa39190613bc3565b6020611faf91906139d1565b82611fba919061377f565b91505b81836020018181525050604051808452600081528281016020016040525082905092915050565b60178167ffffffffffffffff161161201b576120158160058460ff16901b60ff16178461247790919063ffffffff16565b50612164565b60ff8167ffffffffffffffff16116120715761204a601860058460ff16901b178461247790919063ffffffff16565b5061206b8167ffffffffffffffff166001856124979092919063ffffffff16565b50612163565b61ffff8167ffffffffffffffff16116120c8576120a1601960058460ff16901b178461247790919063ffffffff16565b506120c28167ffffffffffffffff166002856124979092919063ffffffff16565b50612162565b63ffffffff8167ffffffffffffffff1611612121576120fa601a60058460ff16901b178461247790919063ffffffff16565b5061211b8167ffffffffffffffff166004856124979092919063ffffffff16565b50612161565b61213e601b60058460ff16901b178461247790919063ffffffff16565b5061215f8167ffffffffffffffff166008856124979092919063ffffffff16565b505b5b5b5b505050565b6121716128a2565b612183838460000151518485516124b9565b905092915050565b600030846040516020016121a0929190613206565b604051602081830303815290604052805190602001209050846007600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550807fb5e6e01e79f91267dc17b4e6314d5d4d03593d2ceee0fbb452b750bd70ea5af960405160405180910390a2600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634000aea08685856040518463ffffffff1660e01b815260040161229693929190613388565b602060405180830381600087803b1580156122b057600080fd5b505af11580156122c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122e89190612a5f565b612327576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161231e906134c3565b60405180910390fd5b949350505050565b600080836001016000848152602001908152602001600020541415905092915050565b600081600001805490509050919050565b6000808360010160008481526020019081526020016000205490506000811461246b57600060018261239591906139d1565b90506000600186600001805490506123ad91906139d1565b905081811461241c5760008660000182815481106123ce576123cd613cb0565b5b90600052602060002001549050808760000184815481106123f2576123f1613cb0565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b856000018054806124305761242f613c81565b5b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050612471565b60009150505b92915050565b61247f6128a2565b61248f83846000015151846125a8565b905092915050565b61249f6128a2565b6124b08485600001515185856125ff565b90509392505050565b6124c16128a2565b82518211156124cf57600080fd5b846020015182856124e0919061377f565b11156125155761251485600261250588602001518887612500919061377f565b61268d565b61250f9190613977565b6126a9565b5b6000808651805187602083010193508088870111156125345787860182525b60208701925050505b6020841061257b5780518252602082612556919061377f565b9150602081612565919061377f565b905060208461257491906139d1565b935061253d565b60006001856020036101000a03905080198251168184511681811785525050508692505050949350505050565b6125b06128a2565b836020015183106125d6576125d584600286602001516125d09190613977565b6126a9565b5b83518051602085830101848153818614156125f2576001820183525b5050508390509392505050565b6126076128a2565b84602001518483612618919061377f565b11156126405761263f8560028685612630919061377f565b61263a9190613977565b6126a9565b5b60006001836101006126529190613859565b61265c91906139d1565b9050855183868201018583198251161781528151858801111561267f5784870182525b505085915050949350505050565b60008183111561269f578290506126a3565b8190505b92915050565b6000826000015190506126bc8383611f7a565b506126c78382612169565b50505050565b6040518060e001604052806000815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081526020016000151581525090565b82805461272e90613ae9565b90600052602060002090601f0160209004810192826127505760008555612797565b82601f1061276957803560ff1916838001178555612797565b82800160010185558215612797579182015b8281111561279657823582559160200191906001019061277b565b5b5090506127a491906128bc565b5090565b8280546127b490613ae9565b90600052602060002090601f0160209004810192826127d65760008555612824565b82601f106127e75780548555612824565b8280016001018555821561282457600052602060002091601f016020900482015b82811115612823578254825591600101919060010190612808565b5b50905061283191906128bc565b5090565b6040518060a0016040528060008019168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020016000815260200161289c6128a2565b81525090565b604051806040016040528060608152602001600081525090565b5b808211156128d55760008160009055506001016128bd565b5090565b60006128ec6128e7846136e5565b6136c0565b90508281526020810184848401111561290857612907613d1d565b5b612913848285613aa7565b509392505050565b60008135905061292a8161411d565b92915050565b60008135905061293f81614134565b92915050565b60008151905061295481614134565b92915050565b6000813590506129698161414b565b92915050565b60008135905061297e81614162565b92915050565b60008083601f84011261299a57612999613d13565b5b8235905067ffffffffffffffff8111156129b7576129b6613d0e565b5b6020830191508360018202830111156129d3576129d2613d18565b5b9250929050565b600082601f8301126129ef576129ee613d13565b5b81356129ff8482602086016128d9565b91505092915050565b600081359050612a1781614179565b92915050565b600081519050612a2c81614179565b92915050565b600060208284031215612a4857612a47613d27565b5b6000612a568482850161291b565b91505092915050565b600060208284031215612a7557612a74613d27565b5b6000612a8384828501612945565b91505092915050565b600080600060608486031215612aa557612aa4613d27565b5b6000612ab38682870161295a565b9350506020612ac486828701612a08565b9250506040612ad586828701612930565b9150509250925092565b60008060008060808587031215612af957612af8613d27565b5b6000612b078782880161295a565b9450506020612b1887828801612a08565b9350506040612b298782880161296f565b9250506060612b3a87828801612a08565b91505092959194509250565b60008060208385031215612b5d57612b5c613d27565b5b600083013567ffffffffffffffff811115612b7b57612b7a613d22565b5b612b8785828601612984565b92509250509250929050565b600080600080600060808688031215612baf57612bae613d27565b5b600086013567ffffffffffffffff811115612bcd57612bcc613d22565b5b612bd988828901612984565b95509550506020612bec88828901612a08565b9350506040612bfd88828901612a08565b9250506060612c0e88828901612a08565b9150509295509295909350565b600060208284031215612c3157612c30613d27565b5b6000612c3f84828501612a08565b91505092915050565b600060208284031215612c5e57612c5d613d27565b5b6000612c6c84828501612a1d565b91505092915050565b60008060408385031215612c8c57612c8b613d27565b5b6000612c9a85828601612a08565b9250506020612cab8582860161291b565b9150509250929050565b600080600060608486031215612cce57612ccd613d27565b5b6000612cdc86828701612a08565b935050602084013567ffffffffffffffff811115612cfd57612cfc613d22565b5b612d09868287016129da565b9250506040612d1a86828701612a08565b9150509250925092565b612d2d81613a05565b82525050565b612d3c81613a05565b82525050565b612d4b81613a17565b82525050565b612d5a81613a17565b82525050565b612d6981613a23565b82525050565b612d7881613a2d565b82525050565b6000612d898261372b565b612d938185613741565b9350612da3818560208601613ab6565b612dac81613d2c565b840191505092915050565b612dc8612dc382613a83565b613b95565b82525050565b6000612dd982613736565b612de38185613752565b9350612df3818560208601613ab6565b612dfc81613d2c565b840191505092915050565b6000612e1282613736565b612e1c8185613763565b9350612e2c818560208601613ab6565b612e3581613d2c565b840191505092915050565b60008154612e4d81613ae9565b612e578186613774565b94506001821660008114612e725760018114612e8357612eb6565b60ff19831686528186019350612eb6565b612e8c85613716565b60005b83811015612eae57815481890152600182019150602081019050612e8f565b838801955050505b50505092915050565b6000612ecc601283613763565b9150612ed782613d57565b602082019050919050565b6000612eef602e83613763565b9150612efa82613d80565b604082019050919050565b6000612f12602683613763565b9150612f1d82613dcf565b604082019050919050565b6000612f35602383613763565b9150612f4082613e1e565b604082019050919050565b6000612f58600783613774565b9150612f6382613e6d565b600782019050919050565b6000612f7b601083613763565b9150612f8682613e96565b602082019050919050565b6000612f9e601283613763565b9150612fa982613ebf565b602082019050919050565b6000612fc1602083613763565b9150612fcc82613ee8565b602082019050919050565b6000612fe4601783613763565b9150612fef82613f11565b602082019050919050565b6000613007602083613763565b915061301282613f3a565b602082019050919050565b600061302a601b83613763565b915061303582613f63565b602082019050919050565b600061304d603e83613763565b915061305882613f8c565b604082019050919050565b6000613070600a83613774565b915061307b82613fdb565b600a82019050919050565b6000613093601e83613763565b915061309e82614004565b602082019050919050565b60006130b6602883613763565b91506130c18261402d565b604082019050919050565b60006130d9600883613774565b91506130e48261407c565b600882019050919050565b60006130fc602283613763565b9150613107826140a5565b604082019050919050565b600061311f600883613774565b915061312a826140f4565b600882019050919050565b600060e08301600083015161314d60008601826131d1565b50602083015184820360208601526131658282612dce565b915050604083015161317a6040860182612d24565b50606083015161318d60608601826131d1565b5060808301516131a060808601826131d1565b5060a08301516131b360a08601826131d1565b5060c08301516131c660c0860182612d42565b508091505092915050565b6131da81613a79565b82525050565b6131e981613a79565b82525050565b6132006131fb82613a79565b613bb9565b82525050565b60006132128285612db7565b60148201915061322282846131ef565b6020820191508190509392505050565b600061323e8285612e40565b915061324982612f4b565b915061325582846131ef565b6020820191508190509392505050565b60006132718286612e40565b915061327c826130cc565b915061328882856131ef565b60208201915061329782613063565b91506132a382846131ef565b6020820191506132b282613112565b9150819050949350505050565b60006020820190506132d46000830184612d33565b92915050565b60006040820190506132ef6000830185612d33565b6132fc60208301846131e0565b9392505050565b600061010082019050613319600083018b612d33565b613326602083018a6131e0565b6133336040830189612d60565b6133406060830188612d33565b61334d6080830187612d6f565b61335a60a08301866131e0565b61336760c08301856131e0565b81810360e08301526133798184612d7e565b90509998505050505050505050565b600060608201905061339d6000830186612d33565b6133aa60208301856131e0565b81810360408301526133bc8184612d7e565b9050949350505050565b60006020820190506133db6000830184612d51565b92915050565b60006020820190506133f66000830184612d60565b92915050565b60006080820190506134116000830187612d60565b61341e60208301866131e0565b61342b6040830185612d6f565b61343860608301846131e0565b95945050505050565b6000602082019050818103600083015261345b8184612e07565b905092915050565b6000602082019050818103600083015261347c81612ebf565b9050919050565b6000602082019050818103600083015261349c81612ee2565b9050919050565b600060208201905081810360008301526134bc81612f05565b9050919050565b600060208201905081810360008301526134dc81612f28565b9050919050565b600060208201905081810360008301526134fc81612f6e565b9050919050565b6000602082019050818103600083015261351c81612f91565b9050919050565b6000602082019050818103600083015261353c81612fb4565b9050919050565b6000602082019050818103600083015261355c81612fd7565b9050919050565b6000602082019050818103600083015261357c81612ffa565b9050919050565b6000602082019050818103600083015261359c8161301d565b9050919050565b600060208201905081810360008301526135bc81613040565b9050919050565b600060208201905081810360008301526135dc81613086565b9050919050565b600060208201905081810360008301526135fc816130a9565b9050919050565b6000602082019050818103600083015261361c816130ef565b9050919050565b6000602082019050818103600083015261363d8184613135565b905092915050565b600060208201905061365a60008301846131e0565b92915050565b600060408201905061367560008301856131e0565b6136826020830184612d33565b9392505050565b600060608201905061369e60008301866131e0565b6136ab6020830185612d33565b6136b860408301846131e0565b949350505050565b60006136ca6136db565b90506136d68282613b1b565b919050565b6000604051905090565b600067ffffffffffffffff821115613700576136ff613cdf565b5b61370982613d2c565b9050602081019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600061378a82613a79565b915061379583613a79565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156137ca576137c9613bf4565b5b828201905092915050565b60006137e082613a79565b91506137eb83613a79565b9250826137fb576137fa613c23565b5b828204905092915050565b6000808291508390505b60018511156138505780860481111561382c5761382b613bf4565b5b600185161561383b5780820291505b808102905061384985613d4a565b9450613810565b94509492505050565b600061386482613a79565b915061386f83613a79565b925061389c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846138a4565b905092915050565b6000826138b45760019050613970565b816138c25760009050613970565b81600181146138d857600281146138e257613911565b6001915050613970565b60ff8411156138f4576138f3613bf4565b5b8360020a91508482111561390b5761390a613bf4565b5b50613970565b5060208310610133831016604e8410600b84101617156139465782820a90508381111561394157613940613bf4565b5b613970565b6139538484846001613806565b9250905081840481111561396a57613969613bf4565b5b81810290505b9392505050565b600061398282613a79565b915061398d83613a79565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156139c6576139c5613bf4565b5b828202905092915050565b60006139dc82613a79565b91506139e783613a79565b9250828210156139fa576139f9613bf4565b5b828203905092915050565b6000613a1082613a59565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000613a8e82613a95565b9050919050565b6000613aa082613a59565b9050919050565b82818337600083830152505050565b60005b83811015613ad4578082015181840152602081019050613ab9565b83811115613ae3576000848401525b50505050565b60006002820490506001821680613b0157607f821691505b60208210811415613b1557613b14613c52565b5b50919050565b613b2482613d2c565b810181811067ffffffffffffffff82111715613b4357613b42613cdf565b5b80604052505050565b6000613b5782613a79565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415613b8a57613b89613bf4565b5b600182019050919050565b6000613ba082613ba7565b9050919050565b6000613bb282613d3d565b9050919050565b6000819050919050565b6000613bce82613a79565b9150613bd983613a79565b925082613be957613be8613c23565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b60008160601b9050919050565b60008160011c9050919050565b7f43616d706169676e20697320636c6f7365640000000000000000000000000000600082015250565b7f43616c6c6572206973206e6f7420612076616c6964617465642063616d70616960008201527f676e20636f6e7472696275746f72000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f756e61626c6520746f207472616e73666572416e6443616c6c20746f206f726160008201527f636c650000000000000000000000000000000000000000000000000000000000602082015250565b7f2f75736572732f00000000000000000000000000000000000000000000000000600082015250565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b7f556e61626c6520746f207472616e736665720000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f43616c6c6572206973206e6f74207468652061646d696e000000000000000000600082015250565b7f43616c6c6572206973206e6f74207468652063616d706169676e206f776e6572600082015250565b7f5265747269627574696f6e20616c726561647920636c61696d65640000000000600082015250565b7f5468697320636f6e747269627574696f6e20646f6573206e6f7420736174697360008201527f6679207468652063616d706169676e277320726571756972656d656e74730000602082015250565b7f2f74776974746572732f00000000000000000000000000000000000000000000600082015250565b7f456e756d657261626c654d61703a206e6f6e6578697374656e74206b65790000600082015250565b7f536f75726365206d75737420626520746865206f7261636c65206f662074686560008201527f2072657175657374000000000000000000000000000000000000000000000000602082015250565b7f2f636861696e732f000000000000000000000000000000000000000000000000600082015250565b7f436f6e7472696275746f7273206c696d697420616c726561647920726561636860008201527f6564000000000000000000000000000000000000000000000000000000000000602082015250565b7f2f77696e6e657273000000000000000000000000000000000000000000000000600082015250565b61412681613a05565b811461413157600080fd5b50565b61413d81613a17565b811461414857600080fd5b50565b61415481613a23565b811461415f57600080fd5b50565b61416b81613a2d565b811461417657600080fd5b50565b61418281613a79565b811461418d57600080fd5b5056fea2646970667358221220dc85cead4b73d74ca463bf01c638beb93abeddccb8a4c886ce10bf4692d95abf64736f6c63430008060033","opcodes":"PUSH1 0xC0 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x6 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x4971 CODESIZE SUB DUP1 PUSH3 0x4971 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x3C SWAP2 SWAP1 PUSH3 0x3C6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x76 PUSH3 0x6A PUSH3 0xFE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x106 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH3 0x8E DUP3 PUSH3 0x1CB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x9F DUP4 PUSH3 0x20F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP5 PUSH1 0x80 DUP2 DUP2 MSTORE POP POP PUSH1 0xA PUSH8 0xDE0B6B3A7640000 PUSH1 0x1 PUSH3 0xC0 SWAP2 SWAP1 PUSH3 0x504 JUMP JUMPDEST PUSH3 0xCC SWAP2 SWAP1 PUSH3 0x4CC JUMP JUMPDEST PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x11 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x9 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xF2 SWAP3 SWAP2 SWAP1 PUSH3 0x253 JUMP JUMPDEST POP POP POP POP POP POP PUSH3 0x77E JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x261 SWAP1 PUSH3 0x5E3 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x285 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x2D1 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x2A0 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x2D1 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x2D1 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2D0 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x2B3 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x2E0 SWAP2 SWAP1 PUSH3 0x2E4 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2FF JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x2E5 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x31A PUSH3 0x314 DUP5 PUSH3 0x496 JUMP JUMPDEST PUSH3 0x46D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x339 JUMPI PUSH3 0x338 PUSH3 0x710 JUMP JUMPDEST JUMPDEST PUSH3 0x346 DUP5 DUP3 DUP6 PUSH3 0x5AD JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x35F DUP2 PUSH3 0x730 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x376 DUP2 PUSH3 0x74A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x394 JUMPI PUSH3 0x393 PUSH3 0x70B JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x3A6 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x303 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x3C0 DUP2 PUSH3 0x764 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH3 0x3E5 JUMPI PUSH3 0x3E4 PUSH3 0x71A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x3F5 DUP9 DUP3 DUP10 ADD PUSH3 0x365 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x419 JUMPI PUSH3 0x418 PUSH3 0x715 JUMP JUMPDEST JUMPDEST PUSH3 0x427 DUP9 DUP3 DUP10 ADD PUSH3 0x37C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH3 0x43A DUP9 DUP3 DUP10 ADD PUSH3 0x34E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH3 0x44D DUP9 DUP3 DUP10 ADD PUSH3 0x34E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH3 0x460 DUP9 DUP3 DUP10 ADD PUSH3 0x3AF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x479 PUSH3 0x48C JUMP JUMPDEST SWAP1 POP PUSH3 0x487 DUP3 DUP3 PUSH3 0x619 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x4B4 JUMPI PUSH3 0x4B3 PUSH3 0x6DC JUMP JUMPDEST JUMPDEST PUSH3 0x4BF DUP3 PUSH3 0x71F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4D9 DUP3 PUSH3 0x5A3 JUMP JUMPDEST SWAP2 POP PUSH3 0x4E6 DUP4 PUSH3 0x5A3 JUMP JUMPDEST SWAP3 POP DUP3 PUSH3 0x4F9 JUMPI PUSH3 0x4F8 PUSH3 0x67E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x511 DUP3 PUSH3 0x5A3 JUMP JUMPDEST SWAP2 POP PUSH3 0x51E DUP4 PUSH3 0x5A3 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH3 0x55A JUMPI PUSH3 0x559 PUSH3 0x64F JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x572 DUP3 PUSH3 0x583 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x5CD JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x5B0 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x5DD JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x5FC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x613 JUMPI PUSH3 0x612 PUSH3 0x6AD JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x624 DUP3 PUSH3 0x71F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x646 JUMPI PUSH3 0x645 PUSH3 0x6DC JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x73B DUP2 PUSH3 0x565 JUMP JUMPDEST DUP2 EQ PUSH3 0x747 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x755 DUP2 PUSH3 0x579 JUMP JUMPDEST DUP2 EQ PUSH3 0x761 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x76F DUP2 PUSH3 0x5A3 JUMP JUMPDEST DUP2 EQ PUSH3 0x77B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x41C6 PUSH3 0x7AB PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x161F ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x1156 ADD MSTORE PUSH2 0x1517 ADD MSTORE PUSH2 0x41C6 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x173 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA9654AD4 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xC2939D97 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xEC65D0F8 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xEC65D0F8 EQ PUSH2 0x400 JUMPI DUP1 PUSH4 0xEC8F04E9 EQ PUSH2 0x41C JUMPI DUP1 PUSH4 0xF2B3C809 EQ PUSH2 0x438 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x456 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0xC2939D97 EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0xCC32D176 EQ PUSH2 0x3C4 JUMPI DUP1 PUSH4 0xDC4D5EFB EQ PUSH2 0x3E2 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0xA9654AD4 EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xAA2BDEF9 EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0xACED1661 EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0xB0E1C1E1 EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0xB1D3C700 EQ PUSH2 0x36E JUMPI DUP1 PUSH4 0xB5A898AE EQ PUSH2 0x38A JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x5C975ABB GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x5EC4BC38 EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x8DC654A2 EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0xA4E336C3 EQ PUSH2 0x2B8 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0xA944292 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x1FC645C7 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x368ACB09 EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x4A732795 EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x5598F8CC EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x58D9FA04 EQ PUSH2 0x22E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x2C1B JUMP JUMPDEST PUSH2 0x472 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x3441 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0x2C1B JUMP JUMPDEST PUSH2 0x4A0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CC PUSH2 0x4FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x3645 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0x2C1B JUMP JUMPDEST PUSH2 0x502 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x218 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x2C1B JUMP JUMPDEST PUSH2 0x6E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x225 SWAP2 SWAP1 PUSH2 0x3623 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x248 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x243 SWAP2 SWAP1 PUSH2 0x2C75 JUMP JUMPDEST PUSH2 0x82E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x252 PUSH2 0x8D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x33C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x270 PUSH2 0x8ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27D SWAP2 SWAP1 PUSH2 0x33C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28E PUSH2 0x96F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x298 PUSH2 0x9F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x32BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B6 PUSH2 0xA20 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0x2A8C JUMP JUMPDEST PUSH2 0xBFF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x2C1B JUMP JUMPDEST PUSH2 0xD3E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x33C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x2C1B JUMP JUMPDEST PUSH2 0xD5B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32B SWAP2 SWAP1 PUSH2 0x3441 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33C PUSH2 0xD87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x349 SWAP2 SWAP1 PUSH2 0x32BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x367 SWAP2 SWAP1 PUSH2 0x2C1B JUMP JUMPDEST PUSH2 0xDAD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x388 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x383 SWAP2 SWAP1 PUSH2 0x2CB5 JUMP JUMPDEST PUSH2 0xEA4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39F SWAP2 SWAP1 PUSH2 0x2B93 JUMP JUMPDEST PUSH2 0xF43 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AE PUSH2 0x1154 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BB SWAP2 SWAP1 PUSH2 0x33E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CC PUSH2 0x1178 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D9 SWAP2 SWAP1 PUSH2 0x3645 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EA PUSH2 0x117E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F7 SWAP2 SWAP1 PUSH2 0x3441 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x415 SWAP2 SWAP1 PUSH2 0x2ADF JUMP JUMPDEST PUSH2 0x120C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x436 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x431 SWAP2 SWAP1 PUSH2 0x2B46 JUMP JUMPDEST PUSH2 0x1293 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x440 PUSH2 0x131E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44D SWAP2 SWAP1 PUSH2 0x3645 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x470 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46B SWAP2 SWAP1 PUSH2 0x2A32 JUMP JUMPDEST PUSH2 0x1324 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x9 CHAINID DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x48A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3265 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4B6 DUP2 CALLER PUSH1 0xA PUSH2 0x141C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP DUP1 PUSH32 0x98EACF4F33E6A76B9B0916F3A1F00CBFE38F5728E60C71CDEC75362365C23A15 CALLER PUSH1 0x40 MLOAD PUSH2 0x4E7 SWAP2 SWAP1 PUSH2 0x32BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x4F8 DUP2 PUSH2 0x1451 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x1 ISZERO ISZERO DUP2 PUSH1 0x1 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x5AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A5 SWAP1 PUSH2 0x3483 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO DUP2 PUSH1 0x2 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x643 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x63A SWAP1 PUSH2 0x3583 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x64E DUP4 PUSH2 0x167D JUMP JUMPDEST SWAP1 POP PUSH2 0x659 DUP4 PUSH2 0x16AD JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x69F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH32 0x834B5FC2655A3B64CB9DFBBF39CB1B67BFF9E533AB318DBB3677E4EDCF9DC25D DUP4 CALLER DUP4 PUSH1 0x40 MLOAD PUSH2 0x6D3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3689 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x6E8 PUSH2 0x26CD JUMP JUMPDEST PUSH2 0x6F1 DUP3 PUSH2 0x1722 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x716 SWAP1 PUSH2 0x3AE9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x742 SWAP1 PUSH2 0x3AE9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x78F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x764 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x78F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x772 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x836 PUSH2 0x9F7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89A SWAP1 PUSH2 0x3543 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8B7 DUP3 PUSH1 0xA PUSH2 0x173E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x8D3 JUMPI PUSH2 0x8D1 DUP3 DUP3 PUSH1 0xA PUSH2 0x141C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH2 0x901 PUSH1 0xA PUSH2 0x1758 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x967 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x933 DUP3 PUSH1 0xA PUSH2 0x176D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x954 JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST DUP1 DUP1 PUSH2 0x95F SWAP1 PUSH2 0x3B4C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8F7 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x977 PUSH2 0x178A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x995 PUSH2 0x9F7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E2 SWAP1 PUSH2 0x3523 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9F5 PUSH1 0x0 PUSH2 0x1792 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA28 PUSH2 0x9F7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA95 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA8C SWAP1 PUSH2 0x3543 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA9F PUSH2 0x1857 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH2 0xAC5 PUSH2 0x9F7 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAFE SWAP2 SWAP1 PUSH2 0x32BF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB2A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB4E SWAP2 SWAP1 PUSH2 0x2C48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB6B SWAP3 SWAP2 SWAP1 PUSH2 0x32DA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB99 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBBD SWAP2 SWAP1 PUSH2 0x2A5F JUMP JUMPDEST PUSH2 0xBFC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF3 SWAP1 PUSH2 0x3503 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST DUP3 PUSH1 0x7 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCA1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC98 SWAP1 PUSH2 0x35E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE DUP1 PUSH32 0x7CC135E0CEBB02C3480AE5D74D377283180A2601F8F644EDF7987B009316C63A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP2 PUSH2 0xD1F JUMPI PUSH2 0xD1D DUP4 PUSH1 0xA PUSH2 0x1881 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH2 0xD35 DUP5 PUSH1 0xA PUSH2 0x176D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD54 DUP3 PUSH1 0xA PUSH2 0x173E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x9 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD71 SWAP3 SWAP2 SWAP1 PUSH2 0x3232 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDB8 DUP3 PUSH2 0x1722 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE4C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE43 SWAP1 PUSH2 0x3563 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5E6EB33A418DE5DBBC17F989F7AE362CDFBB1748C5D603137C767027A354EDBC DUP3 PUSH1 0x40 MLOAD PUSH2 0xE98 SWAP2 SWAP1 PUSH2 0x3645 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEB1 DUP5 DUP5 DUP5 PUSH2 0x189B JUMP JUMPDEST SWAP1 POP PUSH1 0x1 ISZERO ISZERO DUP2 ISZERO ISZERO EQ PUSH2 0xEFA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF1 SWAP1 PUSH2 0x35A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF04 DUP5 CALLER PUSH2 0x18BB JUMP JUMPDEST PUSH32 0x7C29733EDBBBC7F83FC8C5FB3231AB4C21421E8DA3E7BB05CDDC0C2BE2D0CF65 DUP5 CALLER PUSH1 0x40 MLOAD PUSH2 0xF35 SWAP3 SWAP2 SWAP1 PUSH2 0x3660 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xF56 SWAP1 PUSH2 0x3B4C JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 PUSH1 0xD SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0xF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP5 DUP2 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP DUP7 DUP7 DUP3 PUSH1 0x1 ADD SWAP2 SWAP1 PUSH2 0xF95 SWAP3 SWAP2 SWAP1 PUSH2 0x2722 JUMP JUMPDEST POP DUP4 DUP2 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP DUP3 DUP2 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP CALLER DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xE DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD SLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x1 DUP3 ADD DUP2 PUSH1 0x1 ADD SWAP1 DUP1 SLOAD PUSH2 0x1052 SWAP1 PUSH2 0x3AE9 JUMP JUMPDEST PUSH2 0x105D SWAP3 SWAP2 SWAP1 PUSH2 0x27A8 JUMP JUMPDEST POP PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 DUP3 ADD SLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x4 DUP3 ADD SLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0x5 DUP3 ADD SLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0x6 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP PUSH32 0x633109EEC20320EDED000FC1E2634211AA7E92BA3F5B15FAF6DCDAFCA05094E4 DUP3 CALLER PUSH1 0x40 MLOAD PUSH2 0x1143 SWAP3 SWAP2 SWAP1 PUSH2 0x3660 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH2 0x118B SWAP1 PUSH2 0x3AE9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x11B7 SWAP1 PUSH2 0x3AE9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1204 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x11D9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1204 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x11E7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0x1214 PUSH2 0x9F7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1281 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1278 SWAP1 PUSH2 0x3543 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x128D DUP5 DUP5 DUP5 DUP5 PUSH2 0x1A3C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x129B PUSH2 0x9F7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1308 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12FF SWAP1 PUSH2 0x3543 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x9 SWAP2 SWAP1 PUSH2 0x1319 SWAP3 SWAP2 SWAP1 PUSH2 0x2722 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x3E8 DUP2 JUMP JUMPDEST PUSH2 0x132C PUSH2 0x178A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x134A PUSH2 0x9F7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1397 SWAP1 PUSH2 0x3523 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1410 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1407 SWAP1 PUSH2 0x34A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1419 DUP2 PUSH2 0x1792 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1448 DUP5 PUSH1 0x0 ADD DUP5 PUSH1 0x0 SHL DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x1B4F JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x145B PUSH2 0x9F7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x14C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14BF SWAP1 PUSH2 0x3543 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14D0 PUSH2 0x8D7 JUMP JUMPDEST ISZERO PUSH2 0x1510 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1507 SWAP1 PUSH2 0x34E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1544 PUSH32 0x0 ADDRESS PUSH4 0xA4E336C3 PUSH1 0xE0 SHL PUSH2 0x1B8A JUMP JUMPDEST SWAP1 POP PUSH2 0x1598 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6765740000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x1588 DUP6 PUSH2 0xD5B JUMP JUMPDEST DUP4 PUSH2 0x1BBB SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1617 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7061746800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6861735369676E65645570000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP4 PUSH2 0x1BBB SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1643 DUP3 PUSH32 0x0 PUSH2 0x1BEE JUMP JUMPDEST SWAP1 POP DUP1 DUP5 PUSH32 0xBE1937B7FECA9C000F1F748EBBA989954549C773449BBAB49AB3D6F796AF50D7 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1689 DUP4 PUSH2 0x1722 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x5 ADD SLOAD DUP3 PUSH1 0x3 ADD SLOAD PUSH2 0x16A1 SWAP2 SWAP1 PUSH2 0x37D5 JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x2 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1750 DUP4 PUSH1 0x0 ADD DUP4 PUSH1 0x0 SHL PUSH2 0x1C25 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1766 DUP3 PUSH1 0x0 ADD PUSH2 0x1C45 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x177F DUP4 PUSH1 0x0 ADD DUP4 PUSH1 0x0 SHL PUSH2 0x1C5A JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1893 DUP4 PUSH1 0x0 ADD DUP4 PUSH1 0x0 SHL PUSH2 0x1CD6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x18A7 DUP6 PUSH2 0x1722 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 ADD SLOAD DUP4 LT ISZERO SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18C6 DUP4 PUSH2 0x1722 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x10 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD DUP3 PUSH1 0x5 ADD SLOAD LT ISZERO PUSH2 0x192A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1921 SWAP1 PUSH2 0x3603 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO DUP3 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x1982 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1979 SWAP1 PUSH2 0x3463 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x7 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE DUP5 PUSH32 0xE1FE3AFA0F7F761FF0A8B89086790EFD5140D2907EBD5B7FF6BFCB5E075FD4C5 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6EE4D553 DUP7 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B16 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x33FC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1B44 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 PUSH1 0x2 ADD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1B81 DUP4 DUP6 PUSH1 0x0 ADD PUSH2 0x1D0F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1B92 PUSH2 0x2835 JUMP JUMPDEST PUSH2 0x1B9A PUSH2 0x2835 JUMP JUMPDEST PUSH2 0x1BB1 DUP6 DUP6 DUP6 DUP5 PUSH2 0x1D26 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1BD2 DUP3 DUP5 PUSH1 0x80 ADD MLOAD PUSH2 0x1DD6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1BE9 DUP2 DUP5 PUSH1 0x80 ADD MLOAD PUSH2 0x1DD6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C1D PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP5 PUSH2 0x1DFB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C3D DUP3 DUP5 PUSH1 0x0 ADD PUSH2 0x1EC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C53 DUP3 PUSH1 0x0 ADD PUSH2 0x1EDE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x2 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP1 SHL DUP2 EQ ISZERO DUP1 PUSH2 0x1C8D JUMPI POP PUSH2 0x1C8C DUP5 DUP5 PUSH2 0x1C25 JUMP JUMPDEST JUMPDEST PUSH2 0x1CCC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CC3 SWAP1 PUSH2 0x35C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x2 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH2 0x1D07 DUP3 DUP5 PUSH1 0x0 ADD PUSH2 0x1EF3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D1E DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x1F0A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D2E PUSH2 0x2835 JUMP JUMPDEST PUSH2 0x1D3E DUP6 PUSH1 0x80 ADD MLOAD PUSH2 0x100 PUSH2 0x1F7A JUMP JUMPDEST POP DUP4 DUP6 PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP DUP3 DUP6 PUSH1 0x20 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 DUP6 PUSH1 0x40 ADD SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE POP POP DUP5 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1DE3 DUP3 PUSH1 0x3 DUP4 MLOAD PUSH2 0x1FE4 JUMP JUMPDEST PUSH2 0x1DF6 DUP2 DUP4 PUSH2 0x2169 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 SLOAD SWAP1 POP PUSH1 0x1 DUP2 PUSH2 0x1E10 SWAP2 SWAP1 PUSH2 0x377F JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH4 0x40429946 PUSH1 0xE0 SHL PUSH1 0x0 DUP1 DUP8 PUSH1 0x0 ADD MLOAD ADDRESS DUP10 PUSH1 0x40 ADD MLOAD DUP8 PUSH1 0x1 DUP13 PUSH1 0x80 ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1E51 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3303 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH2 0x1EBC DUP7 DUP4 DUP7 DUP5 PUSH2 0x218B JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ED6 DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x232F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EEC DUP3 PUSH1 0x0 ADD PUSH2 0x2352 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F02 DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x2363 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F16 DUP4 DUP4 PUSH2 0x232F JUMP JUMPDEST PUSH2 0x1F6F JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x1F74 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F82 PUSH2 0x28A2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 PUSH2 0x1F91 SWAP2 SWAP1 PUSH2 0x3BC3 JUMP JUMPDEST EQ PUSH2 0x1FBD JUMPI PUSH1 0x20 DUP3 PUSH2 0x1FA3 SWAP2 SWAP1 PUSH2 0x3BC3 JUMP JUMPDEST PUSH1 0x20 PUSH2 0x1FAF SWAP2 SWAP1 PUSH2 0x39D1 JUMP JUMPDEST DUP3 PUSH2 0x1FBA SWAP2 SWAP1 PUSH2 0x377F JUMP JUMPDEST SWAP2 POP JUMPDEST DUP2 DUP4 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x40 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 DUP2 MSTORE DUP3 DUP2 ADD PUSH1 0x20 ADD PUSH1 0x40 MSTORE POP DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x17 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND GT PUSH2 0x201B JUMPI PUSH2 0x2015 DUP2 PUSH1 0x5 DUP5 PUSH1 0xFF AND SWAP1 SHL PUSH1 0xFF AND OR DUP5 PUSH2 0x2477 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0x2164 JUMP JUMPDEST PUSH1 0xFF DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND GT PUSH2 0x2071 JUMPI PUSH2 0x204A PUSH1 0x18 PUSH1 0x5 DUP5 PUSH1 0xFF AND SWAP1 SHL OR DUP5 PUSH2 0x2477 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0x206B DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 DUP6 PUSH2 0x2497 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0x2163 JUMP JUMPDEST PUSH2 0xFFFF DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND GT PUSH2 0x20C8 JUMPI PUSH2 0x20A1 PUSH1 0x19 PUSH1 0x5 DUP5 PUSH1 0xFF AND SWAP1 SHL OR DUP5 PUSH2 0x2477 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0x20C2 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x2 DUP6 PUSH2 0x2497 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0x2162 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND GT PUSH2 0x2121 JUMPI PUSH2 0x20FA PUSH1 0x1A PUSH1 0x5 DUP5 PUSH1 0xFF AND SWAP1 SHL OR DUP5 PUSH2 0x2477 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0x211B DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x4 DUP6 PUSH2 0x2497 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0x2161 JUMP JUMPDEST PUSH2 0x213E PUSH1 0x1B PUSH1 0x5 DUP5 PUSH1 0xFF AND SWAP1 SHL OR DUP5 PUSH2 0x2477 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0x215F DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x8 DUP6 PUSH2 0x2497 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMPDEST JUMPDEST JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x2171 PUSH2 0x28A2 JUMP JUMPDEST PUSH2 0x2183 DUP4 DUP5 PUSH1 0x0 ADD MLOAD MLOAD DUP5 DUP6 MLOAD PUSH2 0x24B9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x21A0 SWAP3 SWAP2 SWAP1 PUSH2 0x3206 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP DUP5 PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH32 0xB5E6E01E79F91267DC17B4E6314D5D4D03593D2CEEE0FBB452B750BD70EA5AF9 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4000AEA0 DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2296 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3388 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x22B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x22C4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x22E8 SWAP2 SWAP1 PUSH2 0x2A5F JUMP JUMPDEST PUSH2 0x2327 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x231E SWAP1 PUSH2 0x34C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x246B JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x2395 SWAP2 SWAP1 PUSH2 0x39D1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x23AD SWAP2 SWAP1 PUSH2 0x39D1 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x241C JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x23CE JUMPI PUSH2 0x23CD PUSH2 0x3CB0 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x23F2 JUMPI PUSH2 0x23F1 PUSH2 0x3CB0 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP6 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x2430 JUMPI PUSH2 0x242F PUSH2 0x3C81 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x2471 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x247F PUSH2 0x28A2 JUMP JUMPDEST PUSH2 0x248F DUP4 DUP5 PUSH1 0x0 ADD MLOAD MLOAD DUP5 PUSH2 0x25A8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x249F PUSH2 0x28A2 JUMP JUMPDEST PUSH2 0x24B0 DUP5 DUP6 PUSH1 0x0 ADD MLOAD MLOAD DUP6 DUP6 PUSH2 0x25FF JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x24C1 PUSH2 0x28A2 JUMP JUMPDEST DUP3 MLOAD DUP3 GT ISZERO PUSH2 0x24CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 PUSH1 0x20 ADD MLOAD DUP3 DUP6 PUSH2 0x24E0 SWAP2 SWAP1 PUSH2 0x377F JUMP JUMPDEST GT ISZERO PUSH2 0x2515 JUMPI PUSH2 0x2514 DUP6 PUSH1 0x2 PUSH2 0x2505 DUP9 PUSH1 0x20 ADD MLOAD DUP9 DUP8 PUSH2 0x2500 SWAP2 SWAP1 PUSH2 0x377F JUMP JUMPDEST PUSH2 0x268D JUMP JUMPDEST PUSH2 0x250F SWAP2 SWAP1 PUSH2 0x3977 JUMP JUMPDEST PUSH2 0x26A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 DUP7 MLOAD DUP1 MLOAD DUP8 PUSH1 0x20 DUP4 ADD ADD SWAP4 POP DUP1 DUP9 DUP8 ADD GT ISZERO PUSH2 0x2534 JUMPI DUP8 DUP7 ADD DUP3 MSTORE JUMPDEST PUSH1 0x20 DUP8 ADD SWAP3 POP POP POP JUMPDEST PUSH1 0x20 DUP5 LT PUSH2 0x257B JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 PUSH2 0x2556 SWAP2 SWAP1 PUSH2 0x377F JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP2 PUSH2 0x2565 SWAP2 SWAP1 PUSH2 0x377F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP5 PUSH2 0x2574 SWAP2 SWAP1 PUSH2 0x39D1 JUMP JUMPDEST SWAP4 POP PUSH2 0x253D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP6 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB SWAP1 POP DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP2 DUP2 OR DUP6 MSTORE POP POP POP DUP7 SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x25B0 PUSH2 0x28A2 JUMP JUMPDEST DUP4 PUSH1 0x20 ADD MLOAD DUP4 LT PUSH2 0x25D6 JUMPI PUSH2 0x25D5 DUP5 PUSH1 0x2 DUP7 PUSH1 0x20 ADD MLOAD PUSH2 0x25D0 SWAP2 SWAP1 PUSH2 0x3977 JUMP JUMPDEST PUSH2 0x26A9 JUMP JUMPDEST JUMPDEST DUP4 MLOAD DUP1 MLOAD PUSH1 0x20 DUP6 DUP4 ADD ADD DUP5 DUP2 MSTORE8 DUP2 DUP7 EQ ISZERO PUSH2 0x25F2 JUMPI PUSH1 0x1 DUP3 ADD DUP4 MSTORE JUMPDEST POP POP POP DUP4 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2607 PUSH2 0x28A2 JUMP JUMPDEST DUP5 PUSH1 0x20 ADD MLOAD DUP5 DUP4 PUSH2 0x2618 SWAP2 SWAP1 PUSH2 0x377F JUMP JUMPDEST GT ISZERO PUSH2 0x2640 JUMPI PUSH2 0x263F DUP6 PUSH1 0x2 DUP7 DUP6 PUSH2 0x2630 SWAP2 SWAP1 PUSH2 0x377F JUMP JUMPDEST PUSH2 0x263A SWAP2 SWAP1 PUSH2 0x3977 JUMP JUMPDEST PUSH2 0x26A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP4 PUSH2 0x100 PUSH2 0x2652 SWAP2 SWAP1 PUSH2 0x3859 JUMP JUMPDEST PUSH2 0x265C SWAP2 SWAP1 PUSH2 0x39D1 JUMP JUMPDEST SWAP1 POP DUP6 MLOAD DUP4 DUP7 DUP3 ADD ADD DUP6 DUP4 NOT DUP3 MLOAD AND OR DUP2 MSTORE DUP2 MLOAD DUP6 DUP9 ADD GT ISZERO PUSH2 0x267F JUMPI DUP5 DUP8 ADD DUP3 MSTORE JUMPDEST POP POP DUP6 SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 GT ISZERO PUSH2 0x269F JUMPI DUP3 SWAP1 POP PUSH2 0x26A3 JUMP JUMPDEST DUP2 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD MLOAD SWAP1 POP PUSH2 0x26BC DUP4 DUP4 PUSH2 0x1F7A JUMP JUMPDEST POP PUSH2 0x26C7 DUP4 DUP3 PUSH2 0x2169 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x272E SWAP1 PUSH2 0x3AE9 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x2750 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x2797 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x2769 JUMPI DUP1 CALLDATALOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x2797 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x2797 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2796 JUMPI DUP3 CALLDATALOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x277B JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x27A4 SWAP2 SWAP1 PUSH2 0x28BC JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x27B4 SWAP1 PUSH2 0x3AE9 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x27D6 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x2824 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x27E7 JUMPI DUP1 SLOAD DUP6 SSTORE PUSH2 0x2824 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x2824 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2823 JUMPI DUP3 SLOAD DUP3 SSTORE SWAP2 PUSH1 0x1 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2808 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x2831 SWAP2 SWAP1 PUSH2 0x28BC JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x289C PUSH2 0x28A2 JUMP JUMPDEST DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x28D5 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x28BD JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28EC PUSH2 0x28E7 DUP5 PUSH2 0x36E5 JUMP JUMPDEST PUSH2 0x36C0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2908 JUMPI PUSH2 0x2907 PUSH2 0x3D1D JUMP JUMPDEST JUMPDEST PUSH2 0x2913 DUP5 DUP3 DUP6 PUSH2 0x3AA7 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x292A DUP2 PUSH2 0x411D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x293F DUP2 PUSH2 0x4134 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2954 DUP2 PUSH2 0x4134 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2969 DUP2 PUSH2 0x414B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x297E DUP2 PUSH2 0x4162 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x299A JUMPI PUSH2 0x2999 PUSH2 0x3D13 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x29B7 JUMPI PUSH2 0x29B6 PUSH2 0x3D0E JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x29D3 JUMPI PUSH2 0x29D2 PUSH2 0x3D18 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x29EF JUMPI PUSH2 0x29EE PUSH2 0x3D13 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x29FF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x28D9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2A17 DUP2 PUSH2 0x4179 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2A2C DUP2 PUSH2 0x4179 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A48 JUMPI PUSH2 0x2A47 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2A56 DUP5 DUP3 DUP6 ADD PUSH2 0x291B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A75 JUMPI PUSH2 0x2A74 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2A83 DUP5 DUP3 DUP6 ADD PUSH2 0x2945 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2AA5 JUMPI PUSH2 0x2AA4 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2AB3 DUP7 DUP3 DUP8 ADD PUSH2 0x295A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2AC4 DUP7 DUP3 DUP8 ADD PUSH2 0x2A08 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2AD5 DUP7 DUP3 DUP8 ADD PUSH2 0x2930 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2AF9 JUMPI PUSH2 0x2AF8 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B07 DUP8 DUP3 DUP9 ADD PUSH2 0x295A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2B18 DUP8 DUP3 DUP9 ADD PUSH2 0x2A08 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2B29 DUP8 DUP3 DUP9 ADD PUSH2 0x296F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x2B3A DUP8 DUP3 DUP9 ADD PUSH2 0x2A08 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B5D JUMPI PUSH2 0x2B5C PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2B7B JUMPI PUSH2 0x2B7A PUSH2 0x3D22 JUMP JUMPDEST JUMPDEST PUSH2 0x2B87 DUP6 DUP3 DUP7 ADD PUSH2 0x2984 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2BAF JUMPI PUSH2 0x2BAE PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2BCD JUMPI PUSH2 0x2BCC PUSH2 0x3D22 JUMP JUMPDEST JUMPDEST PUSH2 0x2BD9 DUP9 DUP3 DUP10 ADD PUSH2 0x2984 JUMP JUMPDEST SWAP6 POP SWAP6 POP POP PUSH1 0x20 PUSH2 0x2BEC DUP9 DUP3 DUP10 ADD PUSH2 0x2A08 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2BFD DUP9 DUP3 DUP10 ADD PUSH2 0x2A08 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x2C0E DUP9 DUP3 DUP10 ADD PUSH2 0x2A08 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C31 JUMPI PUSH2 0x2C30 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2C3F DUP5 DUP3 DUP6 ADD PUSH2 0x2A08 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C5E JUMPI PUSH2 0x2C5D PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2C6C DUP5 DUP3 DUP6 ADD PUSH2 0x2A1D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2C8C JUMPI PUSH2 0x2C8B PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2C9A DUP6 DUP3 DUP7 ADD PUSH2 0x2A08 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2CAB DUP6 DUP3 DUP7 ADD PUSH2 0x291B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2CCE JUMPI PUSH2 0x2CCD PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2CDC DUP7 DUP3 DUP8 ADD PUSH2 0x2A08 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2CFD JUMPI PUSH2 0x2CFC PUSH2 0x3D22 JUMP JUMPDEST JUMPDEST PUSH2 0x2D09 DUP7 DUP3 DUP8 ADD PUSH2 0x29DA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2D1A DUP7 DUP3 DUP8 ADD PUSH2 0x2A08 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x2D2D DUP2 PUSH2 0x3A05 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2D3C DUP2 PUSH2 0x3A05 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2D4B DUP2 PUSH2 0x3A17 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2D5A DUP2 PUSH2 0x3A17 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2D69 DUP2 PUSH2 0x3A23 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2D78 DUP2 PUSH2 0x3A2D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D89 DUP3 PUSH2 0x372B JUMP JUMPDEST PUSH2 0x2D93 DUP2 DUP6 PUSH2 0x3741 JUMP JUMPDEST SWAP4 POP PUSH2 0x2DA3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3AB6 JUMP JUMPDEST PUSH2 0x2DAC DUP2 PUSH2 0x3D2C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2DC8 PUSH2 0x2DC3 DUP3 PUSH2 0x3A83 JUMP JUMPDEST PUSH2 0x3B95 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DD9 DUP3 PUSH2 0x3736 JUMP JUMPDEST PUSH2 0x2DE3 DUP2 DUP6 PUSH2 0x3752 JUMP JUMPDEST SWAP4 POP PUSH2 0x2DF3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3AB6 JUMP JUMPDEST PUSH2 0x2DFC DUP2 PUSH2 0x3D2C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E12 DUP3 PUSH2 0x3736 JUMP JUMPDEST PUSH2 0x2E1C DUP2 DUP6 PUSH2 0x3763 JUMP JUMPDEST SWAP4 POP PUSH2 0x2E2C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3AB6 JUMP JUMPDEST PUSH2 0x2E35 DUP2 PUSH2 0x3D2C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x2E4D DUP2 PUSH2 0x3AE9 JUMP JUMPDEST PUSH2 0x2E57 DUP2 DUP7 PUSH2 0x3774 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x2E72 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x2E83 JUMPI PUSH2 0x2EB6 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 DUP7 ADD SWAP4 POP PUSH2 0x2EB6 JUMP JUMPDEST PUSH2 0x2E8C DUP6 PUSH2 0x3716 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2EAE JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2E8F JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2ECC PUSH1 0x12 DUP4 PUSH2 0x3763 JUMP JUMPDEST SWAP2 POP PUSH2 0x2ED7 DUP3 PUSH2 0x3D57 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EEF PUSH1 0x2E DUP4 PUSH2 0x3763 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EFA DUP3 PUSH2 0x3D80 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F12 PUSH1 0x26 DUP4 PUSH2 0x3763 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F1D DUP3 PUSH2 0x3DCF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F35 PUSH1 0x23 DUP4 PUSH2 0x3763 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F40 DUP3 PUSH2 0x3E1E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F58 PUSH1 0x7 DUP4 PUSH2 0x3774 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F63 DUP3 PUSH2 0x3E6D JUMP JUMPDEST PUSH1 0x7 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F7B PUSH1 0x10 DUP4 PUSH2 0x3763 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F86 DUP3 PUSH2 0x3E96 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F9E PUSH1 0x12 DUP4 PUSH2 0x3763 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FA9 DUP3 PUSH2 0x3EBF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FC1 PUSH1 0x20 DUP4 PUSH2 0x3763 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FCC DUP3 PUSH2 0x3EE8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FE4 PUSH1 0x17 DUP4 PUSH2 0x3763 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FEF DUP3 PUSH2 0x3F11 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3007 PUSH1 0x20 DUP4 PUSH2 0x3763 JUMP JUMPDEST SWAP2 POP PUSH2 0x3012 DUP3 PUSH2 0x3F3A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x302A PUSH1 0x1B DUP4 PUSH2 0x3763 JUMP JUMPDEST SWAP2 POP PUSH2 0x3035 DUP3 PUSH2 0x3F63 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x304D PUSH1 0x3E DUP4 PUSH2 0x3763 JUMP JUMPDEST SWAP2 POP PUSH2 0x3058 DUP3 PUSH2 0x3F8C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3070 PUSH1 0xA DUP4 PUSH2 0x3774 JUMP JUMPDEST SWAP2 POP PUSH2 0x307B DUP3 PUSH2 0x3FDB JUMP JUMPDEST PUSH1 0xA DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3093 PUSH1 0x1E DUP4 PUSH2 0x3763 JUMP JUMPDEST SWAP2 POP PUSH2 0x309E DUP3 PUSH2 0x4004 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30B6 PUSH1 0x28 DUP4 PUSH2 0x3763 JUMP JUMPDEST SWAP2 POP PUSH2 0x30C1 DUP3 PUSH2 0x402D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30D9 PUSH1 0x8 DUP4 PUSH2 0x3774 JUMP JUMPDEST SWAP2 POP PUSH2 0x30E4 DUP3 PUSH2 0x407C JUMP JUMPDEST PUSH1 0x8 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30FC PUSH1 0x22 DUP4 PUSH2 0x3763 JUMP JUMPDEST SWAP2 POP PUSH2 0x3107 DUP3 PUSH2 0x40A5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x311F PUSH1 0x8 DUP4 PUSH2 0x3774 JUMP JUMPDEST SWAP2 POP PUSH2 0x312A DUP3 PUSH2 0x40F4 JUMP JUMPDEST PUSH1 0x8 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x314D PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x31D1 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x3165 DUP3 DUP3 PUSH2 0x2DCE JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x317A PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x2D24 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x318D PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x31D1 JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x31A0 PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x31D1 JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH2 0x31B3 PUSH1 0xA0 DUP7 ADD DUP3 PUSH2 0x31D1 JUMP JUMPDEST POP PUSH1 0xC0 DUP4 ADD MLOAD PUSH2 0x31C6 PUSH1 0xC0 DUP7 ADD DUP3 PUSH2 0x2D42 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x31DA DUP2 PUSH2 0x3A79 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x31E9 DUP2 PUSH2 0x3A79 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3200 PUSH2 0x31FB DUP3 PUSH2 0x3A79 JUMP JUMPDEST PUSH2 0x3BB9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3212 DUP3 DUP6 PUSH2 0x2DB7 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x3222 DUP3 DUP5 PUSH2 0x31EF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x323E DUP3 DUP6 PUSH2 0x2E40 JUMP JUMPDEST SWAP2 POP PUSH2 0x3249 DUP3 PUSH2 0x2F4B JUMP JUMPDEST SWAP2 POP PUSH2 0x3255 DUP3 DUP5 PUSH2 0x31EF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3271 DUP3 DUP7 PUSH2 0x2E40 JUMP JUMPDEST SWAP2 POP PUSH2 0x327C DUP3 PUSH2 0x30CC JUMP JUMPDEST SWAP2 POP PUSH2 0x3288 DUP3 DUP6 PUSH2 0x31EF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x3297 DUP3 PUSH2 0x3063 JUMP JUMPDEST SWAP2 POP PUSH2 0x32A3 DUP3 DUP5 PUSH2 0x31EF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x32B2 DUP3 PUSH2 0x3112 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x32D4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2D33 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x32EF PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2D33 JUMP JUMPDEST PUSH2 0x32FC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x31E0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x3319 PUSH1 0x0 DUP4 ADD DUP12 PUSH2 0x2D33 JUMP JUMPDEST PUSH2 0x3326 PUSH1 0x20 DUP4 ADD DUP11 PUSH2 0x31E0 JUMP JUMPDEST PUSH2 0x3333 PUSH1 0x40 DUP4 ADD DUP10 PUSH2 0x2D60 JUMP JUMPDEST PUSH2 0x3340 PUSH1 0x60 DUP4 ADD DUP9 PUSH2 0x2D33 JUMP JUMPDEST PUSH2 0x334D PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x2D6F JUMP JUMPDEST PUSH2 0x335A PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x31E0 JUMP JUMPDEST PUSH2 0x3367 PUSH1 0xC0 DUP4 ADD DUP6 PUSH2 0x31E0 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x3379 DUP2 DUP5 PUSH2 0x2D7E JUMP JUMPDEST SWAP1 POP SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x339D PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2D33 JUMP JUMPDEST PUSH2 0x33AA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x31E0 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x33BC DUP2 DUP5 PUSH2 0x2D7E JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x33DB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2D51 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x33F6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2D60 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3411 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2D60 JUMP JUMPDEST PUSH2 0x341E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x31E0 JUMP JUMPDEST PUSH2 0x342B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2D6F JUMP JUMPDEST PUSH2 0x3438 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x31E0 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x345B DUP2 DUP5 PUSH2 0x2E07 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x347C DUP2 PUSH2 0x2EBF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x349C DUP2 PUSH2 0x2EE2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x34BC DUP2 PUSH2 0x2F05 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x34DC DUP2 PUSH2 0x2F28 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x34FC DUP2 PUSH2 0x2F6E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x351C DUP2 PUSH2 0x2F91 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x353C DUP2 PUSH2 0x2FB4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x355C DUP2 PUSH2 0x2FD7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x357C DUP2 PUSH2 0x2FFA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x359C DUP2 PUSH2 0x301D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x35BC DUP2 PUSH2 0x3040 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x35DC DUP2 PUSH2 0x3086 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x35FC DUP2 PUSH2 0x30A9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x361C DUP2 PUSH2 0x30EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x363D DUP2 DUP5 PUSH2 0x3135 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x365A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x31E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3675 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x31E0 JUMP JUMPDEST PUSH2 0x3682 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2D33 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x369E PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x31E0 JUMP JUMPDEST PUSH2 0x36AB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2D33 JUMP JUMPDEST PUSH2 0x36B8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x31E0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36CA PUSH2 0x36DB JUMP JUMPDEST SWAP1 POP PUSH2 0x36D6 DUP3 DUP3 PUSH2 0x3B1B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3700 JUMPI PUSH2 0x36FF PUSH2 0x3CDF JUMP JUMPDEST JUMPDEST PUSH2 0x3709 DUP3 PUSH2 0x3D2C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x378A DUP3 PUSH2 0x3A79 JUMP JUMPDEST SWAP2 POP PUSH2 0x3795 DUP4 PUSH2 0x3A79 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x37CA JUMPI PUSH2 0x37C9 PUSH2 0x3BF4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37E0 DUP3 PUSH2 0x3A79 JUMP JUMPDEST SWAP2 POP PUSH2 0x37EB DUP4 PUSH2 0x3A79 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x37FB JUMPI PUSH2 0x37FA PUSH2 0x3C23 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x3850 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x382C JUMPI PUSH2 0x382B PUSH2 0x3BF4 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x383B JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x3849 DUP6 PUSH2 0x3D4A JUMP JUMPDEST SWAP5 POP PUSH2 0x3810 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3864 DUP3 PUSH2 0x3A79 JUMP JUMPDEST SWAP2 POP PUSH2 0x386F DUP4 PUSH2 0x3A79 JUMP JUMPDEST SWAP3 POP PUSH2 0x389C PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x38A4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x38B4 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x3970 JUMP JUMPDEST DUP2 PUSH2 0x38C2 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x3970 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x38D8 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x38E2 JUMPI PUSH2 0x3911 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x3970 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x38F4 JUMPI PUSH2 0x38F3 PUSH2 0x3BF4 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x390B JUMPI PUSH2 0x390A PUSH2 0x3BF4 JUMP JUMPDEST JUMPDEST POP PUSH2 0x3970 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x3946 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x3941 JUMPI PUSH2 0x3940 PUSH2 0x3BF4 JUMP JUMPDEST JUMPDEST PUSH2 0x3970 JUMP JUMPDEST PUSH2 0x3953 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x3806 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x396A JUMPI PUSH2 0x3969 PUSH2 0x3BF4 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3982 DUP3 PUSH2 0x3A79 JUMP JUMPDEST SWAP2 POP PUSH2 0x398D DUP4 PUSH2 0x3A79 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x39C6 JUMPI PUSH2 0x39C5 PUSH2 0x3BF4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39DC DUP3 PUSH2 0x3A79 JUMP JUMPDEST SWAP2 POP PUSH2 0x39E7 DUP4 PUSH2 0x3A79 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x39FA JUMPI PUSH2 0x39F9 PUSH2 0x3BF4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A10 DUP3 PUSH2 0x3A59 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A8E DUP3 PUSH2 0x3A95 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AA0 DUP3 PUSH2 0x3A59 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3AD4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3AB9 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3AE3 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x3B01 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x3B15 JUMPI PUSH2 0x3B14 PUSH2 0x3C52 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3B24 DUP3 PUSH2 0x3D2C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3B43 JUMPI PUSH2 0x3B42 PUSH2 0x3CDF JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B57 DUP3 PUSH2 0x3A79 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x3B8A JUMPI PUSH2 0x3B89 PUSH2 0x3BF4 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BA0 DUP3 PUSH2 0x3BA7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BB2 DUP3 PUSH2 0x3D3D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BCE DUP3 PUSH2 0x3A79 JUMP JUMPDEST SWAP2 POP PUSH2 0x3BD9 DUP4 PUSH2 0x3A79 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3BE9 JUMPI PUSH2 0x3BE8 PUSH2 0x3C23 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616D706169676E20697320636C6F7365640000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F7420612076616C6964617465642063616D706169 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x676E20636F6E7472696275746F72000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x756E61626C6520746F207472616E73666572416E6443616C6C20746F206F7261 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x636C650000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x2F75736572732F00000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x556E61626C6520746F207472616E736665720000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F74207468652061646D696E000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F74207468652063616D706169676E206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5265747269627574696F6E20616C726561647920636C61696D65640000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5468697320636F6E747269627574696F6E20646F6573206E6F74207361746973 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6679207468652063616D706169676E277320726571756972656D656E74730000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x2F74776974746572732F00000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x456E756D657261626C654D61703A206E6F6E6578697374656E74206B65790000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x536F75726365206D75737420626520746865206F7261636C65206F6620746865 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2072657175657374000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x2F636861696E732F000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x436F6E7472696275746F7273206C696D697420616C7265616479207265616368 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6564000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x2F77696E6E657273000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x4126 DUP2 PUSH2 0x3A05 JUMP JUMPDEST DUP2 EQ PUSH2 0x4131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x413D DUP2 PUSH2 0x3A17 JUMP JUMPDEST DUP2 EQ PUSH2 0x4148 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x4154 DUP2 PUSH2 0x3A23 JUMP JUMPDEST DUP2 EQ PUSH2 0x415F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x416B DUP2 PUSH2 0x3A2D JUMP JUMPDEST DUP2 EQ PUSH2 0x4176 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x4182 DUP2 PUSH2 0x3A79 JUMP JUMPDEST DUP2 EQ PUSH2 0x418D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC DUP6 0xCE 0xAD 0x4B PUSH20 0xD74CA463BF01C638BEB93ABEDDCCB8A4C886CE10 0xBF CHAINID SWAP3 0xD9 GAS 0xBF PUSH5 0x736F6C6343 STOP ADDMOD MOD STOP CALLER ","sourceMap":"536:11455:11:-:0;;;1291:1:1;1258:34;;2401:384:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;991:5:14;981:7;;:15;;;;;;;;;;;;;;;;;;921:32:12;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;1701:1:15;1806:7;:22;;;;2544:24:11;2562:5;2544:17;;;:24;;:::i;:::-;2574:27;2593:7;2574:18;;;:27;;:::i;:::-;2615:6;2607:14;;;;;;2707:2;675:6:1;2682:1:11;:21;;;;:::i;:::-;2681:28;;;;:::i;:::-;2675:34;;;;;;2730:12;2716:11;:26;;;;2765:15;2748:14;:32;;;;;;;;;;;;:::i;:::-;;2401:384;;;;;536:11455;;640:96:16;693:7;719:10;712:17;;640:96;:::o;2270:187:12:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;8625:108:1:-;8716:11;8688:6;;:40;;;;;;;;;;;;;;;;;;8625:108;:::o;8391:114::-;8486:13;8457:8;;:43;;;;;;;;;;;;;;;;;;8391:114;:::o;536:11455:11:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:421:20:-;96:5;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:2;;;293:79;;:::i;:::-;262:2;383:39;415:6;410:3;405;383:39;:::i;:::-;102:326;;;;;;:::o;434:143::-;491:5;522:6;516:13;507:22;;538:33;565:5;538:33;:::i;:::-;497:80;;;;:::o;583:143::-;640:5;671:6;665:13;656:22;;687:33;714:5;687:33;:::i;:::-;646:80;;;;:::o;746:355::-;813:5;862:3;855:4;847:6;843:17;839:27;829:2;;870:79;;:::i;:::-;829:2;980:6;974:13;1005:90;1091:3;1083:6;1076:4;1068:6;1064:17;1005:90;:::i;:::-;996:99;;819:282;;;;;:::o;1107:143::-;1164:5;1195:6;1189:13;1180:22;;1211:33;1238:5;1211:33;:::i;:::-;1170:80;;;;:::o;1256:1150::-;1372:6;1380;1388;1396;1404;1453:3;1441:9;1432:7;1428:23;1424:33;1421:2;;;1460:79;;:::i;:::-;1421:2;1580:1;1605:64;1661:7;1652:6;1641:9;1637:22;1605:64;:::i;:::-;1595:74;;1551:128;1739:2;1728:9;1724:18;1718:25;1770:18;1762:6;1759:30;1756:2;;;1792:79;;:::i;:::-;1756:2;1897:74;1963:7;1954:6;1943:9;1939:22;1897:74;:::i;:::-;1887:84;;1689:292;2020:2;2046:64;2102:7;2093:6;2082:9;2078:22;2046:64;:::i;:::-;2036:74;;1991:129;2159:2;2185:64;2241:7;2232:6;2221:9;2217:22;2185:64;:::i;:::-;2175:74;;2130:129;2298:3;2325:64;2381:7;2372:6;2361:9;2357:22;2325:64;:::i;:::-;2315:74;;2269:130;1411:995;;;;;;;;:::o;2412:129::-;2446:6;2473:20;;:::i;:::-;2463:30;;2502:33;2530:4;2522:6;2502:33;:::i;:::-;2453:88;;;:::o;2547:75::-;2580:6;2613:2;2607:9;2597:19;;2587:35;:::o;2628:308::-;2690:4;2780:18;2772:6;2769:30;2766:2;;;2802:18;;:::i;:::-;2766:2;2840:29;2862:6;2840:29;:::i;:::-;2832:37;;2924:4;2918;2914:15;2906:23;;2695:241;;;:::o;2942:185::-;2982:1;2999:20;3017:1;2999:20;:::i;:::-;2994:25;;3033:20;3051:1;3033:20;:::i;:::-;3028:25;;3072:1;3062:2;;3077:18;;:::i;:::-;3062:2;3119:1;3116;3112:9;3107:14;;2984:143;;;;:::o;3133:348::-;3173:7;3196:20;3214:1;3196:20;:::i;:::-;3191:25;;3230:20;3248:1;3230:20;:::i;:::-;3225:25;;3418:1;3350:66;3346:74;3343:1;3340:81;3335:1;3328:9;3321:17;3317:105;3314:2;;;3425:18;;:::i;:::-;3314:2;3473:1;3470;3466:9;3455:20;;3181:300;;;;:::o;3487:96::-;3524:7;3553:24;3571:5;3553:24;:::i;:::-;3542:35;;3532:51;;;:::o;3589:77::-;3626:7;3655:5;3644:16;;3634:32;;;:::o;3672:126::-;3709:7;3749:42;3742:5;3738:54;3727:65;;3717:81;;;:::o;3804:77::-;3841:7;3870:5;3859:16;;3849:32;;;:::o;3887:307::-;3955:1;3965:113;3979:6;3976:1;3973:13;3965:113;;;4064:1;4059:3;4055:11;4049:18;4045:1;4040:3;4036:11;4029:39;4001:2;3998:1;3994:10;3989:15;;3965:113;;;4096:6;4093:1;4090:13;4087:2;;;4176:1;4167:6;4162:3;4158:16;4151:27;4087:2;3936:258;;;;:::o;4200:320::-;4244:6;4281:1;4275:4;4271:12;4261:22;;4328:1;4322:4;4318:12;4349:18;4339:2;;4405:4;4397:6;4393:17;4383:27;;4339:2;4467;4459:6;4456:14;4436:18;4433:38;4430:2;;;4486:18;;:::i;:::-;4430:2;4251:269;;;;:::o;4526:281::-;4609:27;4631:4;4609:27;:::i;:::-;4601:6;4597:40;4739:6;4727:10;4724:22;4703:18;4691:10;4688:34;4685:62;4682:2;;;4750:18;;:::i;:::-;4682:2;4790:10;4786:2;4779:22;4569:238;;;:::o;4813:180::-;4861:77;4858:1;4851:88;4958:4;4955:1;4948:15;4982:4;4979:1;4972:15;4999:180;5047:77;5044:1;5037:88;5144:4;5141:1;5134:15;5168:4;5165:1;5158:15;5185:180;5233:77;5230:1;5223:88;5330:4;5327:1;5320:15;5354:4;5351:1;5344:15;5371:180;5419:77;5416:1;5409:88;5516:4;5513:1;5506:15;5540:4;5537:1;5530:15;5557:117;5666:1;5663;5656:12;5680:117;5789:1;5786;5779:12;5803:117;5912:1;5909;5902:12;5926:117;6035:1;6032;6025:12;6049:102;6090:6;6141:2;6137:7;6132:2;6125:5;6121:14;6117:28;6107:38;;6097:54;;;:::o;6157:122::-;6230:24;6248:5;6230:24;:::i;:::-;6223:5;6220:35;6210:2;;6269:1;6266;6259:12;6210:2;6200:79;:::o;6285:122::-;6358:24;6376:5;6358:24;:::i;:::-;6351:5;6348:35;6338:2;;6397:1;6394;6387:12;6338:2;6328:79;:::o;6413:122::-;6486:24;6504:5;6486:24;:::i;:::-;6479:5;6476:35;6466:2;;6525:1;6522;6515:12;6466:2;6456:79;:::o;536:11455:11:-;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@MAX_TREASURY_FEE_2260":{"entryPoint":4894,"id":2260,"parameterSlots":0,"returnSlots":0},"@_addPartakerToCampaignContributors_2900":{"entryPoint":6331,"id":2900,"parameterSlots":2,"returnSlots":0},"@_add_3967":{"entryPoint":7946,"id":3967,"parameterSlots":2,"returnSlots":1},"@_computeRetributionAmount_2947":{"entryPoint":5757,"id":2947,"parameterSlots":1,"returnSlots":1},"@_contains_3520":{"entryPoint":7205,"id":3520,"parameterSlots":2,"returnSlots":1},"@_contains_4070":{"entryPoint":9007,"id":4070,"parameterSlots":2,"returnSlots":1},"@_getCampaign_2820":{"entryPoint":5922,"id":2820,"parameterSlots":1,"returnSlots":1},"@_get_3641":{"entryPoint":7258,"id":3641,"parameterSlots":2,"returnSlots":1},"@_length_3535":{"entryPoint":7237,"id":3535,"parameterSlots":1,"returnSlots":1},"@_length_4084":{"entryPoint":9042,"id":4084,"parameterSlots":1,"returnSlots":1},"@_msgSender_3350":{"entryPoint":6026,"id":3350,"parameterSlots":0,"returnSlots":1},"@_rawRequest_594":{"entryPoint":8587,"id":594,"parameterSlots":4,"returnSlots":1},"@_remove_3502":{"entryPoint":7382,"id":3502,"parameterSlots":2,"returnSlots":1},"@_remove_4051":{"entryPoint":9059,"id":4051,"parameterSlots":2,"returnSlots":1},"@_requestSignUp_3006":{"entryPoint":5201,"id":3006,"parameterSlots":1,"returnSlots":1},"@_set_3478":{"entryPoint":6991,"id":3478,"parameterSlots":3,"returnSlots":1},"@_transferOwnership_3125":{"entryPoint":6034,"id":3125,"parameterSlots":1,"returnSlots":0},"@_updateContributorClaimStatus_2922":{"entryPoint":5805,"id":2922,"parameterSlots":1,"returnSlots":0},"@_validateContributionClaim_2845":{"entryPoint":6299,"id":2845,"parameterSlots":3,"returnSlots":1},"@addUser_2784":{"entryPoint":2094,"id":2784,"parameterSlots":2,"returnSlots":0},"@add_125":{"entryPoint":7099,"id":125,"parameterSlots":3,"returnSlots":0},"@add_4137":{"entryPoint":7439,"id":4137,"parameterSlots":2,"returnSlots":1},"@appendInt_1717":{"entryPoint":9367,"id":1717,"parameterSlots":3,"returnSlots":1},"@appendUint8_1514":{"entryPoint":9335,"id":1514,"parameterSlots":2,"returnSlots":1},"@append_1461":{"entryPoint":8553,"id":1461,"parameterSlots":2,"returnSlots":1},"@buildChainlinkRequest_373":{"entryPoint":7050,"id":373,"parameterSlots":3,"returnSlots":1},"@cancelChainlinkRequest_634":{"entryPoint":6716,"id":634,"parameterSlots":4,"returnSlots":0},"@cancelRequest_2806":{"entryPoint":4620,"id":2806,"parameterSlots":4,"returnSlots":0},"@chainlinkTokenAddress_694":{"entryPoint":6231,"id":694,"parameterSlots":0,"returnSlots":1},"@claimCampaignContribution_2493":{"entryPoint":3748,"id":2493,"parameterSlots":3,"returnSlots":0},"@claimCampaignRetribution_2554":{"entryPoint":1282,"id":2554,"parameterSlots":1,"returnSlots":0},"@closeCampaign_2455":{"entryPoint":3501,"id":2455,"parameterSlots":1,"returnSlots":0},"@contains_3755":{"entryPoint":5950,"id":3755,"parameterSlots":2,"returnSlots":1},"@contains_4173":{"entryPoint":7879,"id":4173,"parameterSlots":2,"returnSlots":1},"@createCampaign_2422":{"entryPoint":3907,"id":2422,"parameterSlots":5,"returnSlots":0},"@encodeFixedNumeric_1886":{"entryPoint":8164,"id":1886,"parameterSlots":3,"returnSlots":0},"@encodeString_2128":{"entryPoint":7638,"id":2128,"parameterSlots":2,"returnSlots":0},"@fulfillSignUp_2661":{"entryPoint":3071,"id":2661,"parameterSlots":3,"returnSlots":0},"@getCampaign_2697":{"entryPoint":1760,"id":2697,"parameterSlots":1,"returnSlots":1},"@getSignUpURI_2716":{"entryPoint":3419,"id":2716,"parameterSlots":1,"returnSlots":1},"@getTwitterURI_2684":{"entryPoint":1138,"id":2684,"parameterSlots":1,"returnSlots":1},"@get_3880":{"entryPoint":5997,"id":3880,"parameterSlots":2,"returnSlots":1},"@hasSignedUp_2593":{"entryPoint":3390,"id":2593,"parameterSlots":1,"returnSlots":1},"@hasSignedUp_2631":{"entryPoint":2285,"id":2631,"parameterSlots":0,"returnSlots":1},"@init_1242":{"entryPoint":8058,"id":1242,"parameterSlots":2,"returnSlots":1},"@initialize_70":{"entryPoint":7462,"id":70,"parameterSlots":4,"returnSlots":1},"@jobId_2208":{"entryPoint":4436,"id":2208,"parameterSlots":0,"returnSlots":0},"@keeper_2206":{"entryPoint":3463,"id":2206,"parameterSlots":0,"returnSlots":0},"@length_3770":{"entryPoint":5976,"id":3770,"parameterSlots":1,"returnSlots":1},"@length_4188":{"entryPoint":7902,"id":4188,"parameterSlots":1,"returnSlots":1},"@max_1314":{"entryPoint":9869,"id":1314,"parameterSlots":2,"returnSlots":1},"@owner_3054":{"entryPoint":2551,"id":3054,"parameterSlots":0,"returnSlots":1},"@paused_3242":{"entryPoint":2263,"id":3242,"parameterSlots":0,"returnSlots":1},"@remove_3734":{"entryPoint":6273,"id":3734,"parameterSlots":2,"returnSlots":1},"@remove_4155":{"entryPoint":7923,"id":4155,"parameterSlots":2,"returnSlots":1},"@renounceOwnership_3082":{"entryPoint":2415,"id":3082,"parameterSlots":0,"returnSlots":0},"@requestBaseURI_2212":{"entryPoint":4478,"id":2212,"parameterSlots":0,"returnSlots":0},"@resize_1295":{"entryPoint":9897,"id":1295,"parameterSlots":2,"returnSlots":0},"@sendChainlinkRequestTo_477":{"entryPoint":7675,"id":477,"parameterSlots":3,"returnSlots":1},"@sendChainlinkRequest_422":{"entryPoint":7150,"id":422,"parameterSlots":2,"returnSlots":1},"@setRequestBaseURI_2760":{"entryPoint":4755,"id":2760,"parameterSlots":2,"returnSlots":0},"@set_3713":{"entryPoint":5148,"id":3713,"parameterSlots":3,"returnSlots":1},"@signUp_2579":{"entryPoint":1184,"id":2579,"parameterSlots":1,"returnSlots":0},"@transferOwnership_3105":{"entryPoint":4900,"id":3105,"parameterSlots":1,"returnSlots":0},"@treasuryAmount_2264":{"entryPoint":1276,"id":2264,"parameterSlots":0,"returnSlots":0},"@treasuryFee_2262":{"entryPoint":4472,"id":2262,"parameterSlots":0,"returnSlots":0},"@withdrawLink_2747":{"entryPoint":2592,"id":2747,"parameterSlots":0,"returnSlots":0},"@writeInt_1693":{"entryPoint":9727,"id":1693,"parameterSlots":4,"returnSlots":1},"@writeUint8_1493":{"entryPoint":9640,"id":1493,"parameterSlots":3,"returnSlots":1},"@write_1414":{"entryPoint":9401,"id":1414,"parameterSlots":4,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":10457,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":10523,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":10544,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":10565,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":10586,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":10607,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_calldata_ptr":{"entryPoint":10628,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_string_memory_ptr":{"entryPoint":10714,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":10760,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":10781,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":10802,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":10847,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_uint256t_bool":{"entryPoint":10892,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bytes32t_uint256t_bytes4t_uint256":{"entryPoint":10975,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_string_calldata_ptr":{"entryPoint":11078,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_string_calldata_ptrt_uint256t_uint256t_uint256":{"entryPoint":11155,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_uint256":{"entryPoint":11291,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":11336,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_address":{"entryPoint":11381,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_string_memory_ptrt_uint256":{"entryPoint":11445,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_address_to_t_address":{"entryPoint":11556,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":11571,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool":{"entryPoint":11586,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":11601,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":11616,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes4_to_t_bytes4_fromStack":{"entryPoint":11631,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":11646,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_contract$_ChainlinkClient_$861_to_t_address_nonPadded_inplace_fromStack":{"entryPoint":11703,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr":{"entryPoint":11726,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":11783,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":11840,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_1f5a2f62658d6a797c6aa77f3644d453326e014c355d91d89127b18e16c407ef_to_t_string_memory_ptr_fromStack":{"entryPoint":11967,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_2254f56cac9b925e5567d5317d5f1fa4cb1cef32c5f259415ee5e2f68ac31e6b_to_t_string_memory_ptr_fromStack":{"entryPoint":12002,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":12037,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3b3efd608222b424e5ed8427d7f6a272069793e6a1f5930c93db5c7960c3ce96_to_t_string_memory_ptr_fromStack":{"entryPoint":12072,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4be9d97bdca36db909fee5364c11951f6518ef5896e8fb5c1e00fce6d29b39da_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":12107,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack":{"entryPoint":12142,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8e1f7009e5aca473fdde21442dae29568050b67581f4b146dca8997db684dff1_to_t_string_memory_ptr_fromStack":{"entryPoint":12177,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":12212,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_aa8ec5d8fae9f4324168b2ce12ce357d4c8138c22ffca90f21d943a8359ed9fe_to_t_string_memory_ptr_fromStack":{"entryPoint":12247,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ae094217ca8267b1aa5ddfc23784056f71662e2c3ecbe8a78d373fd86d4eaae0_to_t_string_memory_ptr_fromStack":{"entryPoint":12282,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b4b84ebe3de827a4087f895b834b5993eef1b5aca3e2419eeecfbb4534ceb6c3_to_t_string_memory_ptr_fromStack":{"entryPoint":12317,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c2f50fde43b6cd00923414ed2254557266b44b46c98097d2bbc05bc171375af6_to_t_string_memory_ptr_fromStack":{"entryPoint":12352,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d236356f527fa222b87a926997fc1f57d7b3c06dcab0ec8b5ababcc1f490e6c6_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":12387,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d3551e30d3095fd81287b88f7139bb09818e34280e85ee821994ebaebbed7072_to_t_string_memory_ptr_fromStack":{"entryPoint":12422,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d5cafe2745dab6273b51cca76f8727c7664db74ede49af049a5b5ca6a3b184e4_to_t_string_memory_ptr_fromStack":{"entryPoint":12457,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e5b64fb870214178f776923098f80ee63b1955f85cb0bb444948ce3811079999_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":12492,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f41b38bb6792dd2d923f031bfb556202e92815c3f2ff36e44de6f82c3da0b8b1_to_t_string_memory_ptr_fromStack":{"entryPoint":12527,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ff0857fd342fd731a7c8d6dc5fe2a580363be68de125dbf9a650ceb34ce564ac_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":12562,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_Campaign_$2232_memory_ptr_to_t_struct$_Campaign_$2232_memory_ptr_fromStack":{"entryPoint":12597,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":12753,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":12768,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack":{"entryPoint":12783,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_contract$_ChainlinkClient_$861_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed":{"entryPoint":12806,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_string_storage_t_stringliteral_4be9d97bdca36db909fee5364c11951f6518ef5896e8fb5c1e00fce6d29b39da_t_uint256__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256__nonPadded_inplace_fromStack_reversed":{"entryPoint":12850,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_string_storage_t_stringliteral_e5b64fb870214178f776923098f80ee63b1955f85cb0bb444948ce3811079999_t_uint256_t_stringliteral_d236356f527fa222b87a926997fc1f57d7b3c06dcab0ec8b5ababcc1f490e6c6_t_uint256_t_stringliteral_ff0857fd342fd731a7c8d6dc5fe2a580363be68de125dbf9a650ceb34ce564ac__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_string_memory_ptr_t_uint256_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":12901,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":12991,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":13018,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_bytes32_t_address_t_bytes4_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_uint256_t_bytes32_t_address_t_bytes4_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":13059,"id":null,"parameterSlots":9,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":13192,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":13254,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":13281,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint256_t_bytes4_t_uint256__to_t_bytes32_t_uint256_t_bytes4_t_uint256__fromStack_reversed":{"entryPoint":13308,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13377,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1f5a2f62658d6a797c6aa77f3644d453326e014c355d91d89127b18e16c407ef__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13411,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2254f56cac9b925e5567d5317d5f1fa4cb1cef32c5f259415ee5e2f68ac31e6b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13443,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13475,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b3efd608222b424e5ed8427d7f6a272069793e6a1f5930c93db5c7960c3ce96__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13507,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13539,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8e1f7009e5aca473fdde21442dae29568050b67581f4b146dca8997db684dff1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13571,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13603,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_aa8ec5d8fae9f4324168b2ce12ce357d4c8138c22ffca90f21d943a8359ed9fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13635,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ae094217ca8267b1aa5ddfc23784056f71662e2c3ecbe8a78d373fd86d4eaae0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13667,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b4b84ebe3de827a4087f895b834b5993eef1b5aca3e2419eeecfbb4534ceb6c3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13699,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c2f50fde43b6cd00923414ed2254557266b44b46c98097d2bbc05bc171375af6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13731,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3551e30d3095fd81287b88f7139bb09818e34280e85ee821994ebaebbed7072__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13763,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d5cafe2745dab6273b51cca76f8727c7664db74ede49af049a5b5ca6a3b184e4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13795,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f41b38bb6792dd2d923f031bfb556202e92815c3f2ff36e44de6f82c3da0b8b1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13827,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_Campaign_$2232_memory_ptr__to_t_struct$_Campaign_$2232_memory_ptr__fromStack_reversed":{"entryPoint":13859,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":13893,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed":{"entryPoint":13920,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed":{"entryPoint":13961,"id":null,"parameterSlots":4,"returnSlots":1},"allocate_memory":{"entryPoint":14016,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":14043,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":14053,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":14102,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":14123,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":14134,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":14145,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr":{"entryPoint":14162,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":14179,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":14196,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":14207,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":14293,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":14342,"id":null,"parameterSlots":4,"returnSlots":2},"checked_exp_t_uint256_t_uint256":{"entryPoint":14425,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":14500,"id":null,"parameterSlots":3,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":14711,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":14801,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":14853,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":14871,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":14883,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":14893,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":14937,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":14969,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_ChainlinkClient_$861_to_t_address":{"entryPoint":14979,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_ChainlinkClient_$861_to_t_uint160":{"entryPoint":14997,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":15015,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":15030,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":15081,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":15131,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":15180,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_address":{"entryPoint":15253,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint160":{"entryPoint":15271,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint256":{"entryPoint":15289,"id":null,"parameterSlots":1,"returnSlots":1},"mod_t_uint256":{"entryPoint":15299,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":15348,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":15395,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":15442,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":15489,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":15536,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":15583,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":15630,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":15635,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":15640,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":15645,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":15650,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":15655,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":15660,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_96":{"entryPoint":15677,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_1_unsigned":{"entryPoint":15690,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_1f5a2f62658d6a797c6aa77f3644d453326e014c355d91d89127b18e16c407ef":{"entryPoint":15703,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_2254f56cac9b925e5567d5317d5f1fa4cb1cef32c5f259415ee5e2f68ac31e6b":{"entryPoint":15744,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":15823,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3b3efd608222b424e5ed8427d7f6a272069793e6a1f5930c93db5c7960c3ce96":{"entryPoint":15902,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4be9d97bdca36db909fee5364c11951f6518ef5896e8fb5c1e00fce6d29b39da":{"entryPoint":15981,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a":{"entryPoint":16022,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8e1f7009e5aca473fdde21442dae29568050b67581f4b146dca8997db684dff1":{"entryPoint":16063,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":16104,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_aa8ec5d8fae9f4324168b2ce12ce357d4c8138c22ffca90f21d943a8359ed9fe":{"entryPoint":16145,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ae094217ca8267b1aa5ddfc23784056f71662e2c3ecbe8a78d373fd86d4eaae0":{"entryPoint":16186,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b4b84ebe3de827a4087f895b834b5993eef1b5aca3e2419eeecfbb4534ceb6c3":{"entryPoint":16227,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c2f50fde43b6cd00923414ed2254557266b44b46c98097d2bbc05bc171375af6":{"entryPoint":16268,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d236356f527fa222b87a926997fc1f57d7b3c06dcab0ec8b5ababcc1f490e6c6":{"entryPoint":16347,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d3551e30d3095fd81287b88f7139bb09818e34280e85ee821994ebaebbed7072":{"entryPoint":16388,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d5cafe2745dab6273b51cca76f8727c7664db74ede49af049a5b5ca6a3b184e4":{"entryPoint":16429,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e5b64fb870214178f776923098f80ee63b1955f85cb0bb444948ce3811079999":{"entryPoint":16508,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f41b38bb6792dd2d923f031bfb556202e92815c3f2ff36e44de6f82c3da0b8b1":{"entryPoint":16549,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ff0857fd342fd731a7c8d6dc5fe2a580363be68de125dbf9a650ceb34ce564ac":{"entryPoint":16628,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":16669,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":16692,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":16715,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":16738,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":16761,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:46876:20","statements":[{"body":{"nodeType":"YulBlock","src":"91:328:20","statements":[{"nodeType":"YulAssignment","src":"101:75:20","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"168:6:20"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"126:41:20"},"nodeType":"YulFunctionCall","src":"126:49:20"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"110:15:20"},"nodeType":"YulFunctionCall","src":"110:66:20"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"101:5:20"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"192:5:20"},{"name":"length","nodeType":"YulIdentifier","src":"199:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"185:6:20"},"nodeType":"YulFunctionCall","src":"185:21:20"},"nodeType":"YulExpressionStatement","src":"185:21:20"},{"nodeType":"YulVariableDeclaration","src":"215:27:20","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"230:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"237:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"226:3:20"},"nodeType":"YulFunctionCall","src":"226:16:20"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"219:3:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"280:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"282:77:20"},"nodeType":"YulFunctionCall","src":"282:79:20"},"nodeType":"YulExpressionStatement","src":"282:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"261:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"266:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"257:3:20"},"nodeType":"YulFunctionCall","src":"257:16:20"},{"name":"end","nodeType":"YulIdentifier","src":"275:3:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"254:2:20"},"nodeType":"YulFunctionCall","src":"254:25:20"},"nodeType":"YulIf","src":"251:2:20"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"396:3:20"},{"name":"dst","nodeType":"YulIdentifier","src":"401:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"406:6:20"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"372:23:20"},"nodeType":"YulFunctionCall","src":"372:41:20"},"nodeType":"YulExpressionStatement","src":"372:41:20"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"64:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"69:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"77:3:20","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"85:5:20","type":""}],"src":"7:412:20"},{"body":{"nodeType":"YulBlock","src":"477:87:20","statements":[{"nodeType":"YulAssignment","src":"487:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"509:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"496:12:20"},"nodeType":"YulFunctionCall","src":"496:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"487:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"552:5:20"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"525:26:20"},"nodeType":"YulFunctionCall","src":"525:33:20"},"nodeType":"YulExpressionStatement","src":"525:33:20"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"455:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"463:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"471:5:20","type":""}],"src":"425:139:20"},{"body":{"nodeType":"YulBlock","src":"619:84:20","statements":[{"nodeType":"YulAssignment","src":"629:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"651:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"638:12:20"},"nodeType":"YulFunctionCall","src":"638:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"629:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"691:5:20"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"667:23:20"},"nodeType":"YulFunctionCall","src":"667:30:20"},"nodeType":"YulExpressionStatement","src":"667:30:20"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"597:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"605:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"613:5:20","type":""}],"src":"570:133:20"},{"body":{"nodeType":"YulBlock","src":"769:77:20","statements":[{"nodeType":"YulAssignment","src":"779:22:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"794:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"788:5:20"},"nodeType":"YulFunctionCall","src":"788:13:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"779:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"834:5:20"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"810:23:20"},"nodeType":"YulFunctionCall","src":"810:30:20"},"nodeType":"YulExpressionStatement","src":"810:30:20"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"747:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"755:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"763:5:20","type":""}],"src":"709:137:20"},{"body":{"nodeType":"YulBlock","src":"904:87:20","statements":[{"nodeType":"YulAssignment","src":"914:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"936:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"923:12:20"},"nodeType":"YulFunctionCall","src":"923:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"914:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"979:5:20"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"952:26:20"},"nodeType":"YulFunctionCall","src":"952:33:20"},"nodeType":"YulExpressionStatement","src":"952:33:20"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"882:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"890:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"898:5:20","type":""}],"src":"852:139:20"},{"body":{"nodeType":"YulBlock","src":"1048:86:20","statements":[{"nodeType":"YulAssignment","src":"1058:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1080:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1067:12:20"},"nodeType":"YulFunctionCall","src":"1067:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1058:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1122:5:20"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"1096:25:20"},"nodeType":"YulFunctionCall","src":"1096:32:20"},"nodeType":"YulExpressionStatement","src":"1096:32:20"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1026:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"1034:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1042:5:20","type":""}],"src":"997:137:20"},{"body":{"nodeType":"YulBlock","src":"1229:478:20","statements":[{"body":{"nodeType":"YulBlock","src":"1278:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"1280:77:20"},"nodeType":"YulFunctionCall","src":"1280:79:20"},"nodeType":"YulExpressionStatement","src":"1280:79:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1257:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"1265:4:20","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1253:3:20"},"nodeType":"YulFunctionCall","src":"1253:17:20"},{"name":"end","nodeType":"YulIdentifier","src":"1272:3:20"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1249:3:20"},"nodeType":"YulFunctionCall","src":"1249:27:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1242:6:20"},"nodeType":"YulFunctionCall","src":"1242:35:20"},"nodeType":"YulIf","src":"1239:2:20"},{"nodeType":"YulAssignment","src":"1370:30:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1393:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1380:12:20"},"nodeType":"YulFunctionCall","src":"1380:20:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1370:6:20"}]},{"body":{"nodeType":"YulBlock","src":"1443:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"1445:77:20"},"nodeType":"YulFunctionCall","src":"1445:79:20"},"nodeType":"YulExpressionStatement","src":"1445:79:20"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1415:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"1423:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1412:2:20"},"nodeType":"YulFunctionCall","src":"1412:30:20"},"nodeType":"YulIf","src":"1409:2:20"},{"nodeType":"YulAssignment","src":"1535:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1551:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"1559:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1547:3:20"},"nodeType":"YulFunctionCall","src":"1547:17:20"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"1535:8:20"}]},{"body":{"nodeType":"YulBlock","src":"1618:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"1620:77:20"},"nodeType":"YulFunctionCall","src":"1620:79:20"},"nodeType":"YulExpressionStatement","src":"1620:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"1583:8:20"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1597:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"1605:4:20","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1593:3:20"},"nodeType":"YulFunctionCall","src":"1593:17:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1579:3:20"},"nodeType":"YulFunctionCall","src":"1579:32:20"},{"name":"end","nodeType":"YulIdentifier","src":"1613:3:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1576:2:20"},"nodeType":"YulFunctionCall","src":"1576:41:20"},"nodeType":"YulIf","src":"1573:2:20"}]},"name":"abi_decode_t_string_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1196:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"1204:3:20","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"1212:8:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"1222:6:20","type":""}],"src":"1154:553:20"},{"body":{"nodeType":"YulBlock","src":"1789:278:20","statements":[{"body":{"nodeType":"YulBlock","src":"1838:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"1840:77:20"},"nodeType":"YulFunctionCall","src":"1840:79:20"},"nodeType":"YulExpressionStatement","src":"1840:79:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1817:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"1825:4:20","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1813:3:20"},"nodeType":"YulFunctionCall","src":"1813:17:20"},{"name":"end","nodeType":"YulIdentifier","src":"1832:3:20"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1809:3:20"},"nodeType":"YulFunctionCall","src":"1809:27:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1802:6:20"},"nodeType":"YulFunctionCall","src":"1802:35:20"},"nodeType":"YulIf","src":"1799:2:20"},{"nodeType":"YulVariableDeclaration","src":"1930:34:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1957:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1944:12:20"},"nodeType":"YulFunctionCall","src":"1944:20:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1934:6:20","type":""}]},{"nodeType":"YulAssignment","src":"1973:88:20","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2034:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"2042:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2030:3:20"},"nodeType":"YulFunctionCall","src":"2030:17:20"},{"name":"length","nodeType":"YulIdentifier","src":"2049:6:20"},{"name":"end","nodeType":"YulIdentifier","src":"2057:3:20"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1982:47:20"},"nodeType":"YulFunctionCall","src":"1982:79:20"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1973:5:20"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1767:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"1775:3:20","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1783:5:20","type":""}],"src":"1727:340:20"},{"body":{"nodeType":"YulBlock","src":"2125:87:20","statements":[{"nodeType":"YulAssignment","src":"2135:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2157:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2144:12:20"},"nodeType":"YulFunctionCall","src":"2144:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2135:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2200:5:20"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2173:26:20"},"nodeType":"YulFunctionCall","src":"2173:33:20"},"nodeType":"YulExpressionStatement","src":"2173:33:20"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2103:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"2111:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2119:5:20","type":""}],"src":"2073:139:20"},{"body":{"nodeType":"YulBlock","src":"2281:80:20","statements":[{"nodeType":"YulAssignment","src":"2291:22:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2306:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2300:5:20"},"nodeType":"YulFunctionCall","src":"2300:13:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2291:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2349:5:20"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2322:26:20"},"nodeType":"YulFunctionCall","src":"2322:33:20"},"nodeType":"YulExpressionStatement","src":"2322:33:20"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2259:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"2267:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2275:5:20","type":""}],"src":"2218:143:20"},{"body":{"nodeType":"YulBlock","src":"2433:263:20","statements":[{"body":{"nodeType":"YulBlock","src":"2479:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2481:77:20"},"nodeType":"YulFunctionCall","src":"2481:79:20"},"nodeType":"YulExpressionStatement","src":"2481:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2454:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"2463:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2450:3:20"},"nodeType":"YulFunctionCall","src":"2450:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"2475:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2446:3:20"},"nodeType":"YulFunctionCall","src":"2446:32:20"},"nodeType":"YulIf","src":"2443:2:20"},{"nodeType":"YulBlock","src":"2572:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"2587:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"2601:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2591:6:20","type":""}]},{"nodeType":"YulAssignment","src":"2616:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2651:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"2662:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2647:3:20"},"nodeType":"YulFunctionCall","src":"2647:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2671:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2626:20:20"},"nodeType":"YulFunctionCall","src":"2626:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2616:6:20"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2403:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2414:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2426:6:20","type":""}],"src":"2367:329:20"},{"body":{"nodeType":"YulBlock","src":"2776:271:20","statements":[{"body":{"nodeType":"YulBlock","src":"2822:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2824:77:20"},"nodeType":"YulFunctionCall","src":"2824:79:20"},"nodeType":"YulExpressionStatement","src":"2824:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2797:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"2806:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2793:3:20"},"nodeType":"YulFunctionCall","src":"2793:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"2818:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2789:3:20"},"nodeType":"YulFunctionCall","src":"2789:32:20"},"nodeType":"YulIf","src":"2786:2:20"},{"nodeType":"YulBlock","src":"2915:125:20","statements":[{"nodeType":"YulVariableDeclaration","src":"2930:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"2944:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2934:6:20","type":""}]},{"nodeType":"YulAssignment","src":"2959:71:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3002:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"3013:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2998:3:20"},"nodeType":"YulFunctionCall","src":"2998:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3022:7:20"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"2969:28:20"},"nodeType":"YulFunctionCall","src":"2969:61:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2959:6:20"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2746:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2757:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2769:6:20","type":""}],"src":"2702:345:20"},{"body":{"nodeType":"YulBlock","src":"3150:516:20","statements":[{"body":{"nodeType":"YulBlock","src":"3196:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3198:77:20"},"nodeType":"YulFunctionCall","src":"3198:79:20"},"nodeType":"YulExpressionStatement","src":"3198:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3171:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"3180:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3167:3:20"},"nodeType":"YulFunctionCall","src":"3167:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"3192:2:20","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3163:3:20"},"nodeType":"YulFunctionCall","src":"3163:32:20"},"nodeType":"YulIf","src":"3160:2:20"},{"nodeType":"YulBlock","src":"3289:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"3304:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"3318:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3308:6:20","type":""}]},{"nodeType":"YulAssignment","src":"3333:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3368:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"3379:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3364:3:20"},"nodeType":"YulFunctionCall","src":"3364:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3388:7:20"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"3343:20:20"},"nodeType":"YulFunctionCall","src":"3343:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3333:6:20"}]}]},{"nodeType":"YulBlock","src":"3416:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"3431:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"3445:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3435:6:20","type":""}]},{"nodeType":"YulAssignment","src":"3461:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3496:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"3507:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3492:3:20"},"nodeType":"YulFunctionCall","src":"3492:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3516:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3471:20:20"},"nodeType":"YulFunctionCall","src":"3471:53:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3461:6:20"}]}]},{"nodeType":"YulBlock","src":"3544:115:20","statements":[{"nodeType":"YulVariableDeclaration","src":"3559:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"3573:2:20","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3563:6:20","type":""}]},{"nodeType":"YulAssignment","src":"3589:60:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3621:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"3632:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3617:3:20"},"nodeType":"YulFunctionCall","src":"3617:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3641:7:20"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"3599:17:20"},"nodeType":"YulFunctionCall","src":"3599:50:20"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3589:6:20"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_uint256t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3104:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3115:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3127:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3135:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3143:6:20","type":""}],"src":"3053:613:20"},{"body":{"nodeType":"YulBlock","src":"3788:647:20","statements":[{"body":{"nodeType":"YulBlock","src":"3835:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3837:77:20"},"nodeType":"YulFunctionCall","src":"3837:79:20"},"nodeType":"YulExpressionStatement","src":"3837:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3809:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"3818:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3805:3:20"},"nodeType":"YulFunctionCall","src":"3805:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"3830:3:20","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3801:3:20"},"nodeType":"YulFunctionCall","src":"3801:33:20"},"nodeType":"YulIf","src":"3798:2:20"},{"nodeType":"YulBlock","src":"3928:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"3943:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"3957:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3947:6:20","type":""}]},{"nodeType":"YulAssignment","src":"3972:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4007:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"4018:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4003:3:20"},"nodeType":"YulFunctionCall","src":"4003:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4027:7:20"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"3982:20:20"},"nodeType":"YulFunctionCall","src":"3982:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3972:6:20"}]}]},{"nodeType":"YulBlock","src":"4055:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"4070:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"4084:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4074:6:20","type":""}]},{"nodeType":"YulAssignment","src":"4100:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4135:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"4146:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4131:3:20"},"nodeType":"YulFunctionCall","src":"4131:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4155:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4110:20:20"},"nodeType":"YulFunctionCall","src":"4110:53:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4100:6:20"}]}]},{"nodeType":"YulBlock","src":"4183:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"4198:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"4212:2:20","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4202:6:20","type":""}]},{"nodeType":"YulAssignment","src":"4228:62:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4262:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"4273:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4258:3:20"},"nodeType":"YulFunctionCall","src":"4258:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4282:7:20"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"4238:19:20"},"nodeType":"YulFunctionCall","src":"4238:52:20"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4228:6:20"}]}]},{"nodeType":"YulBlock","src":"4310:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"4325:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"4339:2:20","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4329:6:20","type":""}]},{"nodeType":"YulAssignment","src":"4355:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4390:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"4401:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4386:3:20"},"nodeType":"YulFunctionCall","src":"4386:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4410:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4365:20:20"},"nodeType":"YulFunctionCall","src":"4365:53:20"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4355:6:20"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_uint256t_bytes4t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3734:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3745:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3757:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3765:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3773:6:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3781:6:20","type":""}],"src":"3672:763:20"},{"body":{"nodeType":"YulBlock","src":"4527:443:20","statements":[{"body":{"nodeType":"YulBlock","src":"4573:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4575:77:20"},"nodeType":"YulFunctionCall","src":"4575:79:20"},"nodeType":"YulExpressionStatement","src":"4575:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4548:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"4557:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4544:3:20"},"nodeType":"YulFunctionCall","src":"4544:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"4569:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4540:3:20"},"nodeType":"YulFunctionCall","src":"4540:32:20"},"nodeType":"YulIf","src":"4537:2:20"},{"nodeType":"YulBlock","src":"4666:297:20","statements":[{"nodeType":"YulVariableDeclaration","src":"4681:45:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4712:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"4723:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4708:3:20"},"nodeType":"YulFunctionCall","src":"4708:17:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4695:12:20"},"nodeType":"YulFunctionCall","src":"4695:31:20"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4685:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"4773:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"4775:77:20"},"nodeType":"YulFunctionCall","src":"4775:79:20"},"nodeType":"YulExpressionStatement","src":"4775:79:20"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4745:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"4753:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4742:2:20"},"nodeType":"YulFunctionCall","src":"4742:30:20"},"nodeType":"YulIf","src":"4739:2:20"},{"nodeType":"YulAssignment","src":"4870:83:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4925:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"4936:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4921:3:20"},"nodeType":"YulFunctionCall","src":"4921:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4945:7:20"}],"functionName":{"name":"abi_decode_t_string_calldata_ptr","nodeType":"YulIdentifier","src":"4888:32:20"},"nodeType":"YulFunctionCall","src":"4888:65:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4870:6:20"},{"name":"value1","nodeType":"YulIdentifier","src":"4878:6:20"}]}]}]},"name":"abi_decode_tuple_t_string_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4489:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4500:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4512:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4520:6:20","type":""}],"src":"4441:529:20"},{"body":{"nodeType":"YulBlock","src":"5113:828:20","statements":[{"body":{"nodeType":"YulBlock","src":"5160:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5162:77:20"},"nodeType":"YulFunctionCall","src":"5162:79:20"},"nodeType":"YulExpressionStatement","src":"5162:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5134:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"5143:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5130:3:20"},"nodeType":"YulFunctionCall","src":"5130:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"5155:3:20","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5126:3:20"},"nodeType":"YulFunctionCall","src":"5126:33:20"},"nodeType":"YulIf","src":"5123:2:20"},{"nodeType":"YulBlock","src":"5253:297:20","statements":[{"nodeType":"YulVariableDeclaration","src":"5268:45:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5299:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"5310:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5295:3:20"},"nodeType":"YulFunctionCall","src":"5295:17:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5282:12:20"},"nodeType":"YulFunctionCall","src":"5282:31:20"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5272:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"5360:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"5362:77:20"},"nodeType":"YulFunctionCall","src":"5362:79:20"},"nodeType":"YulExpressionStatement","src":"5362:79:20"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5332:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"5340:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5329:2:20"},"nodeType":"YulFunctionCall","src":"5329:30:20"},"nodeType":"YulIf","src":"5326:2:20"},{"nodeType":"YulAssignment","src":"5457:83:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5512:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"5523:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5508:3:20"},"nodeType":"YulFunctionCall","src":"5508:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5532:7:20"}],"functionName":{"name":"abi_decode_t_string_calldata_ptr","nodeType":"YulIdentifier","src":"5475:32:20"},"nodeType":"YulFunctionCall","src":"5475:65:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5457:6:20"},{"name":"value1","nodeType":"YulIdentifier","src":"5465:6:20"}]}]},{"nodeType":"YulBlock","src":"5560:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"5575:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"5589:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5579:6:20","type":""}]},{"nodeType":"YulAssignment","src":"5605:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5640:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"5651:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5636:3:20"},"nodeType":"YulFunctionCall","src":"5636:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5660:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5615:20:20"},"nodeType":"YulFunctionCall","src":"5615:53:20"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5605:6:20"}]}]},{"nodeType":"YulBlock","src":"5688:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"5703:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"5717:2:20","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5707:6:20","type":""}]},{"nodeType":"YulAssignment","src":"5733:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5768:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"5779:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5764:3:20"},"nodeType":"YulFunctionCall","src":"5764:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5788:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5743:20:20"},"nodeType":"YulFunctionCall","src":"5743:53:20"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"5733:6:20"}]}]},{"nodeType":"YulBlock","src":"5816:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"5831:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"5845:2:20","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5835:6:20","type":""}]},{"nodeType":"YulAssignment","src":"5861:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5896:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"5907:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5892:3:20"},"nodeType":"YulFunctionCall","src":"5892:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5916:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5871:20:20"},"nodeType":"YulFunctionCall","src":"5871:53:20"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"5861:6:20"}]}]}]},"name":"abi_decode_tuple_t_string_calldata_ptrt_uint256t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5051:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5062:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5074:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5082:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5090:6:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5098:6:20","type":""},{"name":"value4","nodeType":"YulTypedName","src":"5106:6:20","type":""}],"src":"4976:965:20"},{"body":{"nodeType":"YulBlock","src":"6013:263:20","statements":[{"body":{"nodeType":"YulBlock","src":"6059:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6061:77:20"},"nodeType":"YulFunctionCall","src":"6061:79:20"},"nodeType":"YulExpressionStatement","src":"6061:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6034:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"6043:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6030:3:20"},"nodeType":"YulFunctionCall","src":"6030:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"6055:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6026:3:20"},"nodeType":"YulFunctionCall","src":"6026:32:20"},"nodeType":"YulIf","src":"6023:2:20"},{"nodeType":"YulBlock","src":"6152:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"6167:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"6181:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6171:6:20","type":""}]},{"nodeType":"YulAssignment","src":"6196:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6231:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"6242:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6227:3:20"},"nodeType":"YulFunctionCall","src":"6227:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6251:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6206:20:20"},"nodeType":"YulFunctionCall","src":"6206:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6196:6:20"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5983:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5994:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6006:6:20","type":""}],"src":"5947:329:20"},{"body":{"nodeType":"YulBlock","src":"6359:274:20","statements":[{"body":{"nodeType":"YulBlock","src":"6405:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6407:77:20"},"nodeType":"YulFunctionCall","src":"6407:79:20"},"nodeType":"YulExpressionStatement","src":"6407:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6380:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"6389:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6376:3:20"},"nodeType":"YulFunctionCall","src":"6376:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"6401:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6372:3:20"},"nodeType":"YulFunctionCall","src":"6372:32:20"},"nodeType":"YulIf","src":"6369:2:20"},{"nodeType":"YulBlock","src":"6498:128:20","statements":[{"nodeType":"YulVariableDeclaration","src":"6513:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"6527:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6517:6:20","type":""}]},{"nodeType":"YulAssignment","src":"6542:74:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6588:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"6599:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6584:3:20"},"nodeType":"YulFunctionCall","src":"6584:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6608:7:20"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"6552:31:20"},"nodeType":"YulFunctionCall","src":"6552:64:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6542:6:20"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6329:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6340:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6352:6:20","type":""}],"src":"6282:351:20"},{"body":{"nodeType":"YulBlock","src":"6722:391:20","statements":[{"body":{"nodeType":"YulBlock","src":"6768:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6770:77:20"},"nodeType":"YulFunctionCall","src":"6770:79:20"},"nodeType":"YulExpressionStatement","src":"6770:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6743:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"6752:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6739:3:20"},"nodeType":"YulFunctionCall","src":"6739:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"6764:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6735:3:20"},"nodeType":"YulFunctionCall","src":"6735:32:20"},"nodeType":"YulIf","src":"6732:2:20"},{"nodeType":"YulBlock","src":"6861:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"6876:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"6890:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6880:6:20","type":""}]},{"nodeType":"YulAssignment","src":"6905:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6940:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"6951:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6936:3:20"},"nodeType":"YulFunctionCall","src":"6936:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6960:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6915:20:20"},"nodeType":"YulFunctionCall","src":"6915:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6905:6:20"}]}]},{"nodeType":"YulBlock","src":"6988:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"7003:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"7017:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7007:6:20","type":""}]},{"nodeType":"YulAssignment","src":"7033:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7068:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"7079:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7064:3:20"},"nodeType":"YulFunctionCall","src":"7064:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7088:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7043:20:20"},"nodeType":"YulFunctionCall","src":"7043:53:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7033:6:20"}]}]}]},"name":"abi_decode_tuple_t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6684:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6695:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6707:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6715:6:20","type":""}],"src":"6639:474:20"},{"body":{"nodeType":"YulBlock","src":"7229:689:20","statements":[{"body":{"nodeType":"YulBlock","src":"7275:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7277:77:20"},"nodeType":"YulFunctionCall","src":"7277:79:20"},"nodeType":"YulExpressionStatement","src":"7277:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7250:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"7259:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7246:3:20"},"nodeType":"YulFunctionCall","src":"7246:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"7271:2:20","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7242:3:20"},"nodeType":"YulFunctionCall","src":"7242:32:20"},"nodeType":"YulIf","src":"7239:2:20"},{"nodeType":"YulBlock","src":"7368:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"7383:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"7397:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7387:6:20","type":""}]},{"nodeType":"YulAssignment","src":"7412:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7447:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"7458:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7443:3:20"},"nodeType":"YulFunctionCall","src":"7443:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7467:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7422:20:20"},"nodeType":"YulFunctionCall","src":"7422:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7412:6:20"}]}]},{"nodeType":"YulBlock","src":"7495:288:20","statements":[{"nodeType":"YulVariableDeclaration","src":"7510:46:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7541:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"7552:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7537:3:20"},"nodeType":"YulFunctionCall","src":"7537:18:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7524:12:20"},"nodeType":"YulFunctionCall","src":"7524:32:20"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7514:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"7603:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"7605:77:20"},"nodeType":"YulFunctionCall","src":"7605:79:20"},"nodeType":"YulExpressionStatement","src":"7605:79:20"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7575:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"7583:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7572:2:20"},"nodeType":"YulFunctionCall","src":"7572:30:20"},"nodeType":"YulIf","src":"7569:2:20"},{"nodeType":"YulAssignment","src":"7700:73:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7745:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"7756:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7741:3:20"},"nodeType":"YulFunctionCall","src":"7741:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7765:7:20"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7710:30:20"},"nodeType":"YulFunctionCall","src":"7710:63:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7700:6:20"}]}]},{"nodeType":"YulBlock","src":"7793:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"7808:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"7822:2:20","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7812:6:20","type":""}]},{"nodeType":"YulAssignment","src":"7838:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7873:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"7884:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7869:3:20"},"nodeType":"YulFunctionCall","src":"7869:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7893:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7848:20:20"},"nodeType":"YulFunctionCall","src":"7848:53:20"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7838:6:20"}]}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptrt_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7183:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7194:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7206:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7214:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7222:6:20","type":""}],"src":"7119:799:20"},{"body":{"nodeType":"YulBlock","src":"7979:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7996:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8019:5:20"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"8001:17:20"},"nodeType":"YulFunctionCall","src":"8001:24:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7989:6:20"},"nodeType":"YulFunctionCall","src":"7989:37:20"},"nodeType":"YulExpressionStatement","src":"7989:37:20"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7967:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7974:3:20","type":""}],"src":"7924:108:20"},{"body":{"nodeType":"YulBlock","src":"8103:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8120:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8143:5:20"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"8125:17:20"},"nodeType":"YulFunctionCall","src":"8125:24:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8113:6:20"},"nodeType":"YulFunctionCall","src":"8113:37:20"},"nodeType":"YulExpressionStatement","src":"8113:37:20"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8091:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8098:3:20","type":""}],"src":"8038:118:20"},{"body":{"nodeType":"YulBlock","src":"8211:50:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8228:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8248:5:20"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"8233:14:20"},"nodeType":"YulFunctionCall","src":"8233:21:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8221:6:20"},"nodeType":"YulFunctionCall","src":"8221:34:20"},"nodeType":"YulExpressionStatement","src":"8221:34:20"}]},"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8199:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8206:3:20","type":""}],"src":"8162:99:20"},{"body":{"nodeType":"YulBlock","src":"8326:50:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8343:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8363:5:20"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"8348:14:20"},"nodeType":"YulFunctionCall","src":"8348:21:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8336:6:20"},"nodeType":"YulFunctionCall","src":"8336:34:20"},"nodeType":"YulExpressionStatement","src":"8336:34:20"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8314:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8321:3:20","type":""}],"src":"8267:109:20"},{"body":{"nodeType":"YulBlock","src":"8447:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8464:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8487:5:20"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"8469:17:20"},"nodeType":"YulFunctionCall","src":"8469:24:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8457:6:20"},"nodeType":"YulFunctionCall","src":"8457:37:20"},"nodeType":"YulExpressionStatement","src":"8457:37:20"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8435:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8442:3:20","type":""}],"src":"8382:118:20"},{"body":{"nodeType":"YulBlock","src":"8569:52:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8586:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8608:5:20"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"8591:16:20"},"nodeType":"YulFunctionCall","src":"8591:23:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8579:6:20"},"nodeType":"YulFunctionCall","src":"8579:36:20"},"nodeType":"YulExpressionStatement","src":"8579:36:20"}]},"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8557:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8564:3:20","type":""}],"src":"8506:115:20"},{"body":{"nodeType":"YulBlock","src":"8717:270:20","statements":[{"nodeType":"YulVariableDeclaration","src":"8727:52:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8773:5:20"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8741:31:20"},"nodeType":"YulFunctionCall","src":"8741:38:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8731:6:20","type":""}]},{"nodeType":"YulAssignment","src":"8788:77:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8853:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"8858:6:20"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8795:57:20"},"nodeType":"YulFunctionCall","src":"8795:70:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8788:3:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8900:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"8907:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8896:3:20"},"nodeType":"YulFunctionCall","src":"8896:16:20"},{"name":"pos","nodeType":"YulIdentifier","src":"8914:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"8919:6:20"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"8874:21:20"},"nodeType":"YulFunctionCall","src":"8874:52:20"},"nodeType":"YulExpressionStatement","src":"8874:52:20"},{"nodeType":"YulAssignment","src":"8935:46:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8946:3:20"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8973:6:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8951:21:20"},"nodeType":"YulFunctionCall","src":"8951:29:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8942:3:20"},"nodeType":"YulFunctionCall","src":"8942:39:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8935:3:20"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8698:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8705:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8713:3:20","type":""}],"src":"8627:360:20"},{"body":{"nodeType":"YulBlock","src":"9099:110:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9116:3:20"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9195:5:20"}],"functionName":{"name":"convert_t_contract$_ChainlinkClient_$861_to_t_address","nodeType":"YulIdentifier","src":"9141:53:20"},"nodeType":"YulFunctionCall","src":"9141:60:20"}],"functionName":{"name":"leftAlign_t_address","nodeType":"YulIdentifier","src":"9121:19:20"},"nodeType":"YulFunctionCall","src":"9121:81:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9109:6:20"},"nodeType":"YulFunctionCall","src":"9109:94:20"},"nodeType":"YulExpressionStatement","src":"9109:94:20"}]},"name":"abi_encode_t_contract$_ChainlinkClient_$861_to_t_address_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9087:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9094:3:20","type":""}],"src":"8993:216:20"},{"body":{"nodeType":"YulBlock","src":"9297:262:20","statements":[{"nodeType":"YulVariableDeclaration","src":"9307:53:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9354:5:20"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"9321:32:20"},"nodeType":"YulFunctionCall","src":"9321:39:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9311:6:20","type":""}]},{"nodeType":"YulAssignment","src":"9369:68:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9425:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"9430:6:20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulIdentifier","src":"9376:48:20"},"nodeType":"YulFunctionCall","src":"9376:61:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9369:3:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9472:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"9479:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9468:3:20"},"nodeType":"YulFunctionCall","src":"9468:16:20"},{"name":"pos","nodeType":"YulIdentifier","src":"9486:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"9491:6:20"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"9446:21:20"},"nodeType":"YulFunctionCall","src":"9446:52:20"},"nodeType":"YulExpressionStatement","src":"9446:52:20"},{"nodeType":"YulAssignment","src":"9507:46:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9518:3:20"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9545:6:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"9523:21:20"},"nodeType":"YulFunctionCall","src":"9523:29:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9514:3:20"},"nodeType":"YulFunctionCall","src":"9514:39:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9507:3:20"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9278:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9285:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9293:3:20","type":""}],"src":"9215:344:20"},{"body":{"nodeType":"YulBlock","src":"9657:272:20","statements":[{"nodeType":"YulVariableDeclaration","src":"9667:53:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9714:5:20"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"9681:32:20"},"nodeType":"YulFunctionCall","src":"9681:39:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9671:6:20","type":""}]},{"nodeType":"YulAssignment","src":"9729:78:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9795:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"9800:6:20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9736:58:20"},"nodeType":"YulFunctionCall","src":"9736:71:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9729:3:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9842:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"9849:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9838:3:20"},"nodeType":"YulFunctionCall","src":"9838:16:20"},{"name":"pos","nodeType":"YulIdentifier","src":"9856:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"9861:6:20"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"9816:21:20"},"nodeType":"YulFunctionCall","src":"9816:52:20"},"nodeType":"YulExpressionStatement","src":"9816:52:20"},{"nodeType":"YulAssignment","src":"9877:46:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9888:3:20"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9915:6:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"9893:21:20"},"nodeType":"YulFunctionCall","src":"9893:29:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9884:3:20"},"nodeType":"YulFunctionCall","src":"9884:39:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9877:3:20"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9638:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9645:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9653:3:20","type":""}],"src":"9565:364:20"},{"body":{"nodeType":"YulBlock","src":"10066:738:20","statements":[{"nodeType":"YulVariableDeclaration","src":"10076:29:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10099:5:20"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"10093:5:20"},"nodeType":"YulFunctionCall","src":"10093:12:20"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"10080:9:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10114:50:20","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"10154:9:20"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"10128:25:20"},"nodeType":"YulFunctionCall","src":"10128:36:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"10118:6:20","type":""}]},{"nodeType":"YulAssignment","src":"10173:96:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10257:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"10262:6:20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"10180:76:20"},"nodeType":"YulFunctionCall","src":"10180:89:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10173:3:20"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"10318:130:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10371:3:20"},{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"10380:9:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10395:4:20","type":"","value":"0xff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10391:3:20"},"nodeType":"YulFunctionCall","src":"10391:9:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10376:3:20"},"nodeType":"YulFunctionCall","src":"10376:25:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10364:6:20"},"nodeType":"YulFunctionCall","src":"10364:38:20"},"nodeType":"YulExpressionStatement","src":"10364:38:20"},{"nodeType":"YulAssignment","src":"10415:23:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10426:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"10431:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10422:3:20"},"nodeType":"YulFunctionCall","src":"10422:16:20"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"10415:3:20"}]}]},"nodeType":"YulCase","src":"10311:137:20","value":{"kind":"number","nodeType":"YulLiteral","src":"10316:1:20","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"10464:334:20","statements":[{"nodeType":"YulVariableDeclaration","src":"10509:53:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10556:5:20"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"10524:31:20"},"nodeType":"YulFunctionCall","src":"10524:38:20"},"variables":[{"name":"dataPos","nodeType":"YulTypedName","src":"10513:7:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10575:10:20","value":{"kind":"number","nodeType":"YulLiteral","src":"10584:1:20","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"10579:1:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"10642:110:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10671:3:20"},{"name":"i","nodeType":"YulIdentifier","src":"10676:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10667:3:20"},"nodeType":"YulFunctionCall","src":"10667:11:20"},{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"10686:7:20"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"10680:5:20"},"nodeType":"YulFunctionCall","src":"10680:14:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10660:6:20"},"nodeType":"YulFunctionCall","src":"10660:35:20"},"nodeType":"YulExpressionStatement","src":"10660:35:20"},{"nodeType":"YulAssignment","src":"10712:26:20","value":{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"10727:7:20"},{"kind":"number","nodeType":"YulLiteral","src":"10736:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10723:3:20"},"nodeType":"YulFunctionCall","src":"10723:15:20"},"variableNames":[{"name":"dataPos","nodeType":"YulIdentifier","src":"10712:7:20"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10609:1:20"},{"name":"length","nodeType":"YulIdentifier","src":"10612:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10606:2:20"},"nodeType":"YulFunctionCall","src":"10606:13:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"10620:21:20","statements":[{"nodeType":"YulAssignment","src":"10622:17:20","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10631:1:20"},{"kind":"number","nodeType":"YulLiteral","src":"10634:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10627:3:20"},"nodeType":"YulFunctionCall","src":"10627:12:20"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"10622:1:20"}]}]},"pre":{"nodeType":"YulBlock","src":"10602:3:20","statements":[]},"src":"10598:154:20"},{"nodeType":"YulAssignment","src":"10765:23:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10776:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"10781:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10772:3:20"},"nodeType":"YulFunctionCall","src":"10772:16:20"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"10765:3:20"}]}]},"nodeType":"YulCase","src":"10457:341:20","value":{"kind":"number","nodeType":"YulLiteral","src":"10462:1:20","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"10289:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"10300:1:20","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10285:3:20"},"nodeType":"YulFunctionCall","src":"10285:17:20"},"nodeType":"YulSwitch","src":"10278:520:20"}]},"name":"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10047:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10054:3:20","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"10062:3:20","type":""}],"src":"9959:845:20"},{"body":{"nodeType":"YulBlock","src":"10956:220:20","statements":[{"nodeType":"YulAssignment","src":"10966:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11032:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"11037:2:20","type":"","value":"18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10973:58:20"},"nodeType":"YulFunctionCall","src":"10973:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10966:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11138:3:20"}],"functionName":{"name":"store_literal_in_memory_1f5a2f62658d6a797c6aa77f3644d453326e014c355d91d89127b18e16c407ef","nodeType":"YulIdentifier","src":"11049:88:20"},"nodeType":"YulFunctionCall","src":"11049:93:20"},"nodeType":"YulExpressionStatement","src":"11049:93:20"},{"nodeType":"YulAssignment","src":"11151:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11162:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"11167:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11158:3:20"},"nodeType":"YulFunctionCall","src":"11158:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11151:3:20"}]}]},"name":"abi_encode_t_stringliteral_1f5a2f62658d6a797c6aa77f3644d453326e014c355d91d89127b18e16c407ef_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10944:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10952:3:20","type":""}],"src":"10810:366:20"},{"body":{"nodeType":"YulBlock","src":"11328:220:20","statements":[{"nodeType":"YulAssignment","src":"11338:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11404:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"11409:2:20","type":"","value":"46"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11345:58:20"},"nodeType":"YulFunctionCall","src":"11345:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11338:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11510:3:20"}],"functionName":{"name":"store_literal_in_memory_2254f56cac9b925e5567d5317d5f1fa4cb1cef32c5f259415ee5e2f68ac31e6b","nodeType":"YulIdentifier","src":"11421:88:20"},"nodeType":"YulFunctionCall","src":"11421:93:20"},"nodeType":"YulExpressionStatement","src":"11421:93:20"},{"nodeType":"YulAssignment","src":"11523:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11534:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"11539:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11530:3:20"},"nodeType":"YulFunctionCall","src":"11530:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11523:3:20"}]}]},"name":"abi_encode_t_stringliteral_2254f56cac9b925e5567d5317d5f1fa4cb1cef32c5f259415ee5e2f68ac31e6b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11316:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11324:3:20","type":""}],"src":"11182:366:20"},{"body":{"nodeType":"YulBlock","src":"11700:220:20","statements":[{"nodeType":"YulAssignment","src":"11710:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11776:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"11781:2:20","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11717:58:20"},"nodeType":"YulFunctionCall","src":"11717:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11710:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11882:3:20"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"11793:88:20"},"nodeType":"YulFunctionCall","src":"11793:93:20"},"nodeType":"YulExpressionStatement","src":"11793:93:20"},{"nodeType":"YulAssignment","src":"11895:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11906:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"11911:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11902:3:20"},"nodeType":"YulFunctionCall","src":"11902:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11895:3:20"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11688:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11696:3:20","type":""}],"src":"11554:366:20"},{"body":{"nodeType":"YulBlock","src":"12072:220:20","statements":[{"nodeType":"YulAssignment","src":"12082:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12148:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"12153:2:20","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12089:58:20"},"nodeType":"YulFunctionCall","src":"12089:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12082:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12254:3:20"}],"functionName":{"name":"store_literal_in_memory_3b3efd608222b424e5ed8427d7f6a272069793e6a1f5930c93db5c7960c3ce96","nodeType":"YulIdentifier","src":"12165:88:20"},"nodeType":"YulFunctionCall","src":"12165:93:20"},"nodeType":"YulExpressionStatement","src":"12165:93:20"},{"nodeType":"YulAssignment","src":"12267:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12278:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"12283:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12274:3:20"},"nodeType":"YulFunctionCall","src":"12274:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12267:3:20"}]}]},"name":"abi_encode_t_stringliteral_3b3efd608222b424e5ed8427d7f6a272069793e6a1f5930c93db5c7960c3ce96_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12060:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12068:3:20","type":""}],"src":"11926:366:20"},{"body":{"nodeType":"YulBlock","src":"12462:236:20","statements":[{"nodeType":"YulAssignment","src":"12472:91:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12556:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"12561:1:20","type":"","value":"7"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"12479:76:20"},"nodeType":"YulFunctionCall","src":"12479:84:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12472:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12661:3:20"}],"functionName":{"name":"store_literal_in_memory_4be9d97bdca36db909fee5364c11951f6518ef5896e8fb5c1e00fce6d29b39da","nodeType":"YulIdentifier","src":"12572:88:20"},"nodeType":"YulFunctionCall","src":"12572:93:20"},"nodeType":"YulExpressionStatement","src":"12572:93:20"},{"nodeType":"YulAssignment","src":"12674:18:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12685:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"12690:1:20","type":"","value":"7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12681:3:20"},"nodeType":"YulFunctionCall","src":"12681:11:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12674:3:20"}]}]},"name":"abi_encode_t_stringliteral_4be9d97bdca36db909fee5364c11951f6518ef5896e8fb5c1e00fce6d29b39da_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12450:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12458:3:20","type":""}],"src":"12298:400:20"},{"body":{"nodeType":"YulBlock","src":"12850:220:20","statements":[{"nodeType":"YulAssignment","src":"12860:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12926:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"12931:2:20","type":"","value":"16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12867:58:20"},"nodeType":"YulFunctionCall","src":"12867:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12860:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13032:3:20"}],"functionName":{"name":"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","nodeType":"YulIdentifier","src":"12943:88:20"},"nodeType":"YulFunctionCall","src":"12943:93:20"},"nodeType":"YulExpressionStatement","src":"12943:93:20"},{"nodeType":"YulAssignment","src":"13045:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13056:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"13061:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13052:3:20"},"nodeType":"YulFunctionCall","src":"13052:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13045:3:20"}]}]},"name":"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12838:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12846:3:20","type":""}],"src":"12704:366:20"},{"body":{"nodeType":"YulBlock","src":"13222:220:20","statements":[{"nodeType":"YulAssignment","src":"13232:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13298:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"13303:2:20","type":"","value":"18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13239:58:20"},"nodeType":"YulFunctionCall","src":"13239:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13232:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13404:3:20"}],"functionName":{"name":"store_literal_in_memory_8e1f7009e5aca473fdde21442dae29568050b67581f4b146dca8997db684dff1","nodeType":"YulIdentifier","src":"13315:88:20"},"nodeType":"YulFunctionCall","src":"13315:93:20"},"nodeType":"YulExpressionStatement","src":"13315:93:20"},{"nodeType":"YulAssignment","src":"13417:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13428:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"13433:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13424:3:20"},"nodeType":"YulFunctionCall","src":"13424:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13417:3:20"}]}]},"name":"abi_encode_t_stringliteral_8e1f7009e5aca473fdde21442dae29568050b67581f4b146dca8997db684dff1_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13210:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13218:3:20","type":""}],"src":"13076:366:20"},{"body":{"nodeType":"YulBlock","src":"13594:220:20","statements":[{"nodeType":"YulAssignment","src":"13604:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13670:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"13675:2:20","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13611:58:20"},"nodeType":"YulFunctionCall","src":"13611:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13604:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13776:3:20"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"13687:88:20"},"nodeType":"YulFunctionCall","src":"13687:93:20"},"nodeType":"YulExpressionStatement","src":"13687:93:20"},{"nodeType":"YulAssignment","src":"13789:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13800:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"13805:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13796:3:20"},"nodeType":"YulFunctionCall","src":"13796:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13789:3:20"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13582:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13590:3:20","type":""}],"src":"13448:366:20"},{"body":{"nodeType":"YulBlock","src":"13966:220:20","statements":[{"nodeType":"YulAssignment","src":"13976:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14042:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"14047:2:20","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13983:58:20"},"nodeType":"YulFunctionCall","src":"13983:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13976:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14148:3:20"}],"functionName":{"name":"store_literal_in_memory_aa8ec5d8fae9f4324168b2ce12ce357d4c8138c22ffca90f21d943a8359ed9fe","nodeType":"YulIdentifier","src":"14059:88:20"},"nodeType":"YulFunctionCall","src":"14059:93:20"},"nodeType":"YulExpressionStatement","src":"14059:93:20"},{"nodeType":"YulAssignment","src":"14161:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14172:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"14177:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14168:3:20"},"nodeType":"YulFunctionCall","src":"14168:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14161:3:20"}]}]},"name":"abi_encode_t_stringliteral_aa8ec5d8fae9f4324168b2ce12ce357d4c8138c22ffca90f21d943a8359ed9fe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13954:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13962:3:20","type":""}],"src":"13820:366:20"},{"body":{"nodeType":"YulBlock","src":"14338:220:20","statements":[{"nodeType":"YulAssignment","src":"14348:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14414:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"14419:2:20","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14355:58:20"},"nodeType":"YulFunctionCall","src":"14355:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14348:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14520:3:20"}],"functionName":{"name":"store_literal_in_memory_ae094217ca8267b1aa5ddfc23784056f71662e2c3ecbe8a78d373fd86d4eaae0","nodeType":"YulIdentifier","src":"14431:88:20"},"nodeType":"YulFunctionCall","src":"14431:93:20"},"nodeType":"YulExpressionStatement","src":"14431:93:20"},{"nodeType":"YulAssignment","src":"14533:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14544:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"14549:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14540:3:20"},"nodeType":"YulFunctionCall","src":"14540:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14533:3:20"}]}]},"name":"abi_encode_t_stringliteral_ae094217ca8267b1aa5ddfc23784056f71662e2c3ecbe8a78d373fd86d4eaae0_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14326:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14334:3:20","type":""}],"src":"14192:366:20"},{"body":{"nodeType":"YulBlock","src":"14710:220:20","statements":[{"nodeType":"YulAssignment","src":"14720:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14786:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"14791:2:20","type":"","value":"27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14727:58:20"},"nodeType":"YulFunctionCall","src":"14727:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14720:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14892:3:20"}],"functionName":{"name":"store_literal_in_memory_b4b84ebe3de827a4087f895b834b5993eef1b5aca3e2419eeecfbb4534ceb6c3","nodeType":"YulIdentifier","src":"14803:88:20"},"nodeType":"YulFunctionCall","src":"14803:93:20"},"nodeType":"YulExpressionStatement","src":"14803:93:20"},{"nodeType":"YulAssignment","src":"14905:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14916:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"14921:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14912:3:20"},"nodeType":"YulFunctionCall","src":"14912:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14905:3:20"}]}]},"name":"abi_encode_t_stringliteral_b4b84ebe3de827a4087f895b834b5993eef1b5aca3e2419eeecfbb4534ceb6c3_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14698:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14706:3:20","type":""}],"src":"14564:366:20"},{"body":{"nodeType":"YulBlock","src":"15082:220:20","statements":[{"nodeType":"YulAssignment","src":"15092:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15158:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"15163:2:20","type":"","value":"62"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15099:58:20"},"nodeType":"YulFunctionCall","src":"15099:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15092:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15264:3:20"}],"functionName":{"name":"store_literal_in_memory_c2f50fde43b6cd00923414ed2254557266b44b46c98097d2bbc05bc171375af6","nodeType":"YulIdentifier","src":"15175:88:20"},"nodeType":"YulFunctionCall","src":"15175:93:20"},"nodeType":"YulExpressionStatement","src":"15175:93:20"},{"nodeType":"YulAssignment","src":"15277:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15288:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"15293:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15284:3:20"},"nodeType":"YulFunctionCall","src":"15284:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15277:3:20"}]}]},"name":"abi_encode_t_stringliteral_c2f50fde43b6cd00923414ed2254557266b44b46c98097d2bbc05bc171375af6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15070:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15078:3:20","type":""}],"src":"14936:366:20"},{"body":{"nodeType":"YulBlock","src":"15472:238:20","statements":[{"nodeType":"YulAssignment","src":"15482:92:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15566:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"15571:2:20","type":"","value":"10"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"15489:76:20"},"nodeType":"YulFunctionCall","src":"15489:85:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15482:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15672:3:20"}],"functionName":{"name":"store_literal_in_memory_d236356f527fa222b87a926997fc1f57d7b3c06dcab0ec8b5ababcc1f490e6c6","nodeType":"YulIdentifier","src":"15583:88:20"},"nodeType":"YulFunctionCall","src":"15583:93:20"},"nodeType":"YulExpressionStatement","src":"15583:93:20"},{"nodeType":"YulAssignment","src":"15685:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15696:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"15701:2:20","type":"","value":"10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15692:3:20"},"nodeType":"YulFunctionCall","src":"15692:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15685:3:20"}]}]},"name":"abi_encode_t_stringliteral_d236356f527fa222b87a926997fc1f57d7b3c06dcab0ec8b5ababcc1f490e6c6_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15460:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15468:3:20","type":""}],"src":"15308:402:20"},{"body":{"nodeType":"YulBlock","src":"15862:220:20","statements":[{"nodeType":"YulAssignment","src":"15872:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15938:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"15943:2:20","type":"","value":"30"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15879:58:20"},"nodeType":"YulFunctionCall","src":"15879:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15872:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16044:3:20"}],"functionName":{"name":"store_literal_in_memory_d3551e30d3095fd81287b88f7139bb09818e34280e85ee821994ebaebbed7072","nodeType":"YulIdentifier","src":"15955:88:20"},"nodeType":"YulFunctionCall","src":"15955:93:20"},"nodeType":"YulExpressionStatement","src":"15955:93:20"},{"nodeType":"YulAssignment","src":"16057:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16068:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"16073:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16064:3:20"},"nodeType":"YulFunctionCall","src":"16064:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16057:3:20"}]}]},"name":"abi_encode_t_stringliteral_d3551e30d3095fd81287b88f7139bb09818e34280e85ee821994ebaebbed7072_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15850:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15858:3:20","type":""}],"src":"15716:366:20"},{"body":{"nodeType":"YulBlock","src":"16234:220:20","statements":[{"nodeType":"YulAssignment","src":"16244:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16310:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"16315:2:20","type":"","value":"40"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16251:58:20"},"nodeType":"YulFunctionCall","src":"16251:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16244:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16416:3:20"}],"functionName":{"name":"store_literal_in_memory_d5cafe2745dab6273b51cca76f8727c7664db74ede49af049a5b5ca6a3b184e4","nodeType":"YulIdentifier","src":"16327:88:20"},"nodeType":"YulFunctionCall","src":"16327:93:20"},"nodeType":"YulExpressionStatement","src":"16327:93:20"},{"nodeType":"YulAssignment","src":"16429:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16440:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"16445:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16436:3:20"},"nodeType":"YulFunctionCall","src":"16436:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16429:3:20"}]}]},"name":"abi_encode_t_stringliteral_d5cafe2745dab6273b51cca76f8727c7664db74ede49af049a5b5ca6a3b184e4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16222:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16230:3:20","type":""}],"src":"16088:366:20"},{"body":{"nodeType":"YulBlock","src":"16624:236:20","statements":[{"nodeType":"YulAssignment","src":"16634:91:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16718:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"16723:1:20","type":"","value":"8"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"16641:76:20"},"nodeType":"YulFunctionCall","src":"16641:84:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16634:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16823:3:20"}],"functionName":{"name":"store_literal_in_memory_e5b64fb870214178f776923098f80ee63b1955f85cb0bb444948ce3811079999","nodeType":"YulIdentifier","src":"16734:88:20"},"nodeType":"YulFunctionCall","src":"16734:93:20"},"nodeType":"YulExpressionStatement","src":"16734:93:20"},{"nodeType":"YulAssignment","src":"16836:18:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16847:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"16852:1:20","type":"","value":"8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16843:3:20"},"nodeType":"YulFunctionCall","src":"16843:11:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16836:3:20"}]}]},"name":"abi_encode_t_stringliteral_e5b64fb870214178f776923098f80ee63b1955f85cb0bb444948ce3811079999_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16612:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16620:3:20","type":""}],"src":"16460:400:20"},{"body":{"nodeType":"YulBlock","src":"17012:220:20","statements":[{"nodeType":"YulAssignment","src":"17022:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17088:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"17093:2:20","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17029:58:20"},"nodeType":"YulFunctionCall","src":"17029:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17022:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17194:3:20"}],"functionName":{"name":"store_literal_in_memory_f41b38bb6792dd2d923f031bfb556202e92815c3f2ff36e44de6f82c3da0b8b1","nodeType":"YulIdentifier","src":"17105:88:20"},"nodeType":"YulFunctionCall","src":"17105:93:20"},"nodeType":"YulExpressionStatement","src":"17105:93:20"},{"nodeType":"YulAssignment","src":"17207:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17218:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"17223:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17214:3:20"},"nodeType":"YulFunctionCall","src":"17214:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17207:3:20"}]}]},"name":"abi_encode_t_stringliteral_f41b38bb6792dd2d923f031bfb556202e92815c3f2ff36e44de6f82c3da0b8b1_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17000:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17008:3:20","type":""}],"src":"16866:366:20"},{"body":{"nodeType":"YulBlock","src":"17402:236:20","statements":[{"nodeType":"YulAssignment","src":"17412:91:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17496:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"17501:1:20","type":"","value":"8"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"17419:76:20"},"nodeType":"YulFunctionCall","src":"17419:84:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17412:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17601:3:20"}],"functionName":{"name":"store_literal_in_memory_ff0857fd342fd731a7c8d6dc5fe2a580363be68de125dbf9a650ceb34ce564ac","nodeType":"YulIdentifier","src":"17512:88:20"},"nodeType":"YulFunctionCall","src":"17512:93:20"},"nodeType":"YulExpressionStatement","src":"17512:93:20"},{"nodeType":"YulAssignment","src":"17614:18:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17625:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"17630:1:20","type":"","value":"8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17621:3:20"},"nodeType":"YulFunctionCall","src":"17621:11:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17614:3:20"}]}]},"name":"abi_encode_t_stringliteral_ff0857fd342fd731a7c8d6dc5fe2a580363be68de125dbf9a650ceb34ce564ac_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17390:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17398:3:20","type":""}],"src":"17238:400:20"},{"body":{"nodeType":"YulBlock","src":"17832:1386:20","statements":[{"nodeType":"YulVariableDeclaration","src":"17842:26:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17858:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"17863:4:20","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17854:3:20"},"nodeType":"YulFunctionCall","src":"17854:14:20"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"17846:4:20","type":""}]},{"nodeType":"YulBlock","src":"17878:170:20","statements":[{"nodeType":"YulVariableDeclaration","src":"17919:43:20","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17949:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"17956:4:20","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17945:3:20"},"nodeType":"YulFunctionCall","src":"17945:16:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17939:5:20"},"nodeType":"YulFunctionCall","src":"17939:23:20"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"17923:12:20","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"18009:12:20"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18027:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"18032:4:20","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18023:3:20"},"nodeType":"YulFunctionCall","src":"18023:14:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"17975:33:20"},"nodeType":"YulFunctionCall","src":"17975:63:20"},"nodeType":"YulExpressionStatement","src":"17975:63:20"}]},{"nodeType":"YulBlock","src":"18058:235:20","statements":[{"nodeType":"YulVariableDeclaration","src":"18093:43:20","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18123:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"18130:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18119:3:20"},"nodeType":"YulFunctionCall","src":"18119:16:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18113:5:20"},"nodeType":"YulFunctionCall","src":"18113:23:20"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"18097:12:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18161:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"18166:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18157:3:20"},"nodeType":"YulFunctionCall","src":"18157:14:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18177:4:20"},{"name":"pos","nodeType":"YulIdentifier","src":"18183:3:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18173:3:20"},"nodeType":"YulFunctionCall","src":"18173:14:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18150:6:20"},"nodeType":"YulFunctionCall","src":"18150:38:20"},"nodeType":"YulExpressionStatement","src":"18150:38:20"},{"nodeType":"YulAssignment","src":"18201:81:20","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"18263:12:20"},{"name":"tail","nodeType":"YulIdentifier","src":"18277:4:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"18209:53:20"},"nodeType":"YulFunctionCall","src":"18209:73:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18201:4:20"}]}]},{"nodeType":"YulBlock","src":"18303:167:20","statements":[{"nodeType":"YulVariableDeclaration","src":"18341:43:20","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18371:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"18378:4:20","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18367:3:20"},"nodeType":"YulFunctionCall","src":"18367:16:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18361:5:20"},"nodeType":"YulFunctionCall","src":"18361:23:20"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"18345:12:20","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"18431:12:20"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18449:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"18454:4:20","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18445:3:20"},"nodeType":"YulFunctionCall","src":"18445:14:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"18397:33:20"},"nodeType":"YulFunctionCall","src":"18397:63:20"},"nodeType":"YulExpressionStatement","src":"18397:63:20"}]},{"nodeType":"YulBlock","src":"18480:166:20","statements":[{"nodeType":"YulVariableDeclaration","src":"18517:43:20","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18547:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"18554:4:20","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18543:3:20"},"nodeType":"YulFunctionCall","src":"18543:16:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18537:5:20"},"nodeType":"YulFunctionCall","src":"18537:23:20"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"18521:12:20","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"18607:12:20"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18625:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"18630:4:20","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18621:3:20"},"nodeType":"YulFunctionCall","src":"18621:14:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"18573:33:20"},"nodeType":"YulFunctionCall","src":"18573:63:20"},"nodeType":"YulExpressionStatement","src":"18573:63:20"}]},{"nodeType":"YulBlock","src":"18656:179:20","statements":[{"nodeType":"YulVariableDeclaration","src":"18706:43:20","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18736:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"18743:4:20","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18732:3:20"},"nodeType":"YulFunctionCall","src":"18732:16:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18726:5:20"},"nodeType":"YulFunctionCall","src":"18726:23:20"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"18710:12:20","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"18796:12:20"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18814:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"18819:4:20","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18810:3:20"},"nodeType":"YulFunctionCall","src":"18810:14:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"18762:33:20"},"nodeType":"YulFunctionCall","src":"18762:63:20"},"nodeType":"YulExpressionStatement","src":"18762:63:20"}]},{"nodeType":"YulBlock","src":"18845:174:20","statements":[{"nodeType":"YulVariableDeclaration","src":"18890:43:20","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18920:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"18927:4:20","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18916:3:20"},"nodeType":"YulFunctionCall","src":"18916:16:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18910:5:20"},"nodeType":"YulFunctionCall","src":"18910:23:20"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"18894:12:20","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"18980:12:20"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18998:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"19003:4:20","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18994:3:20"},"nodeType":"YulFunctionCall","src":"18994:14:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"18946:33:20"},"nodeType":"YulFunctionCall","src":"18946:63:20"},"nodeType":"YulExpressionStatement","src":"18946:63:20"}]},{"nodeType":"YulBlock","src":"19029:162:20","statements":[{"nodeType":"YulVariableDeclaration","src":"19068:43:20","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19098:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"19105:4:20","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19094:3:20"},"nodeType":"YulFunctionCall","src":"19094:16:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19088:5:20"},"nodeType":"YulFunctionCall","src":"19088:23:20"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"19072:12:20","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"19152:12:20"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19170:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"19175:4:20","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19166:3:20"},"nodeType":"YulFunctionCall","src":"19166:14:20"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulIdentifier","src":"19124:27:20"},"nodeType":"YulFunctionCall","src":"19124:57:20"},"nodeType":"YulExpressionStatement","src":"19124:57:20"}]},{"nodeType":"YulAssignment","src":"19201:11:20","value":{"name":"tail","nodeType":"YulIdentifier","src":"19208:4:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19201:3:20"}]}]},"name":"abi_encode_t_struct$_Campaign_$2232_memory_ptr_to_t_struct$_Campaign_$2232_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17811:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"17818:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17827:3:20","type":""}],"src":"17706:1512:20"},{"body":{"nodeType":"YulBlock","src":"19279:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19296:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19319:5:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19301:17:20"},"nodeType":"YulFunctionCall","src":"19301:24:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19289:6:20"},"nodeType":"YulFunctionCall","src":"19289:37:20"},"nodeType":"YulExpressionStatement","src":"19289:37:20"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19267:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"19274:3:20","type":""}],"src":"19224:108:20"},{"body":{"nodeType":"YulBlock","src":"19403:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19420:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19443:5:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19425:17:20"},"nodeType":"YulFunctionCall","src":"19425:24:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19413:6:20"},"nodeType":"YulFunctionCall","src":"19413:37:20"},"nodeType":"YulExpressionStatement","src":"19413:37:20"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19391:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"19398:3:20","type":""}],"src":"19338:118:20"},{"body":{"nodeType":"YulBlock","src":"19545:74:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19562:3:20"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19605:5:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19587:17:20"},"nodeType":"YulFunctionCall","src":"19587:24:20"}],"functionName":{"name":"leftAlign_t_uint256","nodeType":"YulIdentifier","src":"19567:19:20"},"nodeType":"YulFunctionCall","src":"19567:45:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19555:6:20"},"nodeType":"YulFunctionCall","src":"19555:58:20"},"nodeType":"YulExpressionStatement","src":"19555:58:20"}]},"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19533:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"19540:3:20","type":""}],"src":"19462:157:20"},{"body":{"nodeType":"YulBlock","src":"19792:276:20","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19888:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"19897:3:20"}],"functionName":{"name":"abi_encode_t_contract$_ChainlinkClient_$861_to_t_address_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"19803:84:20"},"nodeType":"YulFunctionCall","src":"19803:98:20"},"nodeType":"YulExpressionStatement","src":"19803:98:20"},{"nodeType":"YulAssignment","src":"19910:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19921:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"19926:2:20","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19917:3:20"},"nodeType":"YulFunctionCall","src":"19917:12:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19910:3:20"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"20001:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"20010:3:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"19939:61:20"},"nodeType":"YulFunctionCall","src":"19939:75:20"},"nodeType":"YulExpressionStatement","src":"19939:75:20"},{"nodeType":"YulAssignment","src":"20023:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20034:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"20039:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20030:3:20"},"nodeType":"YulFunctionCall","src":"20030:12:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20023:3:20"}]},{"nodeType":"YulAssignment","src":"20052:10:20","value":{"name":"pos","nodeType":"YulIdentifier","src":"20059:3:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20052:3:20"}]}]},"name":"abi_encode_tuple_packed_t_contract$_ChainlinkClient_$861_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19763:3:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19769:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19777:6:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19788:3:20","type":""}],"src":"19625:443:20"},{"body":{"nodeType":"YulBlock","src":"20336:414:20","statements":[{"nodeType":"YulAssignment","src":"20347:99:20","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20433:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"20442:3:20"}],"functionName":{"name":"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"20354:78:20"},"nodeType":"YulFunctionCall","src":"20354:92:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20347:3:20"}]},{"nodeType":"YulAssignment","src":"20456:155:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20607:3:20"}],"functionName":{"name":"abi_encode_t_stringliteral_4be9d97bdca36db909fee5364c11951f6518ef5896e8fb5c1e00fce6d29b39da_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"20463:142:20"},"nodeType":"YulFunctionCall","src":"20463:148:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20456:3:20"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"20683:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"20692:3:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"20621:61:20"},"nodeType":"YulFunctionCall","src":"20621:75:20"},"nodeType":"YulExpressionStatement","src":"20621:75:20"},{"nodeType":"YulAssignment","src":"20705:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20716:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"20721:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20712:3:20"},"nodeType":"YulFunctionCall","src":"20712:12:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20705:3:20"}]},{"nodeType":"YulAssignment","src":"20734:10:20","value":{"name":"pos","nodeType":"YulIdentifier","src":"20741:3:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20734:3:20"}]}]},"name":"abi_encode_tuple_packed_t_string_storage_t_stringliteral_4be9d97bdca36db909fee5364c11951f6518ef5896e8fb5c1e00fce6d29b39da_t_uint256__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20307:3:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20313:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20321:6:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20332:3:20","type":""}],"src":"20074:676:20"},{"body":{"nodeType":"YulBlock","src":"21248:857:20","statements":[{"nodeType":"YulAssignment","src":"21259:99:20","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21345:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"21354:3:20"}],"functionName":{"name":"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"21266:78:20"},"nodeType":"YulFunctionCall","src":"21266:92:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21259:3:20"}]},{"nodeType":"YulAssignment","src":"21368:155:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21519:3:20"}],"functionName":{"name":"abi_encode_t_stringliteral_e5b64fb870214178f776923098f80ee63b1955f85cb0bb444948ce3811079999_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"21375:142:20"},"nodeType":"YulFunctionCall","src":"21375:148:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21368:3:20"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"21595:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"21604:3:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"21533:61:20"},"nodeType":"YulFunctionCall","src":"21533:75:20"},"nodeType":"YulExpressionStatement","src":"21533:75:20"},{"nodeType":"YulAssignment","src":"21617:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21628:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"21633:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21624:3:20"},"nodeType":"YulFunctionCall","src":"21624:12:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21617:3:20"}]},{"nodeType":"YulAssignment","src":"21646:155:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21797:3:20"}],"functionName":{"name":"abi_encode_t_stringliteral_d236356f527fa222b87a926997fc1f57d7b3c06dcab0ec8b5ababcc1f490e6c6_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"21653:142:20"},"nodeType":"YulFunctionCall","src":"21653:148:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21646:3:20"}]},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"21873:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"21882:3:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"21811:61:20"},"nodeType":"YulFunctionCall","src":"21811:75:20"},"nodeType":"YulExpressionStatement","src":"21811:75:20"},{"nodeType":"YulAssignment","src":"21895:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21906:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"21911:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21902:3:20"},"nodeType":"YulFunctionCall","src":"21902:12:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21895:3:20"}]},{"nodeType":"YulAssignment","src":"21924:155:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22075:3:20"}],"functionName":{"name":"abi_encode_t_stringliteral_ff0857fd342fd731a7c8d6dc5fe2a580363be68de125dbf9a650ceb34ce564ac_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"21931:142:20"},"nodeType":"YulFunctionCall","src":"21931:148:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21924:3:20"}]},{"nodeType":"YulAssignment","src":"22089:10:20","value":{"name":"pos","nodeType":"YulIdentifier","src":"22096:3:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22089:3:20"}]}]},"name":"abi_encode_tuple_packed_t_string_storage_t_stringliteral_e5b64fb870214178f776923098f80ee63b1955f85cb0bb444948ce3811079999_t_uint256_t_stringliteral_d236356f527fa222b87a926997fc1f57d7b3c06dcab0ec8b5ababcc1f490e6c6_t_uint256_t_stringliteral_ff0857fd342fd731a7c8d6dc5fe2a580363be68de125dbf9a650ceb34ce564ac__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_string_memory_ptr_t_uint256_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21211:3:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"21217:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21225:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21233:6:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21244:3:20","type":""}],"src":"20756:1349:20"},{"body":{"nodeType":"YulBlock","src":"22209:124:20","statements":[{"nodeType":"YulAssignment","src":"22219:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22231:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"22242:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22227:3:20"},"nodeType":"YulFunctionCall","src":"22227:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22219:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22299:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22312:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"22323:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22308:3:20"},"nodeType":"YulFunctionCall","src":"22308:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"22255:43:20"},"nodeType":"YulFunctionCall","src":"22255:71:20"},"nodeType":"YulExpressionStatement","src":"22255:71:20"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22181:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22193:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22204:4:20","type":""}],"src":"22111:222:20"},{"body":{"nodeType":"YulBlock","src":"22465:206:20","statements":[{"nodeType":"YulAssignment","src":"22475:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22487:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"22498:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22483:3:20"},"nodeType":"YulFunctionCall","src":"22483:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22475:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22555:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22568:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"22579:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22564:3:20"},"nodeType":"YulFunctionCall","src":"22564:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"22511:43:20"},"nodeType":"YulFunctionCall","src":"22511:71:20"},"nodeType":"YulExpressionStatement","src":"22511:71:20"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22636:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22649:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"22660:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22645:3:20"},"nodeType":"YulFunctionCall","src":"22645:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"22592:43:20"},"nodeType":"YulFunctionCall","src":"22592:72:20"},"nodeType":"YulExpressionStatement","src":"22592:72:20"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22429:9:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22441:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22449:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22460:4:20","type":""}],"src":"22339:332:20"},{"body":{"nodeType":"YulBlock","src":"22987:770:20","statements":[{"nodeType":"YulAssignment","src":"22997:27:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23009:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"23020:3:20","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23005:3:20"},"nodeType":"YulFunctionCall","src":"23005:19:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22997:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23078:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23091:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"23102:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23087:3:20"},"nodeType":"YulFunctionCall","src":"23087:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"23034:43:20"},"nodeType":"YulFunctionCall","src":"23034:71:20"},"nodeType":"YulExpressionStatement","src":"23034:71:20"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"23159:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23172:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"23183:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23168:3:20"},"nodeType":"YulFunctionCall","src":"23168:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"23115:43:20"},"nodeType":"YulFunctionCall","src":"23115:72:20"},"nodeType":"YulExpressionStatement","src":"23115:72:20"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"23241:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23254:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"23265:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23250:3:20"},"nodeType":"YulFunctionCall","src":"23250:18:20"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"23197:43:20"},"nodeType":"YulFunctionCall","src":"23197:72:20"},"nodeType":"YulExpressionStatement","src":"23197:72:20"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"23323:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23336:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"23347:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23332:3:20"},"nodeType":"YulFunctionCall","src":"23332:18:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"23279:43:20"},"nodeType":"YulFunctionCall","src":"23279:72:20"},"nodeType":"YulExpressionStatement","src":"23279:72:20"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"23403:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23416:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"23427:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23412:3:20"},"nodeType":"YulFunctionCall","src":"23412:19:20"}],"functionName":{"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack","nodeType":"YulIdentifier","src":"23361:41:20"},"nodeType":"YulFunctionCall","src":"23361:71:20"},"nodeType":"YulExpressionStatement","src":"23361:71:20"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"23486:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23499:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"23510:3:20","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23495:3:20"},"nodeType":"YulFunctionCall","src":"23495:19:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"23442:43:20"},"nodeType":"YulFunctionCall","src":"23442:73:20"},"nodeType":"YulExpressionStatement","src":"23442:73:20"},{"expression":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"23569:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23582:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"23593:3:20","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23578:3:20"},"nodeType":"YulFunctionCall","src":"23578:19:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"23525:43:20"},"nodeType":"YulFunctionCall","src":"23525:73:20"},"nodeType":"YulExpressionStatement","src":"23525:73:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23619:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"23630:3:20","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23615:3:20"},"nodeType":"YulFunctionCall","src":"23615:19:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23640:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"23646:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23636:3:20"},"nodeType":"YulFunctionCall","src":"23636:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23608:6:20"},"nodeType":"YulFunctionCall","src":"23608:49:20"},"nodeType":"YulExpressionStatement","src":"23608:49:20"},{"nodeType":"YulAssignment","src":"23666:84:20","value":{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"23736:6:20"},{"name":"tail","nodeType":"YulIdentifier","src":"23745:4:20"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23674:61:20"},"nodeType":"YulFunctionCall","src":"23674:76:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23666:4:20"}]}]},"name":"abi_encode_tuple_t_address_t_uint256_t_bytes32_t_address_t_bytes4_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_uint256_t_bytes32_t_address_t_bytes4_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22903:9:20","type":""},{"name":"value7","nodeType":"YulTypedName","src":"22915:6:20","type":""},{"name":"value6","nodeType":"YulTypedName","src":"22923:6:20","type":""},{"name":"value5","nodeType":"YulTypedName","src":"22931:6:20","type":""},{"name":"value4","nodeType":"YulTypedName","src":"22939:6:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"22947:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"22955:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22963:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22971:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22982:4:20","type":""}],"src":"22677:1080:20"},{"body":{"nodeType":"YulBlock","src":"23935:357:20","statements":[{"nodeType":"YulAssignment","src":"23945:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23957:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"23968:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23953:3:20"},"nodeType":"YulFunctionCall","src":"23953:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23945:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24025:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24038:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"24049:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24034:3:20"},"nodeType":"YulFunctionCall","src":"24034:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"23981:43:20"},"nodeType":"YulFunctionCall","src":"23981:71:20"},"nodeType":"YulExpressionStatement","src":"23981:71:20"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"24106:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24119:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"24130:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24115:3:20"},"nodeType":"YulFunctionCall","src":"24115:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"24062:43:20"},"nodeType":"YulFunctionCall","src":"24062:72:20"},"nodeType":"YulExpressionStatement","src":"24062:72:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24155:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"24166:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24151:3:20"},"nodeType":"YulFunctionCall","src":"24151:18:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24175:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"24181:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24171:3:20"},"nodeType":"YulFunctionCall","src":"24171:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24144:6:20"},"nodeType":"YulFunctionCall","src":"24144:48:20"},"nodeType":"YulExpressionStatement","src":"24144:48:20"},{"nodeType":"YulAssignment","src":"24201:84:20","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"24271:6:20"},{"name":"tail","nodeType":"YulIdentifier","src":"24280:4:20"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24209:61:20"},"nodeType":"YulFunctionCall","src":"24209:76:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24201:4:20"}]}]},"name":"abi_encode_tuple_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23891:9:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"23903:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23911:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23919:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23930:4:20","type":""}],"src":"23763:529:20"},{"body":{"nodeType":"YulBlock","src":"24390:118:20","statements":[{"nodeType":"YulAssignment","src":"24400:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24412:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"24423:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24408:3:20"},"nodeType":"YulFunctionCall","src":"24408:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24400:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24474:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24487:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"24498:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24483:3:20"},"nodeType":"YulFunctionCall","src":"24483:17:20"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"24436:37:20"},"nodeType":"YulFunctionCall","src":"24436:65:20"},"nodeType":"YulExpressionStatement","src":"24436:65:20"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24362:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24374:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24385:4:20","type":""}],"src":"24298:210:20"},{"body":{"nodeType":"YulBlock","src":"24612:124:20","statements":[{"nodeType":"YulAssignment","src":"24622:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24634:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"24645:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24630:3:20"},"nodeType":"YulFunctionCall","src":"24630:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24622:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24702:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24715:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"24726:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24711:3:20"},"nodeType":"YulFunctionCall","src":"24711:17:20"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"24658:43:20"},"nodeType":"YulFunctionCall","src":"24658:71:20"},"nodeType":"YulExpressionStatement","src":"24658:71:20"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24584:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24596:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24607:4:20","type":""}],"src":"24514:222:20"},{"body":{"nodeType":"YulBlock","src":"24922:369:20","statements":[{"nodeType":"YulAssignment","src":"24932:27:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24944:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"24955:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24940:3:20"},"nodeType":"YulFunctionCall","src":"24940:19:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24932:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25013:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25026:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"25037:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25022:3:20"},"nodeType":"YulFunctionCall","src":"25022:17:20"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"24969:43:20"},"nodeType":"YulFunctionCall","src":"24969:71:20"},"nodeType":"YulExpressionStatement","src":"24969:71:20"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"25094:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25107:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"25118:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25103:3:20"},"nodeType":"YulFunctionCall","src":"25103:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"25050:43:20"},"nodeType":"YulFunctionCall","src":"25050:72:20"},"nodeType":"YulExpressionStatement","src":"25050:72:20"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"25174:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25187:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"25198:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25183:3:20"},"nodeType":"YulFunctionCall","src":"25183:18:20"}],"functionName":{"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack","nodeType":"YulIdentifier","src":"25132:41:20"},"nodeType":"YulFunctionCall","src":"25132:70:20"},"nodeType":"YulExpressionStatement","src":"25132:70:20"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"25256:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25269:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"25280:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25265:3:20"},"nodeType":"YulFunctionCall","src":"25265:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"25212:43:20"},"nodeType":"YulFunctionCall","src":"25212:72:20"},"nodeType":"YulExpressionStatement","src":"25212:72:20"}]},"name":"abi_encode_tuple_t_bytes32_t_uint256_t_bytes4_t_uint256__to_t_bytes32_t_uint256_t_bytes4_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24870:9:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"24882:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"24890:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"24898:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24906:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24917:4:20","type":""}],"src":"24742:549:20"},{"body":{"nodeType":"YulBlock","src":"25415:195:20","statements":[{"nodeType":"YulAssignment","src":"25425:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25437:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"25448:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25433:3:20"},"nodeType":"YulFunctionCall","src":"25433:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25425:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25472:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"25483:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25468:3:20"},"nodeType":"YulFunctionCall","src":"25468:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25491:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"25497:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25487:3:20"},"nodeType":"YulFunctionCall","src":"25487:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25461:6:20"},"nodeType":"YulFunctionCall","src":"25461:47:20"},"nodeType":"YulExpressionStatement","src":"25461:47:20"},{"nodeType":"YulAssignment","src":"25517:86:20","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25589:6:20"},{"name":"tail","nodeType":"YulIdentifier","src":"25598:4:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25525:63:20"},"nodeType":"YulFunctionCall","src":"25525:78:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25517:4:20"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25387:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25399:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25410:4:20","type":""}],"src":"25297:313:20"},{"body":{"nodeType":"YulBlock","src":"25787:248:20","statements":[{"nodeType":"YulAssignment","src":"25797:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25809:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"25820:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25805:3:20"},"nodeType":"YulFunctionCall","src":"25805:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25797:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25844:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"25855:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25840:3:20"},"nodeType":"YulFunctionCall","src":"25840:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25863:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"25869:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25859:3:20"},"nodeType":"YulFunctionCall","src":"25859:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25833:6:20"},"nodeType":"YulFunctionCall","src":"25833:47:20"},"nodeType":"YulExpressionStatement","src":"25833:47:20"},{"nodeType":"YulAssignment","src":"25889:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26023:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_1f5a2f62658d6a797c6aa77f3644d453326e014c355d91d89127b18e16c407ef_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25897:124:20"},"nodeType":"YulFunctionCall","src":"25897:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25889:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_1f5a2f62658d6a797c6aa77f3644d453326e014c355d91d89127b18e16c407ef__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25767:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25782:4:20","type":""}],"src":"25616:419:20"},{"body":{"nodeType":"YulBlock","src":"26212:248:20","statements":[{"nodeType":"YulAssignment","src":"26222:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26234:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"26245:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26230:3:20"},"nodeType":"YulFunctionCall","src":"26230:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26222:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26269:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"26280:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26265:3:20"},"nodeType":"YulFunctionCall","src":"26265:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26288:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"26294:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26284:3:20"},"nodeType":"YulFunctionCall","src":"26284:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26258:6:20"},"nodeType":"YulFunctionCall","src":"26258:47:20"},"nodeType":"YulExpressionStatement","src":"26258:47:20"},{"nodeType":"YulAssignment","src":"26314:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26448:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_2254f56cac9b925e5567d5317d5f1fa4cb1cef32c5f259415ee5e2f68ac31e6b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26322:124:20"},"nodeType":"YulFunctionCall","src":"26322:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26314:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_2254f56cac9b925e5567d5317d5f1fa4cb1cef32c5f259415ee5e2f68ac31e6b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26192:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26207:4:20","type":""}],"src":"26041:419:20"},{"body":{"nodeType":"YulBlock","src":"26637:248:20","statements":[{"nodeType":"YulAssignment","src":"26647:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26659:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"26670:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26655:3:20"},"nodeType":"YulFunctionCall","src":"26655:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26647:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26694:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"26705:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26690:3:20"},"nodeType":"YulFunctionCall","src":"26690:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26713:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"26719:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26709:3:20"},"nodeType":"YulFunctionCall","src":"26709:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26683:6:20"},"nodeType":"YulFunctionCall","src":"26683:47:20"},"nodeType":"YulExpressionStatement","src":"26683:47:20"},{"nodeType":"YulAssignment","src":"26739:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26873:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26747:124:20"},"nodeType":"YulFunctionCall","src":"26747:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26739:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26617:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26632:4:20","type":""}],"src":"26466:419:20"},{"body":{"nodeType":"YulBlock","src":"27062:248:20","statements":[{"nodeType":"YulAssignment","src":"27072:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27084:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"27095:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27080:3:20"},"nodeType":"YulFunctionCall","src":"27080:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27072:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27119:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"27130:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27115:3:20"},"nodeType":"YulFunctionCall","src":"27115:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27138:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"27144:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27134:3:20"},"nodeType":"YulFunctionCall","src":"27134:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27108:6:20"},"nodeType":"YulFunctionCall","src":"27108:47:20"},"nodeType":"YulExpressionStatement","src":"27108:47:20"},{"nodeType":"YulAssignment","src":"27164:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27298:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_3b3efd608222b424e5ed8427d7f6a272069793e6a1f5930c93db5c7960c3ce96_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27172:124:20"},"nodeType":"YulFunctionCall","src":"27172:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27164:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b3efd608222b424e5ed8427d7f6a272069793e6a1f5930c93db5c7960c3ce96__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27042:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27057:4:20","type":""}],"src":"26891:419:20"},{"body":{"nodeType":"YulBlock","src":"27487:248:20","statements":[{"nodeType":"YulAssignment","src":"27497:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27509:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"27520:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27505:3:20"},"nodeType":"YulFunctionCall","src":"27505:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27497:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27544:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"27555:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27540:3:20"},"nodeType":"YulFunctionCall","src":"27540:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27563:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"27569:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27559:3:20"},"nodeType":"YulFunctionCall","src":"27559:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27533:6:20"},"nodeType":"YulFunctionCall","src":"27533:47:20"},"nodeType":"YulExpressionStatement","src":"27533:47:20"},{"nodeType":"YulAssignment","src":"27589:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27723:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27597:124:20"},"nodeType":"YulFunctionCall","src":"27597:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27589:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27467:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27482:4:20","type":""}],"src":"27316:419:20"},{"body":{"nodeType":"YulBlock","src":"27912:248:20","statements":[{"nodeType":"YulAssignment","src":"27922:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27934:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"27945:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27930:3:20"},"nodeType":"YulFunctionCall","src":"27930:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27922:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27969:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"27980:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27965:3:20"},"nodeType":"YulFunctionCall","src":"27965:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27988:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"27994:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27984:3:20"},"nodeType":"YulFunctionCall","src":"27984:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27958:6:20"},"nodeType":"YulFunctionCall","src":"27958:47:20"},"nodeType":"YulExpressionStatement","src":"27958:47:20"},{"nodeType":"YulAssignment","src":"28014:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28148:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_8e1f7009e5aca473fdde21442dae29568050b67581f4b146dca8997db684dff1_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28022:124:20"},"nodeType":"YulFunctionCall","src":"28022:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28014:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_8e1f7009e5aca473fdde21442dae29568050b67581f4b146dca8997db684dff1__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27892:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27907:4:20","type":""}],"src":"27741:419:20"},{"body":{"nodeType":"YulBlock","src":"28337:248:20","statements":[{"nodeType":"YulAssignment","src":"28347:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28359:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"28370:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28355:3:20"},"nodeType":"YulFunctionCall","src":"28355:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28347:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28394:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"28405:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28390:3:20"},"nodeType":"YulFunctionCall","src":"28390:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28413:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"28419:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28409:3:20"},"nodeType":"YulFunctionCall","src":"28409:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28383:6:20"},"nodeType":"YulFunctionCall","src":"28383:47:20"},"nodeType":"YulExpressionStatement","src":"28383:47:20"},{"nodeType":"YulAssignment","src":"28439:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28573:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28447:124:20"},"nodeType":"YulFunctionCall","src":"28447:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28439:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28317:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28332:4:20","type":""}],"src":"28166:419:20"},{"body":{"nodeType":"YulBlock","src":"28762:248:20","statements":[{"nodeType":"YulAssignment","src":"28772:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28784:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"28795:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28780:3:20"},"nodeType":"YulFunctionCall","src":"28780:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28772:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28819:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"28830:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28815:3:20"},"nodeType":"YulFunctionCall","src":"28815:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28838:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"28844:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28834:3:20"},"nodeType":"YulFunctionCall","src":"28834:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28808:6:20"},"nodeType":"YulFunctionCall","src":"28808:47:20"},"nodeType":"YulExpressionStatement","src":"28808:47:20"},{"nodeType":"YulAssignment","src":"28864:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28998:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_aa8ec5d8fae9f4324168b2ce12ce357d4c8138c22ffca90f21d943a8359ed9fe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28872:124:20"},"nodeType":"YulFunctionCall","src":"28872:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28864:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_aa8ec5d8fae9f4324168b2ce12ce357d4c8138c22ffca90f21d943a8359ed9fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28742:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28757:4:20","type":""}],"src":"28591:419:20"},{"body":{"nodeType":"YulBlock","src":"29187:248:20","statements":[{"nodeType":"YulAssignment","src":"29197:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29209:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"29220:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29205:3:20"},"nodeType":"YulFunctionCall","src":"29205:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29197:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29244:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"29255:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29240:3:20"},"nodeType":"YulFunctionCall","src":"29240:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29263:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"29269:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29259:3:20"},"nodeType":"YulFunctionCall","src":"29259:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29233:6:20"},"nodeType":"YulFunctionCall","src":"29233:47:20"},"nodeType":"YulExpressionStatement","src":"29233:47:20"},{"nodeType":"YulAssignment","src":"29289:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29423:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_ae094217ca8267b1aa5ddfc23784056f71662e2c3ecbe8a78d373fd86d4eaae0_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29297:124:20"},"nodeType":"YulFunctionCall","src":"29297:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29289:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_ae094217ca8267b1aa5ddfc23784056f71662e2c3ecbe8a78d373fd86d4eaae0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29167:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29182:4:20","type":""}],"src":"29016:419:20"},{"body":{"nodeType":"YulBlock","src":"29612:248:20","statements":[{"nodeType":"YulAssignment","src":"29622:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29634:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"29645:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29630:3:20"},"nodeType":"YulFunctionCall","src":"29630:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29622:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29669:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"29680:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29665:3:20"},"nodeType":"YulFunctionCall","src":"29665:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29688:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"29694:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29684:3:20"},"nodeType":"YulFunctionCall","src":"29684:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29658:6:20"},"nodeType":"YulFunctionCall","src":"29658:47:20"},"nodeType":"YulExpressionStatement","src":"29658:47:20"},{"nodeType":"YulAssignment","src":"29714:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29848:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_b4b84ebe3de827a4087f895b834b5993eef1b5aca3e2419eeecfbb4534ceb6c3_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29722:124:20"},"nodeType":"YulFunctionCall","src":"29722:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29714:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_b4b84ebe3de827a4087f895b834b5993eef1b5aca3e2419eeecfbb4534ceb6c3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29592:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29607:4:20","type":""}],"src":"29441:419:20"},{"body":{"nodeType":"YulBlock","src":"30037:248:20","statements":[{"nodeType":"YulAssignment","src":"30047:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30059:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"30070:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30055:3:20"},"nodeType":"YulFunctionCall","src":"30055:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30047:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30094:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"30105:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30090:3:20"},"nodeType":"YulFunctionCall","src":"30090:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30113:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"30119:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30109:3:20"},"nodeType":"YulFunctionCall","src":"30109:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30083:6:20"},"nodeType":"YulFunctionCall","src":"30083:47:20"},"nodeType":"YulExpressionStatement","src":"30083:47:20"},{"nodeType":"YulAssignment","src":"30139:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30273:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_c2f50fde43b6cd00923414ed2254557266b44b46c98097d2bbc05bc171375af6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30147:124:20"},"nodeType":"YulFunctionCall","src":"30147:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30139:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_c2f50fde43b6cd00923414ed2254557266b44b46c98097d2bbc05bc171375af6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30017:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30032:4:20","type":""}],"src":"29866:419:20"},{"body":{"nodeType":"YulBlock","src":"30462:248:20","statements":[{"nodeType":"YulAssignment","src":"30472:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30484:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"30495:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30480:3:20"},"nodeType":"YulFunctionCall","src":"30480:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30472:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30519:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"30530:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30515:3:20"},"nodeType":"YulFunctionCall","src":"30515:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30538:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"30544:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30534:3:20"},"nodeType":"YulFunctionCall","src":"30534:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30508:6:20"},"nodeType":"YulFunctionCall","src":"30508:47:20"},"nodeType":"YulExpressionStatement","src":"30508:47:20"},{"nodeType":"YulAssignment","src":"30564:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30698:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_d3551e30d3095fd81287b88f7139bb09818e34280e85ee821994ebaebbed7072_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30572:124:20"},"nodeType":"YulFunctionCall","src":"30572:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30564:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3551e30d3095fd81287b88f7139bb09818e34280e85ee821994ebaebbed7072__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30442:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30457:4:20","type":""}],"src":"30291:419:20"},{"body":{"nodeType":"YulBlock","src":"30887:248:20","statements":[{"nodeType":"YulAssignment","src":"30897:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30909:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"30920:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30905:3:20"},"nodeType":"YulFunctionCall","src":"30905:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30897:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30944:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"30955:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30940:3:20"},"nodeType":"YulFunctionCall","src":"30940:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30963:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"30969:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30959:3:20"},"nodeType":"YulFunctionCall","src":"30959:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30933:6:20"},"nodeType":"YulFunctionCall","src":"30933:47:20"},"nodeType":"YulExpressionStatement","src":"30933:47:20"},{"nodeType":"YulAssignment","src":"30989:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31123:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_d5cafe2745dab6273b51cca76f8727c7664db74ede49af049a5b5ca6a3b184e4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30997:124:20"},"nodeType":"YulFunctionCall","src":"30997:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30989:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_d5cafe2745dab6273b51cca76f8727c7664db74ede49af049a5b5ca6a3b184e4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30867:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30882:4:20","type":""}],"src":"30716:419:20"},{"body":{"nodeType":"YulBlock","src":"31312:248:20","statements":[{"nodeType":"YulAssignment","src":"31322:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31334:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"31345:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31330:3:20"},"nodeType":"YulFunctionCall","src":"31330:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31322:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31369:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"31380:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31365:3:20"},"nodeType":"YulFunctionCall","src":"31365:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31388:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"31394:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31384:3:20"},"nodeType":"YulFunctionCall","src":"31384:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31358:6:20"},"nodeType":"YulFunctionCall","src":"31358:47:20"},"nodeType":"YulExpressionStatement","src":"31358:47:20"},{"nodeType":"YulAssignment","src":"31414:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31548:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_f41b38bb6792dd2d923f031bfb556202e92815c3f2ff36e44de6f82c3da0b8b1_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31422:124:20"},"nodeType":"YulFunctionCall","src":"31422:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31414:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_f41b38bb6792dd2d923f031bfb556202e92815c3f2ff36e44de6f82c3da0b8b1__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31292:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31307:4:20","type":""}],"src":"31141:419:20"},{"body":{"nodeType":"YulBlock","src":"31716:227:20","statements":[{"nodeType":"YulAssignment","src":"31726:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31738:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"31749:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31734:3:20"},"nodeType":"YulFunctionCall","src":"31734:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31726:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31773:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"31784:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31769:3:20"},"nodeType":"YulFunctionCall","src":"31769:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31792:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"31798:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31788:3:20"},"nodeType":"YulFunctionCall","src":"31788:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31762:6:20"},"nodeType":"YulFunctionCall","src":"31762:47:20"},"nodeType":"YulExpressionStatement","src":"31762:47:20"},{"nodeType":"YulAssignment","src":"31818:118:20","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"31922:6:20"},{"name":"tail","nodeType":"YulIdentifier","src":"31931:4:20"}],"functionName":{"name":"abi_encode_t_struct$_Campaign_$2232_memory_ptr_to_t_struct$_Campaign_$2232_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31826:95:20"},"nodeType":"YulFunctionCall","src":"31826:110:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31818:4:20"}]}]},"name":"abi_encode_tuple_t_struct$_Campaign_$2232_memory_ptr__to_t_struct$_Campaign_$2232_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31688:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"31700:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31711:4:20","type":""}],"src":"31566:377:20"},{"body":{"nodeType":"YulBlock","src":"32047:124:20","statements":[{"nodeType":"YulAssignment","src":"32057:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32069:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"32080:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32065:3:20"},"nodeType":"YulFunctionCall","src":"32065:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32057:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"32137:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32150:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"32161:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32146:3:20"},"nodeType":"YulFunctionCall","src":"32146:17:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"32093:43:20"},"nodeType":"YulFunctionCall","src":"32093:71:20"},"nodeType":"YulExpressionStatement","src":"32093:71:20"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32019:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"32031:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32042:4:20","type":""}],"src":"31949:222:20"},{"body":{"nodeType":"YulBlock","src":"32303:206:20","statements":[{"nodeType":"YulAssignment","src":"32313:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32325:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"32336:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32321:3:20"},"nodeType":"YulFunctionCall","src":"32321:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32313:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"32393:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32406:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"32417:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32402:3:20"},"nodeType":"YulFunctionCall","src":"32402:17:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"32349:43:20"},"nodeType":"YulFunctionCall","src":"32349:71:20"},"nodeType":"YulExpressionStatement","src":"32349:71:20"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"32474:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32487:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"32498:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32483:3:20"},"nodeType":"YulFunctionCall","src":"32483:18:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"32430:43:20"},"nodeType":"YulFunctionCall","src":"32430:72:20"},"nodeType":"YulExpressionStatement","src":"32430:72:20"}]},"name":"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32267:9:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"32279:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"32287:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32298:4:20","type":""}],"src":"32177:332:20"},{"body":{"nodeType":"YulBlock","src":"32669:288:20","statements":[{"nodeType":"YulAssignment","src":"32679:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32691:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"32702:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32687:3:20"},"nodeType":"YulFunctionCall","src":"32687:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32679:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"32759:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32772:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"32783:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32768:3:20"},"nodeType":"YulFunctionCall","src":"32768:17:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"32715:43:20"},"nodeType":"YulFunctionCall","src":"32715:71:20"},"nodeType":"YulExpressionStatement","src":"32715:71:20"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"32840:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32853:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"32864:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32849:3:20"},"nodeType":"YulFunctionCall","src":"32849:18:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"32796:43:20"},"nodeType":"YulFunctionCall","src":"32796:72:20"},"nodeType":"YulExpressionStatement","src":"32796:72:20"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"32922:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32935:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"32946:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32931:3:20"},"nodeType":"YulFunctionCall","src":"32931:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"32878:43:20"},"nodeType":"YulFunctionCall","src":"32878:72:20"},"nodeType":"YulExpressionStatement","src":"32878:72:20"}]},"name":"abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32625:9:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"32637:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"32645:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"32653:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32664:4:20","type":""}],"src":"32515:442:20"},{"body":{"nodeType":"YulBlock","src":"33004:88:20","statements":[{"nodeType":"YulAssignment","src":"33014:30:20","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"33024:18:20"},"nodeType":"YulFunctionCall","src":"33024:20:20"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"33014:6:20"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"33073:6:20"},{"name":"size","nodeType":"YulIdentifier","src":"33081:4:20"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"33053:19:20"},"nodeType":"YulFunctionCall","src":"33053:33:20"},"nodeType":"YulExpressionStatement","src":"33053:33:20"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"32988:4:20","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"32997:6:20","type":""}],"src":"32963:129:20"},{"body":{"nodeType":"YulBlock","src":"33138:35:20","statements":[{"nodeType":"YulAssignment","src":"33148:19:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33164:2:20","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"33158:5:20"},"nodeType":"YulFunctionCall","src":"33158:9:20"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"33148:6:20"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"33131:6:20","type":""}],"src":"33098:75:20"},{"body":{"nodeType":"YulBlock","src":"33246:241:20","statements":[{"body":{"nodeType":"YulBlock","src":"33351:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"33353:16:20"},"nodeType":"YulFunctionCall","src":"33353:18:20"},"nodeType":"YulExpressionStatement","src":"33353:18:20"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"33323:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"33331:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"33320:2:20"},"nodeType":"YulFunctionCall","src":"33320:30:20"},"nodeType":"YulIf","src":"33317:2:20"},{"nodeType":"YulAssignment","src":"33383:37:20","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"33413:6:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"33391:21:20"},"nodeType":"YulFunctionCall","src":"33391:29:20"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"33383:4:20"}]},{"nodeType":"YulAssignment","src":"33457:23:20","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"33469:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"33475:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33465:3:20"},"nodeType":"YulFunctionCall","src":"33465:15:20"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"33457:4:20"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"33230:6:20","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"33241:4:20","type":""}],"src":"33179:308:20"},{"body":{"nodeType":"YulBlock","src":"33547:87:20","statements":[{"nodeType":"YulAssignment","src":"33557:11:20","value":{"name":"ptr","nodeType":"YulIdentifier","src":"33565:3:20"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"33557:4:20"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33585:1:20","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"33588:3:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33578:6:20"},"nodeType":"YulFunctionCall","src":"33578:14:20"},"nodeType":"YulExpressionStatement","src":"33578:14:20"},{"nodeType":"YulAssignment","src":"33601:26:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33619:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"33622:4:20","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"33609:9:20"},"nodeType":"YulFunctionCall","src":"33609:18:20"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"33601:4:20"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"33534:3:20","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"33542:4:20","type":""}],"src":"33493:141:20"},{"body":{"nodeType":"YulBlock","src":"33698:40:20","statements":[{"nodeType":"YulAssignment","src":"33709:22:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33725:5:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"33719:5:20"},"nodeType":"YulFunctionCall","src":"33719:12:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"33709:6:20"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33681:5:20","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"33691:6:20","type":""}],"src":"33640:98:20"},{"body":{"nodeType":"YulBlock","src":"33803:40:20","statements":[{"nodeType":"YulAssignment","src":"33814:22:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33830:5:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"33824:5:20"},"nodeType":"YulFunctionCall","src":"33824:12:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"33814:6:20"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33786:5:20","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"33796:6:20","type":""}],"src":"33744:99:20"},{"body":{"nodeType":"YulBlock","src":"33944:73:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33961:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"33966:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33954:6:20"},"nodeType":"YulFunctionCall","src":"33954:19:20"},"nodeType":"YulExpressionStatement","src":"33954:19:20"},{"nodeType":"YulAssignment","src":"33982:29:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34001:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"34006:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33997:3:20"},"nodeType":"YulFunctionCall","src":"33997:14:20"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"33982:11:20"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"33916:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"33921:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"33932:11:20","type":""}],"src":"33849:168:20"},{"body":{"nodeType":"YulBlock","src":"34109:73:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34126:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"34131:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34119:6:20"},"nodeType":"YulFunctionCall","src":"34119:19:20"},"nodeType":"YulExpressionStatement","src":"34119:19:20"},{"nodeType":"YulAssignment","src":"34147:29:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34166:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"34171:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34162:3:20"},"nodeType":"YulFunctionCall","src":"34162:14:20"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"34147:11:20"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"34081:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"34086:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"34097:11:20","type":""}],"src":"34023:159:20"},{"body":{"nodeType":"YulBlock","src":"34284:73:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34301:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"34306:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34294:6:20"},"nodeType":"YulFunctionCall","src":"34294:19:20"},"nodeType":"YulExpressionStatement","src":"34294:19:20"},{"nodeType":"YulAssignment","src":"34322:29:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34341:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"34346:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34337:3:20"},"nodeType":"YulFunctionCall","src":"34337:14:20"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"34322:11:20"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"34256:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"34261:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"34272:11:20","type":""}],"src":"34188:169:20"},{"body":{"nodeType":"YulBlock","src":"34477:34:20","statements":[{"nodeType":"YulAssignment","src":"34487:18:20","value":{"name":"pos","nodeType":"YulIdentifier","src":"34502:3:20"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"34487:11:20"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"34449:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"34454:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"34465:11:20","type":""}],"src":"34363:148:20"},{"body":{"nodeType":"YulBlock","src":"34561:261:20","statements":[{"nodeType":"YulAssignment","src":"34571:25:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"34594:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"34576:17:20"},"nodeType":"YulFunctionCall","src":"34576:20:20"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"34571:1:20"}]},{"nodeType":"YulAssignment","src":"34605:25:20","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"34628:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"34610:17:20"},"nodeType":"YulFunctionCall","src":"34610:20:20"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"34605:1:20"}]},{"body":{"nodeType":"YulBlock","src":"34768:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"34770:16:20"},"nodeType":"YulFunctionCall","src":"34770:18:20"},"nodeType":"YulExpressionStatement","src":"34770:18:20"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"34689:1:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34696:66:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"34764:1:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"34692:3:20"},"nodeType":"YulFunctionCall","src":"34692:74:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"34686:2:20"},"nodeType":"YulFunctionCall","src":"34686:81:20"},"nodeType":"YulIf","src":"34683:2:20"},{"nodeType":"YulAssignment","src":"34800:16:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"34811:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"34814:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34807:3:20"},"nodeType":"YulFunctionCall","src":"34807:9:20"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"34800:3:20"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"34548:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"34551:1:20","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"34557:3:20","type":""}],"src":"34517:305:20"},{"body":{"nodeType":"YulBlock","src":"34870:143:20","statements":[{"nodeType":"YulAssignment","src":"34880:25:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"34903:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"34885:17:20"},"nodeType":"YulFunctionCall","src":"34885:20:20"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"34880:1:20"}]},{"nodeType":"YulAssignment","src":"34914:25:20","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"34937:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"34919:17:20"},"nodeType":"YulFunctionCall","src":"34919:20:20"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"34914:1:20"}]},{"body":{"nodeType":"YulBlock","src":"34961:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"34963:16:20"},"nodeType":"YulFunctionCall","src":"34963:18:20"},"nodeType":"YulExpressionStatement","src":"34963:18:20"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"34958:1:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34951:6:20"},"nodeType":"YulFunctionCall","src":"34951:9:20"},"nodeType":"YulIf","src":"34948:2:20"},{"nodeType":"YulAssignment","src":"34993:14:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"35002:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"35005:1:20"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"34998:3:20"},"nodeType":"YulFunctionCall","src":"34998:9:20"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"34993:1:20"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"34859:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"34862:1:20","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"34868:1:20","type":""}],"src":"34828:185:20"},{"body":{"nodeType":"YulBlock","src":"35092:775:20","statements":[{"nodeType":"YulAssignment","src":"35102:15:20","value":{"name":"_power","nodeType":"YulIdentifier","src":"35111:6:20"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"35102:5:20"}]},{"nodeType":"YulAssignment","src":"35126:14:20","value":{"name":"_base","nodeType":"YulIdentifier","src":"35135:5:20"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"35126:4:20"}]},{"body":{"nodeType":"YulBlock","src":"35184:677:20","statements":[{"body":{"nodeType":"YulBlock","src":"35272:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"35274:16:20"},"nodeType":"YulFunctionCall","src":"35274:18:20"},"nodeType":"YulExpressionStatement","src":"35274:18:20"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"35250:4:20"},{"arguments":[{"name":"max","nodeType":"YulIdentifier","src":"35260:3:20"},{"name":"base","nodeType":"YulIdentifier","src":"35265:4:20"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"35256:3:20"},"nodeType":"YulFunctionCall","src":"35256:14:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"35247:2:20"},"nodeType":"YulFunctionCall","src":"35247:24:20"},"nodeType":"YulIf","src":"35244:2:20"},{"body":{"nodeType":"YulBlock","src":"35339:419:20","statements":[{"nodeType":"YulAssignment","src":"35719:25:20","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"35732:5:20"},{"name":"base","nodeType":"YulIdentifier","src":"35739:4:20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"35728:3:20"},"nodeType":"YulFunctionCall","src":"35728:16:20"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"35719:5:20"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"35314:8:20"},{"kind":"number","nodeType":"YulLiteral","src":"35324:1:20","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"35310:3:20"},"nodeType":"YulFunctionCall","src":"35310:16:20"},"nodeType":"YulIf","src":"35307:2:20"},{"nodeType":"YulAssignment","src":"35771:23:20","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"35783:4:20"},{"name":"base","nodeType":"YulIdentifier","src":"35789:4:20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"35779:3:20"},"nodeType":"YulFunctionCall","src":"35779:15:20"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"35771:4:20"}]},{"nodeType":"YulAssignment","src":"35807:44:20","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"35842:8:20"}],"functionName":{"name":"shift_right_1_unsigned","nodeType":"YulIdentifier","src":"35819:22:20"},"nodeType":"YulFunctionCall","src":"35819:32:20"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"35807:8:20"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"35160:8:20"},{"kind":"number","nodeType":"YulLiteral","src":"35170:1:20","type":"","value":"1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"35157:2:20"},"nodeType":"YulFunctionCall","src":"35157:15:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"35173:2:20","statements":[]},"pre":{"nodeType":"YulBlock","src":"35153:3:20","statements":[]},"src":"35149:712:20"}]},"name":"checked_exp_helper","nodeType":"YulFunctionDefinition","parameters":[{"name":"_power","nodeType":"YulTypedName","src":"35047:6:20","type":""},{"name":"_base","nodeType":"YulTypedName","src":"35055:5:20","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"35062:8:20","type":""},{"name":"max","nodeType":"YulTypedName","src":"35072:3:20","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"35080:5:20","type":""},{"name":"base","nodeType":"YulTypedName","src":"35087:4:20","type":""}],"src":"35019:848:20"},{"body":{"nodeType":"YulBlock","src":"35939:219:20","statements":[{"nodeType":"YulAssignment","src":"35949:31:20","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"35975:4:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"35957:17:20"},"nodeType":"YulFunctionCall","src":"35957:23:20"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"35949:4:20"}]},{"nodeType":"YulAssignment","src":"35989:39:20","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"36019:8:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"36001:17:20"},"nodeType":"YulFunctionCall","src":"36001:27:20"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"35989:8:20"}]},{"nodeType":"YulAssignment","src":"36038:113:20","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"36068:4:20"},{"name":"exponent","nodeType":"YulIdentifier","src":"36074:8:20"},{"kind":"number","nodeType":"YulLiteral","src":"36084:66:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"checked_exp_unsigned","nodeType":"YulIdentifier","src":"36047:20:20"},"nodeType":"YulFunctionCall","src":"36047:104:20"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"36038:5:20"}]}]},"name":"checked_exp_t_uint256_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"35914:4:20","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"35920:8:20","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"35933:5:20","type":""}],"src":"35873:285:20"},{"body":{"nodeType":"YulBlock","src":"36224:1013:20","statements":[{"body":{"nodeType":"YulBlock","src":"36419:20:20","statements":[{"nodeType":"YulAssignment","src":"36421:10:20","value":{"kind":"number","nodeType":"YulLiteral","src":"36430:1:20","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"36421:5:20"}]},{"nodeType":"YulLeave","src":"36432:5:20"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"36409:8:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"36402:6:20"},"nodeType":"YulFunctionCall","src":"36402:16:20"},"nodeType":"YulIf","src":"36399:2:20"},{"body":{"nodeType":"YulBlock","src":"36464:20:20","statements":[{"nodeType":"YulAssignment","src":"36466:10:20","value":{"kind":"number","nodeType":"YulLiteral","src":"36475:1:20","type":"","value":"0"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"36466:5:20"}]},{"nodeType":"YulLeave","src":"36477:5:20"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"36458:4:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"36451:6:20"},"nodeType":"YulFunctionCall","src":"36451:12:20"},"nodeType":"YulIf","src":"36448:2:20"},{"cases":[{"body":{"nodeType":"YulBlock","src":"36594:20:20","statements":[{"nodeType":"YulAssignment","src":"36596:10:20","value":{"kind":"number","nodeType":"YulLiteral","src":"36605:1:20","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"36596:5:20"}]},{"nodeType":"YulLeave","src":"36607:5:20"}]},"nodeType":"YulCase","src":"36587:27:20","value":{"kind":"number","nodeType":"YulLiteral","src":"36592:1:20","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"36638:176:20","statements":[{"body":{"nodeType":"YulBlock","src":"36673:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"36675:16:20"},"nodeType":"YulFunctionCall","src":"36675:18:20"},"nodeType":"YulExpressionStatement","src":"36675:18:20"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"36658:8:20"},{"kind":"number","nodeType":"YulLiteral","src":"36668:3:20","type":"","value":"255"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"36655:2:20"},"nodeType":"YulFunctionCall","src":"36655:17:20"},"nodeType":"YulIf","src":"36652:2:20"},{"nodeType":"YulAssignment","src":"36708:25:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"36721:1:20","type":"","value":"2"},{"name":"exponent","nodeType":"YulIdentifier","src":"36724:8:20"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"36717:3:20"},"nodeType":"YulFunctionCall","src":"36717:16:20"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"36708:5:20"}]},{"body":{"nodeType":"YulBlock","src":"36764:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"36766:16:20"},"nodeType":"YulFunctionCall","src":"36766:18:20"},"nodeType":"YulExpressionStatement","src":"36766:18:20"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"36752:5:20"},{"name":"max","nodeType":"YulIdentifier","src":"36759:3:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"36749:2:20"},"nodeType":"YulFunctionCall","src":"36749:14:20"},"nodeType":"YulIf","src":"36746:2:20"},{"nodeType":"YulLeave","src":"36799:5:20"}]},"nodeType":"YulCase","src":"36623:191:20","value":{"kind":"number","nodeType":"YulLiteral","src":"36628:1:20","type":"","value":"2"}}],"expression":{"name":"base","nodeType":"YulIdentifier","src":"36544:4:20"},"nodeType":"YulSwitch","src":"36537:277:20"},{"body":{"nodeType":"YulBlock","src":"36946:123:20","statements":[{"nodeType":"YulAssignment","src":"36960:28:20","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"36973:4:20"},{"name":"exponent","nodeType":"YulIdentifier","src":"36979:8:20"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"36969:3:20"},"nodeType":"YulFunctionCall","src":"36969:19:20"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"36960:5:20"}]},{"body":{"nodeType":"YulBlock","src":"37019:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"37021:16:20"},"nodeType":"YulFunctionCall","src":"37021:18:20"},"nodeType":"YulExpressionStatement","src":"37021:18:20"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"37007:5:20"},{"name":"max","nodeType":"YulIdentifier","src":"37014:3:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"37004:2:20"},"nodeType":"YulFunctionCall","src":"37004:14:20"},"nodeType":"YulIf","src":"37001:2:20"},{"nodeType":"YulLeave","src":"37054:5:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"36849:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"36855:2:20","type":"","value":"11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"36846:2:20"},"nodeType":"YulFunctionCall","src":"36846:12:20"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"36863:8:20"},{"kind":"number","nodeType":"YulLiteral","src":"36873:2:20","type":"","value":"78"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"36860:2:20"},"nodeType":"YulFunctionCall","src":"36860:16:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"36842:3:20"},"nodeType":"YulFunctionCall","src":"36842:35:20"},{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"36898:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"36904:3:20","type":"","value":"307"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"36895:2:20"},"nodeType":"YulFunctionCall","src":"36895:13:20"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"36913:8:20"},{"kind":"number","nodeType":"YulLiteral","src":"36923:2:20","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"36910:2:20"},"nodeType":"YulFunctionCall","src":"36910:16:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"36891:3:20"},"nodeType":"YulFunctionCall","src":"36891:36:20"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"36826:2:20"},"nodeType":"YulFunctionCall","src":"36826:111:20"},"nodeType":"YulIf","src":"36823:2:20"},{"nodeType":"YulAssignment","src":"37079:57:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37113:1:20","type":"","value":"1"},{"name":"base","nodeType":"YulIdentifier","src":"37116:4:20"},{"name":"exponent","nodeType":"YulIdentifier","src":"37122:8:20"},{"name":"max","nodeType":"YulIdentifier","src":"37132:3:20"}],"functionName":{"name":"checked_exp_helper","nodeType":"YulIdentifier","src":"37094:18:20"},"nodeType":"YulFunctionCall","src":"37094:42:20"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"37079:5:20"},{"name":"base","nodeType":"YulIdentifier","src":"37086:4:20"}]},{"body":{"nodeType":"YulBlock","src":"37175:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"37177:16:20"},"nodeType":"YulFunctionCall","src":"37177:18:20"},"nodeType":"YulExpressionStatement","src":"37177:18:20"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"37152:5:20"},{"arguments":[{"name":"max","nodeType":"YulIdentifier","src":"37163:3:20"},{"name":"base","nodeType":"YulIdentifier","src":"37168:4:20"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"37159:3:20"},"nodeType":"YulFunctionCall","src":"37159:14:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"37149:2:20"},"nodeType":"YulFunctionCall","src":"37149:25:20"},"nodeType":"YulIf","src":"37146:2:20"},{"nodeType":"YulAssignment","src":"37206:25:20","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"37219:5:20"},{"name":"base","nodeType":"YulIdentifier","src":"37226:4:20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"37215:3:20"},"nodeType":"YulFunctionCall","src":"37215:16:20"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"37206:5:20"}]}]},"name":"checked_exp_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"36194:4:20","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"36200:8:20","type":""},{"name":"max","nodeType":"YulTypedName","src":"36210:3:20","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"36218:5:20","type":""}],"src":"36164:1073:20"},{"body":{"nodeType":"YulBlock","src":"37291:300:20","statements":[{"nodeType":"YulAssignment","src":"37301:25:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"37324:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"37306:17:20"},"nodeType":"YulFunctionCall","src":"37306:20:20"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"37301:1:20"}]},{"nodeType":"YulAssignment","src":"37335:25:20","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"37358:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"37340:17:20"},"nodeType":"YulFunctionCall","src":"37340:20:20"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"37335:1:20"}]},{"body":{"nodeType":"YulBlock","src":"37533:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"37535:16:20"},"nodeType":"YulFunctionCall","src":"37535:18:20"},"nodeType":"YulExpressionStatement","src":"37535:18:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"37445:1:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"37438:6:20"},"nodeType":"YulFunctionCall","src":"37438:9:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"37431:6:20"},"nodeType":"YulFunctionCall","src":"37431:17:20"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"37453:1:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37460:66:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"37528:1:20"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"37456:3:20"},"nodeType":"YulFunctionCall","src":"37456:74:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"37450:2:20"},"nodeType":"YulFunctionCall","src":"37450:81:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"37427:3:20"},"nodeType":"YulFunctionCall","src":"37427:105:20"},"nodeType":"YulIf","src":"37424:2:20"},{"nodeType":"YulAssignment","src":"37565:20:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"37580:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"37583:1:20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"37576:3:20"},"nodeType":"YulFunctionCall","src":"37576:9:20"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"37565:7:20"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"37274:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"37277:1:20","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"37283:7:20","type":""}],"src":"37243:348:20"},{"body":{"nodeType":"YulBlock","src":"37642:146:20","statements":[{"nodeType":"YulAssignment","src":"37652:25:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"37675:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"37657:17:20"},"nodeType":"YulFunctionCall","src":"37657:20:20"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"37652:1:20"}]},{"nodeType":"YulAssignment","src":"37686:25:20","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"37709:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"37691:17:20"},"nodeType":"YulFunctionCall","src":"37691:20:20"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"37686:1:20"}]},{"body":{"nodeType":"YulBlock","src":"37733:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"37735:16:20"},"nodeType":"YulFunctionCall","src":"37735:18:20"},"nodeType":"YulExpressionStatement","src":"37735:18:20"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"37727:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"37730:1:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"37724:2:20"},"nodeType":"YulFunctionCall","src":"37724:8:20"},"nodeType":"YulIf","src":"37721:2:20"},{"nodeType":"YulAssignment","src":"37765:17:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"37777:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"37780:1:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"37773:3:20"},"nodeType":"YulFunctionCall","src":"37773:9:20"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"37765:4:20"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"37628:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"37631:1:20","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"37637:4:20","type":""}],"src":"37597:191:20"},{"body":{"nodeType":"YulBlock","src":"37839:51:20","statements":[{"nodeType":"YulAssignment","src":"37849:35:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37878:5:20"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"37860:17:20"},"nodeType":"YulFunctionCall","src":"37860:24:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"37849:7:20"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"37821:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"37831:7:20","type":""}],"src":"37794:96:20"},{"body":{"nodeType":"YulBlock","src":"37938:48:20","statements":[{"nodeType":"YulAssignment","src":"37948:32:20","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37973:5:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"37966:6:20"},"nodeType":"YulFunctionCall","src":"37966:13:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"37959:6:20"},"nodeType":"YulFunctionCall","src":"37959:21:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"37948:7:20"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"37920:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"37930:7:20","type":""}],"src":"37896:90:20"},{"body":{"nodeType":"YulBlock","src":"38037:32:20","statements":[{"nodeType":"YulAssignment","src":"38047:16:20","value":{"name":"value","nodeType":"YulIdentifier","src":"38058:5:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"38047:7:20"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"38019:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"38029:7:20","type":""}],"src":"37992:77:20"},{"body":{"nodeType":"YulBlock","src":"38119:105:20","statements":[{"nodeType":"YulAssignment","src":"38129:89:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38144:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"38151:66:20","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"38140:3:20"},"nodeType":"YulFunctionCall","src":"38140:78:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"38129:7:20"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"38101:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"38111:7:20","type":""}],"src":"38075:149:20"},{"body":{"nodeType":"YulBlock","src":"38275:81:20","statements":[{"nodeType":"YulAssignment","src":"38285:65:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38300:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"38307:42:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"38296:3:20"},"nodeType":"YulFunctionCall","src":"38296:54:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"38285:7:20"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"38257:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"38267:7:20","type":""}],"src":"38230:126:20"},{"body":{"nodeType":"YulBlock","src":"38407:32:20","statements":[{"nodeType":"YulAssignment","src":"38417:16:20","value":{"name":"value","nodeType":"YulIdentifier","src":"38428:5:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"38417:7:20"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"38389:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"38399:7:20","type":""}],"src":"38362:77:20"},{"body":{"nodeType":"YulBlock","src":"38528:89:20","statements":[{"nodeType":"YulAssignment","src":"38538:73:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38605:5:20"}],"functionName":{"name":"convert_t_contract$_ChainlinkClient_$861_to_t_uint160","nodeType":"YulIdentifier","src":"38551:53:20"},"nodeType":"YulFunctionCall","src":"38551:60:20"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"38538:9:20"}]}]},"name":"convert_t_contract$_ChainlinkClient_$861_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"38508:5:20","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"38518:9:20","type":""}],"src":"38445:172:20"},{"body":{"nodeType":"YulBlock","src":"38706:53:20","statements":[{"nodeType":"YulAssignment","src":"38716:37:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38747:5:20"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"38729:17:20"},"nodeType":"YulFunctionCall","src":"38729:24:20"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"38716:9:20"}]}]},"name":"convert_t_contract$_ChainlinkClient_$861_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"38686:5:20","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"38696:9:20","type":""}],"src":"38623:136:20"},{"body":{"nodeType":"YulBlock","src":"38816:103:20","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"38839:3:20"},{"name":"src","nodeType":"YulIdentifier","src":"38844:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"38849:6:20"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"38826:12:20"},"nodeType":"YulFunctionCall","src":"38826:30:20"},"nodeType":"YulExpressionStatement","src":"38826:30:20"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"38897:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"38902:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38893:3:20"},"nodeType":"YulFunctionCall","src":"38893:16:20"},{"kind":"number","nodeType":"YulLiteral","src":"38911:1:20","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38886:6:20"},"nodeType":"YulFunctionCall","src":"38886:27:20"},"nodeType":"YulExpressionStatement","src":"38886:27:20"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"38798:3:20","type":""},{"name":"dst","nodeType":"YulTypedName","src":"38803:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"38808:6:20","type":""}],"src":"38765:154:20"},{"body":{"nodeType":"YulBlock","src":"38974:258:20","statements":[{"nodeType":"YulVariableDeclaration","src":"38984:10:20","value":{"kind":"number","nodeType":"YulLiteral","src":"38993:1:20","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"38988:1:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"39053:63:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"39078:3:20"},{"name":"i","nodeType":"YulIdentifier","src":"39083:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39074:3:20"},"nodeType":"YulFunctionCall","src":"39074:11:20"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"39097:3:20"},{"name":"i","nodeType":"YulIdentifier","src":"39102:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39093:3:20"},"nodeType":"YulFunctionCall","src":"39093:11:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"39087:5:20"},"nodeType":"YulFunctionCall","src":"39087:18:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39067:6:20"},"nodeType":"YulFunctionCall","src":"39067:39:20"},"nodeType":"YulExpressionStatement","src":"39067:39:20"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"39014:1:20"},{"name":"length","nodeType":"YulIdentifier","src":"39017:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"39011:2:20"},"nodeType":"YulFunctionCall","src":"39011:13:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"39025:19:20","statements":[{"nodeType":"YulAssignment","src":"39027:15:20","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"39036:1:20"},{"kind":"number","nodeType":"YulLiteral","src":"39039:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39032:3:20"},"nodeType":"YulFunctionCall","src":"39032:10:20"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"39027:1:20"}]}]},"pre":{"nodeType":"YulBlock","src":"39007:3:20","statements":[]},"src":"39003:113:20"},{"body":{"nodeType":"YulBlock","src":"39150:76:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"39200:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"39205:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39196:3:20"},"nodeType":"YulFunctionCall","src":"39196:16:20"},{"kind":"number","nodeType":"YulLiteral","src":"39214:1:20","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39189:6:20"},"nodeType":"YulFunctionCall","src":"39189:27:20"},"nodeType":"YulExpressionStatement","src":"39189:27:20"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"39131:1:20"},{"name":"length","nodeType":"YulIdentifier","src":"39134:6:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"39128:2:20"},"nodeType":"YulFunctionCall","src":"39128:13:20"},"nodeType":"YulIf","src":"39125:2:20"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"38956:3:20","type":""},{"name":"dst","nodeType":"YulTypedName","src":"38961:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"38966:6:20","type":""}],"src":"38925:307:20"},{"body":{"nodeType":"YulBlock","src":"39289:269:20","statements":[{"nodeType":"YulAssignment","src":"39299:22:20","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"39313:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"39319:1:20","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"39309:3:20"},"nodeType":"YulFunctionCall","src":"39309:12:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"39299:6:20"}]},{"nodeType":"YulVariableDeclaration","src":"39330:38:20","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"39360:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"39366:1:20","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"39356:3:20"},"nodeType":"YulFunctionCall","src":"39356:12:20"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"39334:18:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"39407:51:20","statements":[{"nodeType":"YulAssignment","src":"39421:27:20","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"39435:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"39443:4:20","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"39431:3:20"},"nodeType":"YulFunctionCall","src":"39431:17:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"39421:6:20"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"39387:18:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"39380:6:20"},"nodeType":"YulFunctionCall","src":"39380:26:20"},"nodeType":"YulIf","src":"39377:2:20"},{"body":{"nodeType":"YulBlock","src":"39510:42:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"39524:16:20"},"nodeType":"YulFunctionCall","src":"39524:18:20"},"nodeType":"YulExpressionStatement","src":"39524:18:20"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"39474:18:20"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"39497:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"39505:2:20","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"39494:2:20"},"nodeType":"YulFunctionCall","src":"39494:14:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"39471:2:20"},"nodeType":"YulFunctionCall","src":"39471:38:20"},"nodeType":"YulIf","src":"39468:2:20"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"39273:4:20","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"39282:6:20","type":""}],"src":"39238:320:20"},{"body":{"nodeType":"YulBlock","src":"39607:238:20","statements":[{"nodeType":"YulVariableDeclaration","src":"39617:58:20","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"39639:6:20"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"39669:4:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"39647:21:20"},"nodeType":"YulFunctionCall","src":"39647:27:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39635:3:20"},"nodeType":"YulFunctionCall","src":"39635:40:20"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"39621:10:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"39786:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"39788:16:20"},"nodeType":"YulFunctionCall","src":"39788:18:20"},"nodeType":"YulExpressionStatement","src":"39788:18:20"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"39729:10:20"},{"kind":"number","nodeType":"YulLiteral","src":"39741:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"39726:2:20"},"nodeType":"YulFunctionCall","src":"39726:34:20"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"39765:10:20"},{"name":"memPtr","nodeType":"YulIdentifier","src":"39777:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"39762:2:20"},"nodeType":"YulFunctionCall","src":"39762:22:20"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"39723:2:20"},"nodeType":"YulFunctionCall","src":"39723:62:20"},"nodeType":"YulIf","src":"39720:2:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"39824:2:20","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"39828:10:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39817:6:20"},"nodeType":"YulFunctionCall","src":"39817:22:20"},"nodeType":"YulExpressionStatement","src":"39817:22:20"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"39593:6:20","type":""},{"name":"size","nodeType":"YulTypedName","src":"39601:4:20","type":""}],"src":"39564:281:20"},{"body":{"nodeType":"YulBlock","src":"39894:190:20","statements":[{"nodeType":"YulAssignment","src":"39904:33:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"39931:5:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"39913:17:20"},"nodeType":"YulFunctionCall","src":"39913:24:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"39904:5:20"}]},{"body":{"nodeType":"YulBlock","src":"40027:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"40029:16:20"},"nodeType":"YulFunctionCall","src":"40029:18:20"},"nodeType":"YulExpressionStatement","src":"40029:18:20"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"39952:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"39959:66:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"39949:2:20"},"nodeType":"YulFunctionCall","src":"39949:77:20"},"nodeType":"YulIf","src":"39946:2:20"},{"nodeType":"YulAssignment","src":"40058:20:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"40069:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"40076:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40065:3:20"},"nodeType":"YulFunctionCall","src":"40065:13:20"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"40058:3:20"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"39880:5:20","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"39890:3:20","type":""}],"src":"39851:233:20"},{"body":{"nodeType":"YulBlock","src":"40137:53:20","statements":[{"nodeType":"YulAssignment","src":"40147:37:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"40178:5:20"}],"functionName":{"name":"leftAlign_t_uint160","nodeType":"YulIdentifier","src":"40158:19:20"},"nodeType":"YulFunctionCall","src":"40158:26:20"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"40147:7:20"}]}]},"name":"leftAlign_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"40119:5:20","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"40129:7:20","type":""}],"src":"40090:100:20"},{"body":{"nodeType":"YulBlock","src":"40243:47:20","statements":[{"nodeType":"YulAssignment","src":"40253:31:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"40278:5:20"}],"functionName":{"name":"shift_left_96","nodeType":"YulIdentifier","src":"40264:13:20"},"nodeType":"YulFunctionCall","src":"40264:20:20"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"40253:7:20"}]}]},"name":"leftAlign_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"40225:5:20","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"40235:7:20","type":""}],"src":"40196:94:20"},{"body":{"nodeType":"YulBlock","src":"40343:32:20","statements":[{"nodeType":"YulAssignment","src":"40353:16:20","value":{"name":"value","nodeType":"YulIdentifier","src":"40364:5:20"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"40353:7:20"}]}]},"name":"leftAlign_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"40325:5:20","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"40335:7:20","type":""}],"src":"40296:79:20"},{"body":{"nodeType":"YulBlock","src":"40415:142:20","statements":[{"nodeType":"YulAssignment","src":"40425:25:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"40448:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"40430:17:20"},"nodeType":"YulFunctionCall","src":"40430:20:20"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"40425:1:20"}]},{"nodeType":"YulAssignment","src":"40459:25:20","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"40482:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"40464:17:20"},"nodeType":"YulFunctionCall","src":"40464:20:20"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"40459:1:20"}]},{"body":{"nodeType":"YulBlock","src":"40506:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"40508:16:20"},"nodeType":"YulFunctionCall","src":"40508:18:20"},"nodeType":"YulExpressionStatement","src":"40508:18:20"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"40503:1:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"40496:6:20"},"nodeType":"YulFunctionCall","src":"40496:9:20"},"nodeType":"YulIf","src":"40493:2:20"},{"nodeType":"YulAssignment","src":"40537:14:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"40546:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"40549:1:20"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"40542:3:20"},"nodeType":"YulFunctionCall","src":"40542:9:20"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"40537:1:20"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"40404:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"40407:1:20","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"40413:1:20","type":""}],"src":"40381:176:20"},{"body":{"nodeType":"YulBlock","src":"40591:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"40608:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"40611:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40601:6:20"},"nodeType":"YulFunctionCall","src":"40601:88:20"},"nodeType":"YulExpressionStatement","src":"40601:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"40705:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"40708:4:20","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40698:6:20"},"nodeType":"YulFunctionCall","src":"40698:15:20"},"nodeType":"YulExpressionStatement","src":"40698:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"40729:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"40732:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"40722:6:20"},"nodeType":"YulFunctionCall","src":"40722:15:20"},"nodeType":"YulExpressionStatement","src":"40722:15:20"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"40563:180:20"},{"body":{"nodeType":"YulBlock","src":"40777:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"40794:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"40797:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40787:6:20"},"nodeType":"YulFunctionCall","src":"40787:88:20"},"nodeType":"YulExpressionStatement","src":"40787:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"40891:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"40894:4:20","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40884:6:20"},"nodeType":"YulFunctionCall","src":"40884:15:20"},"nodeType":"YulExpressionStatement","src":"40884:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"40915:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"40918:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"40908:6:20"},"nodeType":"YulFunctionCall","src":"40908:15:20"},"nodeType":"YulExpressionStatement","src":"40908:15:20"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"40749:180:20"},{"body":{"nodeType":"YulBlock","src":"40963:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"40980:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"40983:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40973:6:20"},"nodeType":"YulFunctionCall","src":"40973:88:20"},"nodeType":"YulExpressionStatement","src":"40973:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"41077:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"41080:4:20","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41070:6:20"},"nodeType":"YulFunctionCall","src":"41070:15:20"},"nodeType":"YulExpressionStatement","src":"41070:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"41101:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"41104:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"41094:6:20"},"nodeType":"YulFunctionCall","src":"41094:15:20"},"nodeType":"YulExpressionStatement","src":"41094:15:20"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"40935:180:20"},{"body":{"nodeType":"YulBlock","src":"41149:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"41166:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"41169:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41159:6:20"},"nodeType":"YulFunctionCall","src":"41159:88:20"},"nodeType":"YulExpressionStatement","src":"41159:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"41263:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"41266:4:20","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41256:6:20"},"nodeType":"YulFunctionCall","src":"41256:15:20"},"nodeType":"YulExpressionStatement","src":"41256:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"41287:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"41290:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"41280:6:20"},"nodeType":"YulFunctionCall","src":"41280:15:20"},"nodeType":"YulExpressionStatement","src":"41280:15:20"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"41121:180:20"},{"body":{"nodeType":"YulBlock","src":"41335:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"41352:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"41355:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41345:6:20"},"nodeType":"YulFunctionCall","src":"41345:88:20"},"nodeType":"YulExpressionStatement","src":"41345:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"41449:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"41452:4:20","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41442:6:20"},"nodeType":"YulFunctionCall","src":"41442:15:20"},"nodeType":"YulExpressionStatement","src":"41442:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"41473:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"41476:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"41466:6:20"},"nodeType":"YulFunctionCall","src":"41466:15:20"},"nodeType":"YulExpressionStatement","src":"41466:15:20"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"41307:180:20"},{"body":{"nodeType":"YulBlock","src":"41521:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"41538:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"41541:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41531:6:20"},"nodeType":"YulFunctionCall","src":"41531:88:20"},"nodeType":"YulExpressionStatement","src":"41531:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"41635:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"41638:4:20","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41628:6:20"},"nodeType":"YulFunctionCall","src":"41628:15:20"},"nodeType":"YulExpressionStatement","src":"41628:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"41659:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"41662:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"41652:6:20"},"nodeType":"YulFunctionCall","src":"41652:15:20"},"nodeType":"YulExpressionStatement","src":"41652:15:20"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"41493:180:20"},{"body":{"nodeType":"YulBlock","src":"41768:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"41785:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"41788:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"41778:6:20"},"nodeType":"YulFunctionCall","src":"41778:12:20"},"nodeType":"YulExpressionStatement","src":"41778:12:20"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"41679:117:20"},{"body":{"nodeType":"YulBlock","src":"41891:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"41908:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"41911:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"41901:6:20"},"nodeType":"YulFunctionCall","src":"41901:12:20"},"nodeType":"YulExpressionStatement","src":"41901:12:20"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"41802:117:20"},{"body":{"nodeType":"YulBlock","src":"42014:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"42031:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"42034:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"42024:6:20"},"nodeType":"YulFunctionCall","src":"42024:12:20"},"nodeType":"YulExpressionStatement","src":"42024:12:20"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"41925:117:20"},{"body":{"nodeType":"YulBlock","src":"42137:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"42154:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"42157:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"42147:6:20"},"nodeType":"YulFunctionCall","src":"42147:12:20"},"nodeType":"YulExpressionStatement","src":"42147:12:20"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"42048:117:20"},{"body":{"nodeType":"YulBlock","src":"42260:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"42277:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"42280:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"42270:6:20"},"nodeType":"YulFunctionCall","src":"42270:12:20"},"nodeType":"YulExpressionStatement","src":"42270:12:20"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"42171:117:20"},{"body":{"nodeType":"YulBlock","src":"42383:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"42400:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"42403:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"42393:6:20"},"nodeType":"YulFunctionCall","src":"42393:12:20"},"nodeType":"YulExpressionStatement","src":"42393:12:20"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"42294:117:20"},{"body":{"nodeType":"YulBlock","src":"42465:54:20","statements":[{"nodeType":"YulAssignment","src":"42475:38:20","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"42493:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"42500:2:20","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42489:3:20"},"nodeType":"YulFunctionCall","src":"42489:14:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"42509:2:20","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"42505:3:20"},"nodeType":"YulFunctionCall","src":"42505:7:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"42485:3:20"},"nodeType":"YulFunctionCall","src":"42485:28:20"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"42475:6:20"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"42448:5:20","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"42458:6:20","type":""}],"src":"42417:102:20"},{"body":{"nodeType":"YulBlock","src":"42567:52:20","statements":[{"nodeType":"YulAssignment","src":"42577:35:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"42602:2:20","type":"","value":"96"},{"name":"value","nodeType":"YulIdentifier","src":"42606:5:20"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"42598:3:20"},"nodeType":"YulFunctionCall","src":"42598:14:20"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"42577:8:20"}]}]},"name":"shift_left_96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"42548:5:20","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"42558:8:20","type":""}],"src":"42525:94:20"},{"body":{"nodeType":"YulBlock","src":"42676:51:20","statements":[{"nodeType":"YulAssignment","src":"42686:34:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"42711:1:20","type":"","value":"1"},{"name":"value","nodeType":"YulIdentifier","src":"42714:5:20"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"42707:3:20"},"nodeType":"YulFunctionCall","src":"42707:13:20"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"42686:8:20"}]}]},"name":"shift_right_1_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"42657:5:20","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"42667:8:20","type":""}],"src":"42625:102:20"},{"body":{"nodeType":"YulBlock","src":"42839:62:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"42861:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"42869:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42857:3:20"},"nodeType":"YulFunctionCall","src":"42857:14:20"},{"hexValue":"43616d706169676e20697320636c6f736564","kind":"string","nodeType":"YulLiteral","src":"42873:20:20","type":"","value":"Campaign is closed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42850:6:20"},"nodeType":"YulFunctionCall","src":"42850:44:20"},"nodeType":"YulExpressionStatement","src":"42850:44:20"}]},"name":"store_literal_in_memory_1f5a2f62658d6a797c6aa77f3644d453326e014c355d91d89127b18e16c407ef","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"42831:6:20","type":""}],"src":"42733:168:20"},{"body":{"nodeType":"YulBlock","src":"43013:127:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"43035:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"43043:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43031:3:20"},"nodeType":"YulFunctionCall","src":"43031:14:20"},{"hexValue":"43616c6c6572206973206e6f7420612076616c6964617465642063616d706169","kind":"string","nodeType":"YulLiteral","src":"43047:34:20","type":"","value":"Caller is not a validated campai"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43024:6:20"},"nodeType":"YulFunctionCall","src":"43024:58:20"},"nodeType":"YulExpressionStatement","src":"43024:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"43103:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"43111:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43099:3:20"},"nodeType":"YulFunctionCall","src":"43099:15:20"},{"hexValue":"676e20636f6e7472696275746f72","kind":"string","nodeType":"YulLiteral","src":"43116:16:20","type":"","value":"gn contributor"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43092:6:20"},"nodeType":"YulFunctionCall","src":"43092:41:20"},"nodeType":"YulExpressionStatement","src":"43092:41:20"}]},"name":"store_literal_in_memory_2254f56cac9b925e5567d5317d5f1fa4cb1cef32c5f259415ee5e2f68ac31e6b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"43005:6:20","type":""}],"src":"42907:233:20"},{"body":{"nodeType":"YulBlock","src":"43252:119:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"43274:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"43282:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43270:3:20"},"nodeType":"YulFunctionCall","src":"43270:14:20"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"43286:34:20","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43263:6:20"},"nodeType":"YulFunctionCall","src":"43263:58:20"},"nodeType":"YulExpressionStatement","src":"43263:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"43342:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"43350:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43338:3:20"},"nodeType":"YulFunctionCall","src":"43338:15:20"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"43355:8:20","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43331:6:20"},"nodeType":"YulFunctionCall","src":"43331:33:20"},"nodeType":"YulExpressionStatement","src":"43331:33:20"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"43244:6:20","type":""}],"src":"43146:225:20"},{"body":{"nodeType":"YulBlock","src":"43483:116:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"43505:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"43513:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43501:3:20"},"nodeType":"YulFunctionCall","src":"43501:14:20"},{"hexValue":"756e61626c6520746f207472616e73666572416e6443616c6c20746f206f7261","kind":"string","nodeType":"YulLiteral","src":"43517:34:20","type":"","value":"unable to transferAndCall to ora"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43494:6:20"},"nodeType":"YulFunctionCall","src":"43494:58:20"},"nodeType":"YulExpressionStatement","src":"43494:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"43573:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"43581:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43569:3:20"},"nodeType":"YulFunctionCall","src":"43569:15:20"},{"hexValue":"636c65","kind":"string","nodeType":"YulLiteral","src":"43586:5:20","type":"","value":"cle"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43562:6:20"},"nodeType":"YulFunctionCall","src":"43562:30:20"},"nodeType":"YulExpressionStatement","src":"43562:30:20"}]},"name":"store_literal_in_memory_3b3efd608222b424e5ed8427d7f6a272069793e6a1f5930c93db5c7960c3ce96","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"43475:6:20","type":""}],"src":"43377:222:20"},{"body":{"nodeType":"YulBlock","src":"43711:51:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"43733:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"43741:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43729:3:20"},"nodeType":"YulFunctionCall","src":"43729:14:20"},{"hexValue":"2f75736572732f","kind":"string","nodeType":"YulLiteral","src":"43745:9:20","type":"","value":"/users/"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43722:6:20"},"nodeType":"YulFunctionCall","src":"43722:33:20"},"nodeType":"YulExpressionStatement","src":"43722:33:20"}]},"name":"store_literal_in_memory_4be9d97bdca36db909fee5364c11951f6518ef5896e8fb5c1e00fce6d29b39da","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"43703:6:20","type":""}],"src":"43605:157:20"},{"body":{"nodeType":"YulBlock","src":"43874:60:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"43896:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"43904:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43892:3:20"},"nodeType":"YulFunctionCall","src":"43892:14:20"},{"hexValue":"5061757361626c653a20706175736564","kind":"string","nodeType":"YulLiteral","src":"43908:18:20","type":"","value":"Pausable: paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43885:6:20"},"nodeType":"YulFunctionCall","src":"43885:42:20"},"nodeType":"YulExpressionStatement","src":"43885:42:20"}]},"name":"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"43866:6:20","type":""}],"src":"43768:166:20"},{"body":{"nodeType":"YulBlock","src":"44046:62:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"44068:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"44076:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44064:3:20"},"nodeType":"YulFunctionCall","src":"44064:14:20"},{"hexValue":"556e61626c6520746f207472616e73666572","kind":"string","nodeType":"YulLiteral","src":"44080:20:20","type":"","value":"Unable to transfer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44057:6:20"},"nodeType":"YulFunctionCall","src":"44057:44:20"},"nodeType":"YulExpressionStatement","src":"44057:44:20"}]},"name":"store_literal_in_memory_8e1f7009e5aca473fdde21442dae29568050b67581f4b146dca8997db684dff1","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"44038:6:20","type":""}],"src":"43940:168:20"},{"body":{"nodeType":"YulBlock","src":"44220:76:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"44242:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"44250:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44238:3:20"},"nodeType":"YulFunctionCall","src":"44238:14:20"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"44254:34:20","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44231:6:20"},"nodeType":"YulFunctionCall","src":"44231:58:20"},"nodeType":"YulExpressionStatement","src":"44231:58:20"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"44212:6:20","type":""}],"src":"44114:182:20"},{"body":{"nodeType":"YulBlock","src":"44408:67:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"44430:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"44438:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44426:3:20"},"nodeType":"YulFunctionCall","src":"44426:14:20"},{"hexValue":"43616c6c6572206973206e6f74207468652061646d696e","kind":"string","nodeType":"YulLiteral","src":"44442:25:20","type":"","value":"Caller is not the admin"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44419:6:20"},"nodeType":"YulFunctionCall","src":"44419:49:20"},"nodeType":"YulExpressionStatement","src":"44419:49:20"}]},"name":"store_literal_in_memory_aa8ec5d8fae9f4324168b2ce12ce357d4c8138c22ffca90f21d943a8359ed9fe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"44400:6:20","type":""}],"src":"44302:173:20"},{"body":{"nodeType":"YulBlock","src":"44587:76:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"44609:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"44617:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44605:3:20"},"nodeType":"YulFunctionCall","src":"44605:14:20"},{"hexValue":"43616c6c6572206973206e6f74207468652063616d706169676e206f776e6572","kind":"string","nodeType":"YulLiteral","src":"44621:34:20","type":"","value":"Caller is not the campaign owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44598:6:20"},"nodeType":"YulFunctionCall","src":"44598:58:20"},"nodeType":"YulExpressionStatement","src":"44598:58:20"}]},"name":"store_literal_in_memory_ae094217ca8267b1aa5ddfc23784056f71662e2c3ecbe8a78d373fd86d4eaae0","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"44579:6:20","type":""}],"src":"44481:182:20"},{"body":{"nodeType":"YulBlock","src":"44775:71:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"44797:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"44805:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44793:3:20"},"nodeType":"YulFunctionCall","src":"44793:14:20"},{"hexValue":"5265747269627574696f6e20616c726561647920636c61696d6564","kind":"string","nodeType":"YulLiteral","src":"44809:29:20","type":"","value":"Retribution already claimed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44786:6:20"},"nodeType":"YulFunctionCall","src":"44786:53:20"},"nodeType":"YulExpressionStatement","src":"44786:53:20"}]},"name":"store_literal_in_memory_b4b84ebe3de827a4087f895b834b5993eef1b5aca3e2419eeecfbb4534ceb6c3","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"44767:6:20","type":""}],"src":"44669:177:20"},{"body":{"nodeType":"YulBlock","src":"44958:143:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"44980:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"44988:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44976:3:20"},"nodeType":"YulFunctionCall","src":"44976:14:20"},{"hexValue":"5468697320636f6e747269627574696f6e20646f6573206e6f74207361746973","kind":"string","nodeType":"YulLiteral","src":"44992:34:20","type":"","value":"This contribution does not satis"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44969:6:20"},"nodeType":"YulFunctionCall","src":"44969:58:20"},"nodeType":"YulExpressionStatement","src":"44969:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"45048:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"45056:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45044:3:20"},"nodeType":"YulFunctionCall","src":"45044:15:20"},{"hexValue":"6679207468652063616d706169676e277320726571756972656d656e7473","kind":"string","nodeType":"YulLiteral","src":"45061:32:20","type":"","value":"fy the campaign's requirements"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45037:6:20"},"nodeType":"YulFunctionCall","src":"45037:57:20"},"nodeType":"YulExpressionStatement","src":"45037:57:20"}]},"name":"store_literal_in_memory_c2f50fde43b6cd00923414ed2254557266b44b46c98097d2bbc05bc171375af6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"44950:6:20","type":""}],"src":"44852:249:20"},{"body":{"nodeType":"YulBlock","src":"45213:54:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"45235:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"45243:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45231:3:20"},"nodeType":"YulFunctionCall","src":"45231:14:20"},{"hexValue":"2f74776974746572732f","kind":"string","nodeType":"YulLiteral","src":"45247:12:20","type":"","value":"/twitters/"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45224:6:20"},"nodeType":"YulFunctionCall","src":"45224:36:20"},"nodeType":"YulExpressionStatement","src":"45224:36:20"}]},"name":"store_literal_in_memory_d236356f527fa222b87a926997fc1f57d7b3c06dcab0ec8b5ababcc1f490e6c6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"45205:6:20","type":""}],"src":"45107:160:20"},{"body":{"nodeType":"YulBlock","src":"45379:74:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"45401:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"45409:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45397:3:20"},"nodeType":"YulFunctionCall","src":"45397:14:20"},{"hexValue":"456e756d657261626c654d61703a206e6f6e6578697374656e74206b6579","kind":"string","nodeType":"YulLiteral","src":"45413:32:20","type":"","value":"EnumerableMap: nonexistent key"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45390:6:20"},"nodeType":"YulFunctionCall","src":"45390:56:20"},"nodeType":"YulExpressionStatement","src":"45390:56:20"}]},"name":"store_literal_in_memory_d3551e30d3095fd81287b88f7139bb09818e34280e85ee821994ebaebbed7072","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"45371:6:20","type":""}],"src":"45273:180:20"},{"body":{"nodeType":"YulBlock","src":"45565:121:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"45587:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"45595:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45583:3:20"},"nodeType":"YulFunctionCall","src":"45583:14:20"},{"hexValue":"536f75726365206d75737420626520746865206f7261636c65206f6620746865","kind":"string","nodeType":"YulLiteral","src":"45599:34:20","type":"","value":"Source must be the oracle of the"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45576:6:20"},"nodeType":"YulFunctionCall","src":"45576:58:20"},"nodeType":"YulExpressionStatement","src":"45576:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"45655:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"45663:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45651:3:20"},"nodeType":"YulFunctionCall","src":"45651:15:20"},{"hexValue":"2072657175657374","kind":"string","nodeType":"YulLiteral","src":"45668:10:20","type":"","value":" request"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45644:6:20"},"nodeType":"YulFunctionCall","src":"45644:35:20"},"nodeType":"YulExpressionStatement","src":"45644:35:20"}]},"name":"store_literal_in_memory_d5cafe2745dab6273b51cca76f8727c7664db74ede49af049a5b5ca6a3b184e4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"45557:6:20","type":""}],"src":"45459:227:20"},{"body":{"nodeType":"YulBlock","src":"45798:52:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"45820:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"45828:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45816:3:20"},"nodeType":"YulFunctionCall","src":"45816:14:20"},{"hexValue":"2f636861696e732f","kind":"string","nodeType":"YulLiteral","src":"45832:10:20","type":"","value":"/chains/"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45809:6:20"},"nodeType":"YulFunctionCall","src":"45809:34:20"},"nodeType":"YulExpressionStatement","src":"45809:34:20"}]},"name":"store_literal_in_memory_e5b64fb870214178f776923098f80ee63b1955f85cb0bb444948ce3811079999","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"45790:6:20","type":""}],"src":"45692:158:20"},{"body":{"nodeType":"YulBlock","src":"45962:115:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"45984:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"45992:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45980:3:20"},"nodeType":"YulFunctionCall","src":"45980:14:20"},{"hexValue":"436f6e7472696275746f7273206c696d697420616c7265616479207265616368","kind":"string","nodeType":"YulLiteral","src":"45996:34:20","type":"","value":"Contributors limit already reach"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45973:6:20"},"nodeType":"YulFunctionCall","src":"45973:58:20"},"nodeType":"YulExpressionStatement","src":"45973:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"46052:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"46060:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46048:3:20"},"nodeType":"YulFunctionCall","src":"46048:15:20"},{"hexValue":"6564","kind":"string","nodeType":"YulLiteral","src":"46065:4:20","type":"","value":"ed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46041:6:20"},"nodeType":"YulFunctionCall","src":"46041:29:20"},"nodeType":"YulExpressionStatement","src":"46041:29:20"}]},"name":"store_literal_in_memory_f41b38bb6792dd2d923f031bfb556202e92815c3f2ff36e44de6f82c3da0b8b1","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"45954:6:20","type":""}],"src":"45856:221:20"},{"body":{"nodeType":"YulBlock","src":"46189:52:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"46211:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"46219:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46207:3:20"},"nodeType":"YulFunctionCall","src":"46207:14:20"},{"hexValue":"2f77696e6e657273","kind":"string","nodeType":"YulLiteral","src":"46223:10:20","type":"","value":"/winners"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46200:6:20"},"nodeType":"YulFunctionCall","src":"46200:34:20"},"nodeType":"YulExpressionStatement","src":"46200:34:20"}]},"name":"store_literal_in_memory_ff0857fd342fd731a7c8d6dc5fe2a580363be68de125dbf9a650ceb34ce564ac","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"46181:6:20","type":""}],"src":"46083:158:20"},{"body":{"nodeType":"YulBlock","src":"46290:79:20","statements":[{"body":{"nodeType":"YulBlock","src":"46347:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"46356:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"46359:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"46349:6:20"},"nodeType":"YulFunctionCall","src":"46349:12:20"},"nodeType":"YulExpressionStatement","src":"46349:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"46313:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"46338:5:20"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"46320:17:20"},"nodeType":"YulFunctionCall","src":"46320:24:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"46310:2:20"},"nodeType":"YulFunctionCall","src":"46310:35:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"46303:6:20"},"nodeType":"YulFunctionCall","src":"46303:43:20"},"nodeType":"YulIf","src":"46300:2:20"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"46283:5:20","type":""}],"src":"46247:122:20"},{"body":{"nodeType":"YulBlock","src":"46415:76:20","statements":[{"body":{"nodeType":"YulBlock","src":"46469:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"46478:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"46481:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"46471:6:20"},"nodeType":"YulFunctionCall","src":"46471:12:20"},"nodeType":"YulExpressionStatement","src":"46471:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"46438:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"46460:5:20"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"46445:14:20"},"nodeType":"YulFunctionCall","src":"46445:21:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"46435:2:20"},"nodeType":"YulFunctionCall","src":"46435:32:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"46428:6:20"},"nodeType":"YulFunctionCall","src":"46428:40:20"},"nodeType":"YulIf","src":"46425:2:20"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"46408:5:20","type":""}],"src":"46375:116:20"},{"body":{"nodeType":"YulBlock","src":"46540:79:20","statements":[{"body":{"nodeType":"YulBlock","src":"46597:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"46606:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"46609:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"46599:6:20"},"nodeType":"YulFunctionCall","src":"46599:12:20"},"nodeType":"YulExpressionStatement","src":"46599:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"46563:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"46588:5:20"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"46570:17:20"},"nodeType":"YulFunctionCall","src":"46570:24:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"46560:2:20"},"nodeType":"YulFunctionCall","src":"46560:35:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"46553:6:20"},"nodeType":"YulFunctionCall","src":"46553:43:20"},"nodeType":"YulIf","src":"46550:2:20"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"46533:5:20","type":""}],"src":"46497:122:20"},{"body":{"nodeType":"YulBlock","src":"46667:78:20","statements":[{"body":{"nodeType":"YulBlock","src":"46723:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"46732:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"46735:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"46725:6:20"},"nodeType":"YulFunctionCall","src":"46725:12:20"},"nodeType":"YulExpressionStatement","src":"46725:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"46690:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"46714:5:20"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"46697:16:20"},"nodeType":"YulFunctionCall","src":"46697:23:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"46687:2:20"},"nodeType":"YulFunctionCall","src":"46687:34:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"46680:6:20"},"nodeType":"YulFunctionCall","src":"46680:42:20"},"nodeType":"YulIf","src":"46677:2:20"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"46660:5:20","type":""}],"src":"46625:120:20"},{"body":{"nodeType":"YulBlock","src":"46794:79:20","statements":[{"body":{"nodeType":"YulBlock","src":"46851:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"46860:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"46863:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"46853:6:20"},"nodeType":"YulFunctionCall","src":"46853:12:20"},"nodeType":"YulExpressionStatement","src":"46853:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"46817:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"46842:5:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"46824:17:20"},"nodeType":"YulFunctionCall","src":"46824:24:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"46814:2:20"},"nodeType":"YulFunctionCall","src":"46814:35:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"46807:6:20"},"nodeType":"YulFunctionCall","src":"46807:43:20"},"nodeType":"YulIf","src":"46804:2:20"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"46787:5:20","type":""}],"src":"46751:122:20"}]},"contents":"{\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    // string\n    function abi_decode_t_string_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_uint256t_bytes4t_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_calldata_ptrt_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_contract$_ChainlinkClient_$861_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(convert_t_contract$_ChainlinkClient_$861_to_t_address(value)))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    // string -> string\n    function abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, length)\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_string_storage(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, length)\n        }\n    }\n\n    function abi_encode_t_stringliteral_1f5a2f62658d6a797c6aa77f3644d453326e014c355d91d89127b18e16c407ef_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_1f5a2f62658d6a797c6aa77f3644d453326e014c355d91d89127b18e16c407ef(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_2254f56cac9b925e5567d5317d5f1fa4cb1cef32c5f259415ee5e2f68ac31e6b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_2254f56cac9b925e5567d5317d5f1fa4cb1cef32c5f259415ee5e2f68ac31e6b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_3b3efd608222b424e5ed8427d7f6a272069793e6a1f5930c93db5c7960c3ce96_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_3b3efd608222b424e5ed8427d7f6a272069793e6a1f5930c93db5c7960c3ce96(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_4be9d97bdca36db909fee5364c11951f6518ef5896e8fb5c1e00fce6d29b39da_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 7)\n        store_literal_in_memory_4be9d97bdca36db909fee5364c11951f6518ef5896e8fb5c1e00fce6d29b39da(pos)\n        end := add(pos, 7)\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_8e1f7009e5aca473fdde21442dae29568050b67581f4b146dca8997db684dff1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_8e1f7009e5aca473fdde21442dae29568050b67581f4b146dca8997db684dff1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_aa8ec5d8fae9f4324168b2ce12ce357d4c8138c22ffca90f21d943a8359ed9fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_aa8ec5d8fae9f4324168b2ce12ce357d4c8138c22ffca90f21d943a8359ed9fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_ae094217ca8267b1aa5ddfc23784056f71662e2c3ecbe8a78d373fd86d4eaae0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_ae094217ca8267b1aa5ddfc23784056f71662e2c3ecbe8a78d373fd86d4eaae0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_b4b84ebe3de827a4087f895b834b5993eef1b5aca3e2419eeecfbb4534ceb6c3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_b4b84ebe3de827a4087f895b834b5993eef1b5aca3e2419eeecfbb4534ceb6c3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_c2f50fde43b6cd00923414ed2254557266b44b46c98097d2bbc05bc171375af6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 62)\n        store_literal_in_memory_c2f50fde43b6cd00923414ed2254557266b44b46c98097d2bbc05bc171375af6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_d236356f527fa222b87a926997fc1f57d7b3c06dcab0ec8b5ababcc1f490e6c6_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 10)\n        store_literal_in_memory_d236356f527fa222b87a926997fc1f57d7b3c06dcab0ec8b5ababcc1f490e6c6(pos)\n        end := add(pos, 10)\n    }\n\n    function abi_encode_t_stringliteral_d3551e30d3095fd81287b88f7139bb09818e34280e85ee821994ebaebbed7072_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_d3551e30d3095fd81287b88f7139bb09818e34280e85ee821994ebaebbed7072(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_d5cafe2745dab6273b51cca76f8727c7664db74ede49af049a5b5ca6a3b184e4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_d5cafe2745dab6273b51cca76f8727c7664db74ede49af049a5b5ca6a3b184e4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_e5b64fb870214178f776923098f80ee63b1955f85cb0bb444948ce3811079999_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 8)\n        store_literal_in_memory_e5b64fb870214178f776923098f80ee63b1955f85cb0bb444948ce3811079999(pos)\n        end := add(pos, 8)\n    }\n\n    function abi_encode_t_stringliteral_f41b38bb6792dd2d923f031bfb556202e92815c3f2ff36e44de6f82c3da0b8b1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_f41b38bb6792dd2d923f031bfb556202e92815c3f2ff36e44de6f82c3da0b8b1(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_ff0857fd342fd731a7c8d6dc5fe2a580363be68de125dbf9a650ceb34ce564ac_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 8)\n        store_literal_in_memory_ff0857fd342fd731a7c8d6dc5fe2a580363be68de125dbf9a650ceb34ce564ac(pos)\n        end := add(pos, 8)\n    }\n\n    // struct TwitterV1.Campaign -> struct TwitterV1.Campaign\n    function abi_encode_t_struct$_Campaign_$2232_memory_ptr_to_t_struct$_Campaign_$2232_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0xe0)\n\n        {\n            // campaignId\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // name\n\n            let memberValue0 := mload(add(value, 0x20))\n\n            mstore(add(pos, 0x20), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // company\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // budget\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // validationThreshold\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // partakersLimit\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // isClosed\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0xc0))\n        }\n\n        end := tail\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function abi_encode_tuple_packed_t_contract$_ChainlinkClient_$861_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        abi_encode_t_contract$_ChainlinkClient_$861_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_packed_t_string_storage_t_stringliteral_4be9d97bdca36db909fee5364c11951f6518ef5896e8fb5c1e00fce6d29b39da_t_uint256__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_4be9d97bdca36db909fee5364c11951f6518ef5896e8fb5c1e00fce6d29b39da_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_packed_t_string_storage_t_stringliteral_e5b64fb870214178f776923098f80ee63b1955f85cb0bb444948ce3811079999_t_uint256_t_stringliteral_d236356f527fa222b87a926997fc1f57d7b3c06dcab0ec8b5ababcc1f490e6c6_t_uint256_t_stringliteral_ff0857fd342fd731a7c8d6dc5fe2a580363be68de125dbf9a650ceb34ce564ac__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_string_memory_ptr_t_uint256_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value2, value1, value0) -> end {\n\n        pos := abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_e5b64fb870214178f776923098f80ee63b1955f85cb0bb444948ce3811079999_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        pos := abi_encode_t_stringliteral_d236356f527fa222b87a926997fc1f57d7b3c06dcab0ec8b5ababcc1f490e6c6_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value2,  pos)\n        pos := add(pos, 32)\n\n        pos := abi_encode_t_stringliteral_ff0857fd342fd731a7c8d6dc5fe2a580363be68de125dbf9a650ceb34ce564ac_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_bytes32_t_address_t_bytes4_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_uint256_t_bytes32_t_address_t_bytes4_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n        mstore(add(headStart, 224), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value7,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint256_t_bytes4_t_uint256__to_t_bytes32_t_uint256_t_bytes4_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1f5a2f62658d6a797c6aa77f3644d453326e014c355d91d89127b18e16c407ef__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1f5a2f62658d6a797c6aa77f3644d453326e014c355d91d89127b18e16c407ef_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_2254f56cac9b925e5567d5317d5f1fa4cb1cef32c5f259415ee5e2f68ac31e6b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2254f56cac9b925e5567d5317d5f1fa4cb1cef32c5f259415ee5e2f68ac31e6b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b3efd608222b424e5ed8427d7f6a272069793e6a1f5930c93db5c7960c3ce96__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b3efd608222b424e5ed8427d7f6a272069793e6a1f5930c93db5c7960c3ce96_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_8e1f7009e5aca473fdde21442dae29568050b67581f4b146dca8997db684dff1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8e1f7009e5aca473fdde21442dae29568050b67581f4b146dca8997db684dff1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_aa8ec5d8fae9f4324168b2ce12ce357d4c8138c22ffca90f21d943a8359ed9fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_aa8ec5d8fae9f4324168b2ce12ce357d4c8138c22ffca90f21d943a8359ed9fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ae094217ca8267b1aa5ddfc23784056f71662e2c3ecbe8a78d373fd86d4eaae0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ae094217ca8267b1aa5ddfc23784056f71662e2c3ecbe8a78d373fd86d4eaae0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b4b84ebe3de827a4087f895b834b5993eef1b5aca3e2419eeecfbb4534ceb6c3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b4b84ebe3de827a4087f895b834b5993eef1b5aca3e2419eeecfbb4534ceb6c3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c2f50fde43b6cd00923414ed2254557266b44b46c98097d2bbc05bc171375af6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c2f50fde43b6cd00923414ed2254557266b44b46c98097d2bbc05bc171375af6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3551e30d3095fd81287b88f7139bb09818e34280e85ee821994ebaebbed7072__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3551e30d3095fd81287b88f7139bb09818e34280e85ee821994ebaebbed7072_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d5cafe2745dab6273b51cca76f8727c7664db74ede49af049a5b5ca6a3b184e4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d5cafe2745dab6273b51cca76f8727c7664db74ede49af049a5b5ca6a3b184e4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f41b38bb6792dd2d923f031bfb556202e92815c3f2ff36e44de6f82c3da0b8b1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f41b38bb6792dd2d923f031bfb556202e92815c3f2ff36e44de6f82c3da0b8b1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_struct$_Campaign_$2232_memory_ptr__to_t_struct$_Campaign_$2232_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_Campaign_$2232_memory_ptr_to_t_struct$_Campaign_$2232_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_ChainlinkClient_$861_to_t_address(value) -> converted {\n        converted := convert_t_contract$_ChainlinkClient_$861_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ChainlinkClient_$861_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function store_literal_in_memory_1f5a2f62658d6a797c6aa77f3644d453326e014c355d91d89127b18e16c407ef(memPtr) {\n\n        mstore(add(memPtr, 0), \"Campaign is closed\")\n\n    }\n\n    function store_literal_in_memory_2254f56cac9b925e5567d5317d5f1fa4cb1cef32c5f259415ee5e2f68ac31e6b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Caller is not a validated campai\")\n\n        mstore(add(memPtr, 32), \"gn contributor\")\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_3b3efd608222b424e5ed8427d7f6a272069793e6a1f5930c93db5c7960c3ce96(memPtr) {\n\n        mstore(add(memPtr, 0), \"unable to transferAndCall to ora\")\n\n        mstore(add(memPtr, 32), \"cle\")\n\n    }\n\n    function store_literal_in_memory_4be9d97bdca36db909fee5364c11951f6518ef5896e8fb5c1e00fce6d29b39da(memPtr) {\n\n        mstore(add(memPtr, 0), \"/users/\")\n\n    }\n\n    function store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: paused\")\n\n    }\n\n    function store_literal_in_memory_8e1f7009e5aca473fdde21442dae29568050b67581f4b146dca8997db684dff1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Unable to transfer\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_aa8ec5d8fae9f4324168b2ce12ce357d4c8138c22ffca90f21d943a8359ed9fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Caller is not the admin\")\n\n    }\n\n    function store_literal_in_memory_ae094217ca8267b1aa5ddfc23784056f71662e2c3ecbe8a78d373fd86d4eaae0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Caller is not the campaign owner\")\n\n    }\n\n    function store_literal_in_memory_b4b84ebe3de827a4087f895b834b5993eef1b5aca3e2419eeecfbb4534ceb6c3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Retribution already claimed\")\n\n    }\n\n    function store_literal_in_memory_c2f50fde43b6cd00923414ed2254557266b44b46c98097d2bbc05bc171375af6(memPtr) {\n\n        mstore(add(memPtr, 0), \"This contribution does not satis\")\n\n        mstore(add(memPtr, 32), \"fy the campaign's requirements\")\n\n    }\n\n    function store_literal_in_memory_d236356f527fa222b87a926997fc1f57d7b3c06dcab0ec8b5ababcc1f490e6c6(memPtr) {\n\n        mstore(add(memPtr, 0), \"/twitters/\")\n\n    }\n\n    function store_literal_in_memory_d3551e30d3095fd81287b88f7139bb09818e34280e85ee821994ebaebbed7072(memPtr) {\n\n        mstore(add(memPtr, 0), \"EnumerableMap: nonexistent key\")\n\n    }\n\n    function store_literal_in_memory_d5cafe2745dab6273b51cca76f8727c7664db74ede49af049a5b5ca6a3b184e4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Source must be the oracle of the\")\n\n        mstore(add(memPtr, 32), \" request\")\n\n    }\n\n    function store_literal_in_memory_e5b64fb870214178f776923098f80ee63b1955f85cb0bb444948ce3811079999(memPtr) {\n\n        mstore(add(memPtr, 0), \"/chains/\")\n\n    }\n\n    function store_literal_in_memory_f41b38bb6792dd2d923f031bfb556202e92815c3f2ff36e44de6f82c3da0b8b1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Contributors limit already reach\")\n\n        mstore(add(memPtr, 32), \"ed\")\n\n    }\n\n    function store_literal_in_memory_ff0857fd342fd731a7c8d6dc5fe2a580363be68de125dbf9a650ceb34ce564ac(memPtr) {\n\n        mstore(add(memPtr, 0), \"/winners\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":20,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"2208":[{"length":32,"start":4438},{"length":32,"start":5399}],"2210":[{"length":32,"start":5663}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x173 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA9654AD4 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xC2939D97 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xEC65D0F8 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xEC65D0F8 EQ PUSH2 0x400 JUMPI DUP1 PUSH4 0xEC8F04E9 EQ PUSH2 0x41C JUMPI DUP1 PUSH4 0xF2B3C809 EQ PUSH2 0x438 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x456 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0xC2939D97 EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0xCC32D176 EQ PUSH2 0x3C4 JUMPI DUP1 PUSH4 0xDC4D5EFB EQ PUSH2 0x3E2 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0xA9654AD4 EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xAA2BDEF9 EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0xACED1661 EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0xB0E1C1E1 EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0xB1D3C700 EQ PUSH2 0x36E JUMPI DUP1 PUSH4 0xB5A898AE EQ PUSH2 0x38A JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x5C975ABB GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x5EC4BC38 EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x8DC654A2 EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0xA4E336C3 EQ PUSH2 0x2B8 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0xA944292 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x1FC645C7 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x368ACB09 EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x4A732795 EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x5598F8CC EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x58D9FA04 EQ PUSH2 0x22E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x2C1B JUMP JUMPDEST PUSH2 0x472 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x3441 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0x2C1B JUMP JUMPDEST PUSH2 0x4A0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CC PUSH2 0x4FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x3645 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0x2C1B JUMP JUMPDEST PUSH2 0x502 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x218 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x2C1B JUMP JUMPDEST PUSH2 0x6E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x225 SWAP2 SWAP1 PUSH2 0x3623 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x248 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x243 SWAP2 SWAP1 PUSH2 0x2C75 JUMP JUMPDEST PUSH2 0x82E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x252 PUSH2 0x8D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x33C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x270 PUSH2 0x8ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27D SWAP2 SWAP1 PUSH2 0x33C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28E PUSH2 0x96F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x298 PUSH2 0x9F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x32BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B6 PUSH2 0xA20 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0x2A8C JUMP JUMPDEST PUSH2 0xBFF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x2C1B JUMP JUMPDEST PUSH2 0xD3E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x33C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x2C1B JUMP JUMPDEST PUSH2 0xD5B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32B SWAP2 SWAP1 PUSH2 0x3441 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33C PUSH2 0xD87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x349 SWAP2 SWAP1 PUSH2 0x32BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x367 SWAP2 SWAP1 PUSH2 0x2C1B JUMP JUMPDEST PUSH2 0xDAD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x388 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x383 SWAP2 SWAP1 PUSH2 0x2CB5 JUMP JUMPDEST PUSH2 0xEA4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39F SWAP2 SWAP1 PUSH2 0x2B93 JUMP JUMPDEST PUSH2 0xF43 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AE PUSH2 0x1154 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BB SWAP2 SWAP1 PUSH2 0x33E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CC PUSH2 0x1178 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D9 SWAP2 SWAP1 PUSH2 0x3645 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EA PUSH2 0x117E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F7 SWAP2 SWAP1 PUSH2 0x3441 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x415 SWAP2 SWAP1 PUSH2 0x2ADF JUMP JUMPDEST PUSH2 0x120C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x436 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x431 SWAP2 SWAP1 PUSH2 0x2B46 JUMP JUMPDEST PUSH2 0x1293 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x440 PUSH2 0x131E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44D SWAP2 SWAP1 PUSH2 0x3645 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x470 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46B SWAP2 SWAP1 PUSH2 0x2A32 JUMP JUMPDEST PUSH2 0x1324 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x9 CHAINID DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x48A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3265 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4B6 DUP2 CALLER PUSH1 0xA PUSH2 0x141C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP DUP1 PUSH32 0x98EACF4F33E6A76B9B0916F3A1F00CBFE38F5728E60C71CDEC75362365C23A15 CALLER PUSH1 0x40 MLOAD PUSH2 0x4E7 SWAP2 SWAP1 PUSH2 0x32BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x4F8 DUP2 PUSH2 0x1451 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x1 ISZERO ISZERO DUP2 PUSH1 0x1 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x5AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A5 SWAP1 PUSH2 0x3483 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO DUP2 PUSH1 0x2 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x643 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x63A SWAP1 PUSH2 0x3583 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x64E DUP4 PUSH2 0x167D JUMP JUMPDEST SWAP1 POP PUSH2 0x659 DUP4 PUSH2 0x16AD JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x69F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH32 0x834B5FC2655A3B64CB9DFBBF39CB1B67BFF9E533AB318DBB3677E4EDCF9DC25D DUP4 CALLER DUP4 PUSH1 0x40 MLOAD PUSH2 0x6D3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3689 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x6E8 PUSH2 0x26CD JUMP JUMPDEST PUSH2 0x6F1 DUP3 PUSH2 0x1722 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x716 SWAP1 PUSH2 0x3AE9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x742 SWAP1 PUSH2 0x3AE9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x78F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x764 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x78F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x772 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x836 PUSH2 0x9F7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89A SWAP1 PUSH2 0x3543 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8B7 DUP3 PUSH1 0xA PUSH2 0x173E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x8D3 JUMPI PUSH2 0x8D1 DUP3 DUP3 PUSH1 0xA PUSH2 0x141C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH2 0x901 PUSH1 0xA PUSH2 0x1758 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x967 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x933 DUP3 PUSH1 0xA PUSH2 0x176D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x954 JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST DUP1 DUP1 PUSH2 0x95F SWAP1 PUSH2 0x3B4C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8F7 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x977 PUSH2 0x178A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x995 PUSH2 0x9F7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E2 SWAP1 PUSH2 0x3523 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9F5 PUSH1 0x0 PUSH2 0x1792 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA28 PUSH2 0x9F7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA95 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA8C SWAP1 PUSH2 0x3543 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA9F PUSH2 0x1857 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH2 0xAC5 PUSH2 0x9F7 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAFE SWAP2 SWAP1 PUSH2 0x32BF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB2A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB4E SWAP2 SWAP1 PUSH2 0x2C48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB6B SWAP3 SWAP2 SWAP1 PUSH2 0x32DA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB99 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBBD SWAP2 SWAP1 PUSH2 0x2A5F JUMP JUMPDEST PUSH2 0xBFC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF3 SWAP1 PUSH2 0x3503 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST DUP3 PUSH1 0x7 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCA1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC98 SWAP1 PUSH2 0x35E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE DUP1 PUSH32 0x7CC135E0CEBB02C3480AE5D74D377283180A2601F8F644EDF7987B009316C63A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP2 PUSH2 0xD1F JUMPI PUSH2 0xD1D DUP4 PUSH1 0xA PUSH2 0x1881 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH2 0xD35 DUP5 PUSH1 0xA PUSH2 0x176D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD54 DUP3 PUSH1 0xA PUSH2 0x173E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x9 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD71 SWAP3 SWAP2 SWAP1 PUSH2 0x3232 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDB8 DUP3 PUSH2 0x1722 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE4C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE43 SWAP1 PUSH2 0x3563 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5E6EB33A418DE5DBBC17F989F7AE362CDFBB1748C5D603137C767027A354EDBC DUP3 PUSH1 0x40 MLOAD PUSH2 0xE98 SWAP2 SWAP1 PUSH2 0x3645 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEB1 DUP5 DUP5 DUP5 PUSH2 0x189B JUMP JUMPDEST SWAP1 POP PUSH1 0x1 ISZERO ISZERO DUP2 ISZERO ISZERO EQ PUSH2 0xEFA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF1 SWAP1 PUSH2 0x35A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF04 DUP5 CALLER PUSH2 0x18BB JUMP JUMPDEST PUSH32 0x7C29733EDBBBC7F83FC8C5FB3231AB4C21421E8DA3E7BB05CDDC0C2BE2D0CF65 DUP5 CALLER PUSH1 0x40 MLOAD PUSH2 0xF35 SWAP3 SWAP2 SWAP1 PUSH2 0x3660 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xF56 SWAP1 PUSH2 0x3B4C JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 PUSH1 0xD SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0xF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP5 DUP2 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP DUP7 DUP7 DUP3 PUSH1 0x1 ADD SWAP2 SWAP1 PUSH2 0xF95 SWAP3 SWAP2 SWAP1 PUSH2 0x2722 JUMP JUMPDEST POP DUP4 DUP2 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP DUP3 DUP2 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP CALLER DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xE DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD SLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x1 DUP3 ADD DUP2 PUSH1 0x1 ADD SWAP1 DUP1 SLOAD PUSH2 0x1052 SWAP1 PUSH2 0x3AE9 JUMP JUMPDEST PUSH2 0x105D SWAP3 SWAP2 SWAP1 PUSH2 0x27A8 JUMP JUMPDEST POP PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 DUP3 ADD SLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x4 DUP3 ADD SLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0x5 DUP3 ADD SLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0x6 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP PUSH32 0x633109EEC20320EDED000FC1E2634211AA7E92BA3F5B15FAF6DCDAFCA05094E4 DUP3 CALLER PUSH1 0x40 MLOAD PUSH2 0x1143 SWAP3 SWAP2 SWAP1 PUSH2 0x3660 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH2 0x118B SWAP1 PUSH2 0x3AE9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x11B7 SWAP1 PUSH2 0x3AE9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1204 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x11D9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1204 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x11E7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0x1214 PUSH2 0x9F7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1281 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1278 SWAP1 PUSH2 0x3543 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x128D DUP5 DUP5 DUP5 DUP5 PUSH2 0x1A3C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x129B PUSH2 0x9F7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1308 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12FF SWAP1 PUSH2 0x3543 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x9 SWAP2 SWAP1 PUSH2 0x1319 SWAP3 SWAP2 SWAP1 PUSH2 0x2722 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x3E8 DUP2 JUMP JUMPDEST PUSH2 0x132C PUSH2 0x178A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x134A PUSH2 0x9F7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1397 SWAP1 PUSH2 0x3523 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1410 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1407 SWAP1 PUSH2 0x34A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1419 DUP2 PUSH2 0x1792 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1448 DUP5 PUSH1 0x0 ADD DUP5 PUSH1 0x0 SHL DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x1B4F JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x145B PUSH2 0x9F7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x14C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14BF SWAP1 PUSH2 0x3543 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14D0 PUSH2 0x8D7 JUMP JUMPDEST ISZERO PUSH2 0x1510 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1507 SWAP1 PUSH2 0x34E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1544 PUSH32 0x0 ADDRESS PUSH4 0xA4E336C3 PUSH1 0xE0 SHL PUSH2 0x1B8A JUMP JUMPDEST SWAP1 POP PUSH2 0x1598 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6765740000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x1588 DUP6 PUSH2 0xD5B JUMP JUMPDEST DUP4 PUSH2 0x1BBB SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1617 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7061746800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6861735369676E65645570000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP4 PUSH2 0x1BBB SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1643 DUP3 PUSH32 0x0 PUSH2 0x1BEE JUMP JUMPDEST SWAP1 POP DUP1 DUP5 PUSH32 0xBE1937B7FECA9C000F1F748EBBA989954549C773449BBAB49AB3D6F796AF50D7 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1689 DUP4 PUSH2 0x1722 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x5 ADD SLOAD DUP3 PUSH1 0x3 ADD SLOAD PUSH2 0x16A1 SWAP2 SWAP1 PUSH2 0x37D5 JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x2 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1750 DUP4 PUSH1 0x0 ADD DUP4 PUSH1 0x0 SHL PUSH2 0x1C25 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1766 DUP3 PUSH1 0x0 ADD PUSH2 0x1C45 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x177F DUP4 PUSH1 0x0 ADD DUP4 PUSH1 0x0 SHL PUSH2 0x1C5A JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1893 DUP4 PUSH1 0x0 ADD DUP4 PUSH1 0x0 SHL PUSH2 0x1CD6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x18A7 DUP6 PUSH2 0x1722 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 ADD SLOAD DUP4 LT ISZERO SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18C6 DUP4 PUSH2 0x1722 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x10 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD DUP3 PUSH1 0x5 ADD SLOAD LT ISZERO PUSH2 0x192A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1921 SWAP1 PUSH2 0x3603 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO DUP3 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x1982 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1979 SWAP1 PUSH2 0x3463 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x7 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE DUP5 PUSH32 0xE1FE3AFA0F7F761FF0A8B89086790EFD5140D2907EBD5B7FF6BFCB5E075FD4C5 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6EE4D553 DUP7 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B16 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x33FC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1B44 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 PUSH1 0x2 ADD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1B81 DUP4 DUP6 PUSH1 0x0 ADD PUSH2 0x1D0F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1B92 PUSH2 0x2835 JUMP JUMPDEST PUSH2 0x1B9A PUSH2 0x2835 JUMP JUMPDEST PUSH2 0x1BB1 DUP6 DUP6 DUP6 DUP5 PUSH2 0x1D26 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1BD2 DUP3 DUP5 PUSH1 0x80 ADD MLOAD PUSH2 0x1DD6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1BE9 DUP2 DUP5 PUSH1 0x80 ADD MLOAD PUSH2 0x1DD6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C1D PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP5 PUSH2 0x1DFB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C3D DUP3 DUP5 PUSH1 0x0 ADD PUSH2 0x1EC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C53 DUP3 PUSH1 0x0 ADD PUSH2 0x1EDE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x2 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP1 SHL DUP2 EQ ISZERO DUP1 PUSH2 0x1C8D JUMPI POP PUSH2 0x1C8C DUP5 DUP5 PUSH2 0x1C25 JUMP JUMPDEST JUMPDEST PUSH2 0x1CCC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CC3 SWAP1 PUSH2 0x35C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x2 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH2 0x1D07 DUP3 DUP5 PUSH1 0x0 ADD PUSH2 0x1EF3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D1E DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x1F0A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D2E PUSH2 0x2835 JUMP JUMPDEST PUSH2 0x1D3E DUP6 PUSH1 0x80 ADD MLOAD PUSH2 0x100 PUSH2 0x1F7A JUMP JUMPDEST POP DUP4 DUP6 PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP DUP3 DUP6 PUSH1 0x20 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 DUP6 PUSH1 0x40 ADD SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE POP POP DUP5 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1DE3 DUP3 PUSH1 0x3 DUP4 MLOAD PUSH2 0x1FE4 JUMP JUMPDEST PUSH2 0x1DF6 DUP2 DUP4 PUSH2 0x2169 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 SLOAD SWAP1 POP PUSH1 0x1 DUP2 PUSH2 0x1E10 SWAP2 SWAP1 PUSH2 0x377F JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH4 0x40429946 PUSH1 0xE0 SHL PUSH1 0x0 DUP1 DUP8 PUSH1 0x0 ADD MLOAD ADDRESS DUP10 PUSH1 0x40 ADD MLOAD DUP8 PUSH1 0x1 DUP13 PUSH1 0x80 ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1E51 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3303 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH2 0x1EBC DUP7 DUP4 DUP7 DUP5 PUSH2 0x218B JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ED6 DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x232F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EEC DUP3 PUSH1 0x0 ADD PUSH2 0x2352 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F02 DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x2363 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F16 DUP4 DUP4 PUSH2 0x232F JUMP JUMPDEST PUSH2 0x1F6F JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x1F74 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F82 PUSH2 0x28A2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 PUSH2 0x1F91 SWAP2 SWAP1 PUSH2 0x3BC3 JUMP JUMPDEST EQ PUSH2 0x1FBD JUMPI PUSH1 0x20 DUP3 PUSH2 0x1FA3 SWAP2 SWAP1 PUSH2 0x3BC3 JUMP JUMPDEST PUSH1 0x20 PUSH2 0x1FAF SWAP2 SWAP1 PUSH2 0x39D1 JUMP JUMPDEST DUP3 PUSH2 0x1FBA SWAP2 SWAP1 PUSH2 0x377F JUMP JUMPDEST SWAP2 POP JUMPDEST DUP2 DUP4 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x40 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 DUP2 MSTORE DUP3 DUP2 ADD PUSH1 0x20 ADD PUSH1 0x40 MSTORE POP DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x17 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND GT PUSH2 0x201B JUMPI PUSH2 0x2015 DUP2 PUSH1 0x5 DUP5 PUSH1 0xFF AND SWAP1 SHL PUSH1 0xFF AND OR DUP5 PUSH2 0x2477 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0x2164 JUMP JUMPDEST PUSH1 0xFF DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND GT PUSH2 0x2071 JUMPI PUSH2 0x204A PUSH1 0x18 PUSH1 0x5 DUP5 PUSH1 0xFF AND SWAP1 SHL OR DUP5 PUSH2 0x2477 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0x206B DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 DUP6 PUSH2 0x2497 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0x2163 JUMP JUMPDEST PUSH2 0xFFFF DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND GT PUSH2 0x20C8 JUMPI PUSH2 0x20A1 PUSH1 0x19 PUSH1 0x5 DUP5 PUSH1 0xFF AND SWAP1 SHL OR DUP5 PUSH2 0x2477 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0x20C2 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x2 DUP6 PUSH2 0x2497 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0x2162 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND GT PUSH2 0x2121 JUMPI PUSH2 0x20FA PUSH1 0x1A PUSH1 0x5 DUP5 PUSH1 0xFF AND SWAP1 SHL OR DUP5 PUSH2 0x2477 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0x211B DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x4 DUP6 PUSH2 0x2497 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0x2161 JUMP JUMPDEST PUSH2 0x213E PUSH1 0x1B PUSH1 0x5 DUP5 PUSH1 0xFF AND SWAP1 SHL OR DUP5 PUSH2 0x2477 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0x215F DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x8 DUP6 PUSH2 0x2497 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMPDEST JUMPDEST JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x2171 PUSH2 0x28A2 JUMP JUMPDEST PUSH2 0x2183 DUP4 DUP5 PUSH1 0x0 ADD MLOAD MLOAD DUP5 DUP6 MLOAD PUSH2 0x24B9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x21A0 SWAP3 SWAP2 SWAP1 PUSH2 0x3206 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP DUP5 PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH32 0xB5E6E01E79F91267DC17B4E6314D5D4D03593D2CEEE0FBB452B750BD70EA5AF9 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4000AEA0 DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2296 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3388 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x22B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x22C4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x22E8 SWAP2 SWAP1 PUSH2 0x2A5F JUMP JUMPDEST PUSH2 0x2327 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x231E SWAP1 PUSH2 0x34C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x246B JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x2395 SWAP2 SWAP1 PUSH2 0x39D1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x23AD SWAP2 SWAP1 PUSH2 0x39D1 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x241C JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x23CE JUMPI PUSH2 0x23CD PUSH2 0x3CB0 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x23F2 JUMPI PUSH2 0x23F1 PUSH2 0x3CB0 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP6 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x2430 JUMPI PUSH2 0x242F PUSH2 0x3C81 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x2471 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x247F PUSH2 0x28A2 JUMP JUMPDEST PUSH2 0x248F DUP4 DUP5 PUSH1 0x0 ADD MLOAD MLOAD DUP5 PUSH2 0x25A8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x249F PUSH2 0x28A2 JUMP JUMPDEST PUSH2 0x24B0 DUP5 DUP6 PUSH1 0x0 ADD MLOAD MLOAD DUP6 DUP6 PUSH2 0x25FF JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x24C1 PUSH2 0x28A2 JUMP JUMPDEST DUP3 MLOAD DUP3 GT ISZERO PUSH2 0x24CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 PUSH1 0x20 ADD MLOAD DUP3 DUP6 PUSH2 0x24E0 SWAP2 SWAP1 PUSH2 0x377F JUMP JUMPDEST GT ISZERO PUSH2 0x2515 JUMPI PUSH2 0x2514 DUP6 PUSH1 0x2 PUSH2 0x2505 DUP9 PUSH1 0x20 ADD MLOAD DUP9 DUP8 PUSH2 0x2500 SWAP2 SWAP1 PUSH2 0x377F JUMP JUMPDEST PUSH2 0x268D JUMP JUMPDEST PUSH2 0x250F SWAP2 SWAP1 PUSH2 0x3977 JUMP JUMPDEST PUSH2 0x26A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 DUP7 MLOAD DUP1 MLOAD DUP8 PUSH1 0x20 DUP4 ADD ADD SWAP4 POP DUP1 DUP9 DUP8 ADD GT ISZERO PUSH2 0x2534 JUMPI DUP8 DUP7 ADD DUP3 MSTORE JUMPDEST PUSH1 0x20 DUP8 ADD SWAP3 POP POP POP JUMPDEST PUSH1 0x20 DUP5 LT PUSH2 0x257B JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 PUSH2 0x2556 SWAP2 SWAP1 PUSH2 0x377F JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP2 PUSH2 0x2565 SWAP2 SWAP1 PUSH2 0x377F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP5 PUSH2 0x2574 SWAP2 SWAP1 PUSH2 0x39D1 JUMP JUMPDEST SWAP4 POP PUSH2 0x253D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP6 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB SWAP1 POP DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP2 DUP2 OR DUP6 MSTORE POP POP POP DUP7 SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x25B0 PUSH2 0x28A2 JUMP JUMPDEST DUP4 PUSH1 0x20 ADD MLOAD DUP4 LT PUSH2 0x25D6 JUMPI PUSH2 0x25D5 DUP5 PUSH1 0x2 DUP7 PUSH1 0x20 ADD MLOAD PUSH2 0x25D0 SWAP2 SWAP1 PUSH2 0x3977 JUMP JUMPDEST PUSH2 0x26A9 JUMP JUMPDEST JUMPDEST DUP4 MLOAD DUP1 MLOAD PUSH1 0x20 DUP6 DUP4 ADD ADD DUP5 DUP2 MSTORE8 DUP2 DUP7 EQ ISZERO PUSH2 0x25F2 JUMPI PUSH1 0x1 DUP3 ADD DUP4 MSTORE JUMPDEST POP POP POP DUP4 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2607 PUSH2 0x28A2 JUMP JUMPDEST DUP5 PUSH1 0x20 ADD MLOAD DUP5 DUP4 PUSH2 0x2618 SWAP2 SWAP1 PUSH2 0x377F JUMP JUMPDEST GT ISZERO PUSH2 0x2640 JUMPI PUSH2 0x263F DUP6 PUSH1 0x2 DUP7 DUP6 PUSH2 0x2630 SWAP2 SWAP1 PUSH2 0x377F JUMP JUMPDEST PUSH2 0x263A SWAP2 SWAP1 PUSH2 0x3977 JUMP JUMPDEST PUSH2 0x26A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP4 PUSH2 0x100 PUSH2 0x2652 SWAP2 SWAP1 PUSH2 0x3859 JUMP JUMPDEST PUSH2 0x265C SWAP2 SWAP1 PUSH2 0x39D1 JUMP JUMPDEST SWAP1 POP DUP6 MLOAD DUP4 DUP7 DUP3 ADD ADD DUP6 DUP4 NOT DUP3 MLOAD AND OR DUP2 MSTORE DUP2 MLOAD DUP6 DUP9 ADD GT ISZERO PUSH2 0x267F JUMPI DUP5 DUP8 ADD DUP3 MSTORE JUMPDEST POP POP DUP6 SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 GT ISZERO PUSH2 0x269F JUMPI DUP3 SWAP1 POP PUSH2 0x26A3 JUMP JUMPDEST DUP2 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD MLOAD SWAP1 POP PUSH2 0x26BC DUP4 DUP4 PUSH2 0x1F7A JUMP JUMPDEST POP PUSH2 0x26C7 DUP4 DUP3 PUSH2 0x2169 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x272E SWAP1 PUSH2 0x3AE9 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x2750 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x2797 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x2769 JUMPI DUP1 CALLDATALOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x2797 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x2797 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2796 JUMPI DUP3 CALLDATALOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x277B JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x27A4 SWAP2 SWAP1 PUSH2 0x28BC JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x27B4 SWAP1 PUSH2 0x3AE9 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x27D6 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x2824 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x27E7 JUMPI DUP1 SLOAD DUP6 SSTORE PUSH2 0x2824 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x2824 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2823 JUMPI DUP3 SLOAD DUP3 SSTORE SWAP2 PUSH1 0x1 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2808 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x2831 SWAP2 SWAP1 PUSH2 0x28BC JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x289C PUSH2 0x28A2 JUMP JUMPDEST DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x28D5 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x28BD JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28EC PUSH2 0x28E7 DUP5 PUSH2 0x36E5 JUMP JUMPDEST PUSH2 0x36C0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2908 JUMPI PUSH2 0x2907 PUSH2 0x3D1D JUMP JUMPDEST JUMPDEST PUSH2 0x2913 DUP5 DUP3 DUP6 PUSH2 0x3AA7 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x292A DUP2 PUSH2 0x411D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x293F DUP2 PUSH2 0x4134 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2954 DUP2 PUSH2 0x4134 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2969 DUP2 PUSH2 0x414B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x297E DUP2 PUSH2 0x4162 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x299A JUMPI PUSH2 0x2999 PUSH2 0x3D13 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x29B7 JUMPI PUSH2 0x29B6 PUSH2 0x3D0E JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x29D3 JUMPI PUSH2 0x29D2 PUSH2 0x3D18 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x29EF JUMPI PUSH2 0x29EE PUSH2 0x3D13 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x29FF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x28D9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2A17 DUP2 PUSH2 0x4179 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2A2C DUP2 PUSH2 0x4179 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A48 JUMPI PUSH2 0x2A47 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2A56 DUP5 DUP3 DUP6 ADD PUSH2 0x291B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A75 JUMPI PUSH2 0x2A74 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2A83 DUP5 DUP3 DUP6 ADD PUSH2 0x2945 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2AA5 JUMPI PUSH2 0x2AA4 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2AB3 DUP7 DUP3 DUP8 ADD PUSH2 0x295A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2AC4 DUP7 DUP3 DUP8 ADD PUSH2 0x2A08 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2AD5 DUP7 DUP3 DUP8 ADD PUSH2 0x2930 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2AF9 JUMPI PUSH2 0x2AF8 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B07 DUP8 DUP3 DUP9 ADD PUSH2 0x295A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2B18 DUP8 DUP3 DUP9 ADD PUSH2 0x2A08 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2B29 DUP8 DUP3 DUP9 ADD PUSH2 0x296F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x2B3A DUP8 DUP3 DUP9 ADD PUSH2 0x2A08 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B5D JUMPI PUSH2 0x2B5C PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2B7B JUMPI PUSH2 0x2B7A PUSH2 0x3D22 JUMP JUMPDEST JUMPDEST PUSH2 0x2B87 DUP6 DUP3 DUP7 ADD PUSH2 0x2984 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2BAF JUMPI PUSH2 0x2BAE PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2BCD JUMPI PUSH2 0x2BCC PUSH2 0x3D22 JUMP JUMPDEST JUMPDEST PUSH2 0x2BD9 DUP9 DUP3 DUP10 ADD PUSH2 0x2984 JUMP JUMPDEST SWAP6 POP SWAP6 POP POP PUSH1 0x20 PUSH2 0x2BEC DUP9 DUP3 DUP10 ADD PUSH2 0x2A08 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2BFD DUP9 DUP3 DUP10 ADD PUSH2 0x2A08 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x2C0E DUP9 DUP3 DUP10 ADD PUSH2 0x2A08 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C31 JUMPI PUSH2 0x2C30 PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2C3F DUP5 DUP3 DUP6 ADD PUSH2 0x2A08 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C5E JUMPI PUSH2 0x2C5D PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2C6C DUP5 DUP3 DUP6 ADD PUSH2 0x2A1D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2C8C JUMPI PUSH2 0x2C8B PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2C9A DUP6 DUP3 DUP7 ADD PUSH2 0x2A08 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2CAB DUP6 DUP3 DUP7 ADD PUSH2 0x291B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2CCE JUMPI PUSH2 0x2CCD PUSH2 0x3D27 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2CDC DUP7 DUP3 DUP8 ADD PUSH2 0x2A08 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2CFD JUMPI PUSH2 0x2CFC PUSH2 0x3D22 JUMP JUMPDEST JUMPDEST PUSH2 0x2D09 DUP7 DUP3 DUP8 ADD PUSH2 0x29DA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2D1A DUP7 DUP3 DUP8 ADD PUSH2 0x2A08 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x2D2D DUP2 PUSH2 0x3A05 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2D3C DUP2 PUSH2 0x3A05 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2D4B DUP2 PUSH2 0x3A17 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2D5A DUP2 PUSH2 0x3A17 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2D69 DUP2 PUSH2 0x3A23 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2D78 DUP2 PUSH2 0x3A2D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D89 DUP3 PUSH2 0x372B JUMP JUMPDEST PUSH2 0x2D93 DUP2 DUP6 PUSH2 0x3741 JUMP JUMPDEST SWAP4 POP PUSH2 0x2DA3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3AB6 JUMP JUMPDEST PUSH2 0x2DAC DUP2 PUSH2 0x3D2C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2DC8 PUSH2 0x2DC3 DUP3 PUSH2 0x3A83 JUMP JUMPDEST PUSH2 0x3B95 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DD9 DUP3 PUSH2 0x3736 JUMP JUMPDEST PUSH2 0x2DE3 DUP2 DUP6 PUSH2 0x3752 JUMP JUMPDEST SWAP4 POP PUSH2 0x2DF3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3AB6 JUMP JUMPDEST PUSH2 0x2DFC DUP2 PUSH2 0x3D2C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E12 DUP3 PUSH2 0x3736 JUMP JUMPDEST PUSH2 0x2E1C DUP2 DUP6 PUSH2 0x3763 JUMP JUMPDEST SWAP4 POP PUSH2 0x2E2C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3AB6 JUMP JUMPDEST PUSH2 0x2E35 DUP2 PUSH2 0x3D2C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x2E4D DUP2 PUSH2 0x3AE9 JUMP JUMPDEST PUSH2 0x2E57 DUP2 DUP7 PUSH2 0x3774 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x2E72 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x2E83 JUMPI PUSH2 0x2EB6 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 DUP7 ADD SWAP4 POP PUSH2 0x2EB6 JUMP JUMPDEST PUSH2 0x2E8C DUP6 PUSH2 0x3716 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2EAE JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2E8F JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2ECC PUSH1 0x12 DUP4 PUSH2 0x3763 JUMP JUMPDEST SWAP2 POP PUSH2 0x2ED7 DUP3 PUSH2 0x3D57 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EEF PUSH1 0x2E DUP4 PUSH2 0x3763 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EFA DUP3 PUSH2 0x3D80 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F12 PUSH1 0x26 DUP4 PUSH2 0x3763 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F1D DUP3 PUSH2 0x3DCF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F35 PUSH1 0x23 DUP4 PUSH2 0x3763 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F40 DUP3 PUSH2 0x3E1E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F58 PUSH1 0x7 DUP4 PUSH2 0x3774 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F63 DUP3 PUSH2 0x3E6D JUMP JUMPDEST PUSH1 0x7 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F7B PUSH1 0x10 DUP4 PUSH2 0x3763 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F86 DUP3 PUSH2 0x3E96 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F9E PUSH1 0x12 DUP4 PUSH2 0x3763 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FA9 DUP3 PUSH2 0x3EBF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FC1 PUSH1 0x20 DUP4 PUSH2 0x3763 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FCC DUP3 PUSH2 0x3EE8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FE4 PUSH1 0x17 DUP4 PUSH2 0x3763 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FEF DUP3 PUSH2 0x3F11 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3007 PUSH1 0x20 DUP4 PUSH2 0x3763 JUMP JUMPDEST SWAP2 POP PUSH2 0x3012 DUP3 PUSH2 0x3F3A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x302A PUSH1 0x1B DUP4 PUSH2 0x3763 JUMP JUMPDEST SWAP2 POP PUSH2 0x3035 DUP3 PUSH2 0x3F63 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x304D PUSH1 0x3E DUP4 PUSH2 0x3763 JUMP JUMPDEST SWAP2 POP PUSH2 0x3058 DUP3 PUSH2 0x3F8C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3070 PUSH1 0xA DUP4 PUSH2 0x3774 JUMP JUMPDEST SWAP2 POP PUSH2 0x307B DUP3 PUSH2 0x3FDB JUMP JUMPDEST PUSH1 0xA DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3093 PUSH1 0x1E DUP4 PUSH2 0x3763 JUMP JUMPDEST SWAP2 POP PUSH2 0x309E DUP3 PUSH2 0x4004 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30B6 PUSH1 0x28 DUP4 PUSH2 0x3763 JUMP JUMPDEST SWAP2 POP PUSH2 0x30C1 DUP3 PUSH2 0x402D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30D9 PUSH1 0x8 DUP4 PUSH2 0x3774 JUMP JUMPDEST SWAP2 POP PUSH2 0x30E4 DUP3 PUSH2 0x407C JUMP JUMPDEST PUSH1 0x8 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30FC PUSH1 0x22 DUP4 PUSH2 0x3763 JUMP JUMPDEST SWAP2 POP PUSH2 0x3107 DUP3 PUSH2 0x40A5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x311F PUSH1 0x8 DUP4 PUSH2 0x3774 JUMP JUMPDEST SWAP2 POP PUSH2 0x312A DUP3 PUSH2 0x40F4 JUMP JUMPDEST PUSH1 0x8 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x314D PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x31D1 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x3165 DUP3 DUP3 PUSH2 0x2DCE JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x317A PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x2D24 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x318D PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x31D1 JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x31A0 PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x31D1 JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH2 0x31B3 PUSH1 0xA0 DUP7 ADD DUP3 PUSH2 0x31D1 JUMP JUMPDEST POP PUSH1 0xC0 DUP4 ADD MLOAD PUSH2 0x31C6 PUSH1 0xC0 DUP7 ADD DUP3 PUSH2 0x2D42 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x31DA DUP2 PUSH2 0x3A79 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x31E9 DUP2 PUSH2 0x3A79 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3200 PUSH2 0x31FB DUP3 PUSH2 0x3A79 JUMP JUMPDEST PUSH2 0x3BB9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3212 DUP3 DUP6 PUSH2 0x2DB7 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x3222 DUP3 DUP5 PUSH2 0x31EF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x323E DUP3 DUP6 PUSH2 0x2E40 JUMP JUMPDEST SWAP2 POP PUSH2 0x3249 DUP3 PUSH2 0x2F4B JUMP JUMPDEST SWAP2 POP PUSH2 0x3255 DUP3 DUP5 PUSH2 0x31EF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3271 DUP3 DUP7 PUSH2 0x2E40 JUMP JUMPDEST SWAP2 POP PUSH2 0x327C DUP3 PUSH2 0x30CC JUMP JUMPDEST SWAP2 POP PUSH2 0x3288 DUP3 DUP6 PUSH2 0x31EF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x3297 DUP3 PUSH2 0x3063 JUMP JUMPDEST SWAP2 POP PUSH2 0x32A3 DUP3 DUP5 PUSH2 0x31EF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x32B2 DUP3 PUSH2 0x3112 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x32D4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2D33 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x32EF PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2D33 JUMP JUMPDEST PUSH2 0x32FC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x31E0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x3319 PUSH1 0x0 DUP4 ADD DUP12 PUSH2 0x2D33 JUMP JUMPDEST PUSH2 0x3326 PUSH1 0x20 DUP4 ADD DUP11 PUSH2 0x31E0 JUMP JUMPDEST PUSH2 0x3333 PUSH1 0x40 DUP4 ADD DUP10 PUSH2 0x2D60 JUMP JUMPDEST PUSH2 0x3340 PUSH1 0x60 DUP4 ADD DUP9 PUSH2 0x2D33 JUMP JUMPDEST PUSH2 0x334D PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x2D6F JUMP JUMPDEST PUSH2 0x335A PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x31E0 JUMP JUMPDEST PUSH2 0x3367 PUSH1 0xC0 DUP4 ADD DUP6 PUSH2 0x31E0 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x3379 DUP2 DUP5 PUSH2 0x2D7E JUMP JUMPDEST SWAP1 POP SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x339D PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2D33 JUMP JUMPDEST PUSH2 0x33AA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x31E0 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x33BC DUP2 DUP5 PUSH2 0x2D7E JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x33DB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2D51 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x33F6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2D60 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3411 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2D60 JUMP JUMPDEST PUSH2 0x341E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x31E0 JUMP JUMPDEST PUSH2 0x342B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2D6F JUMP JUMPDEST PUSH2 0x3438 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x31E0 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x345B DUP2 DUP5 PUSH2 0x2E07 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x347C DUP2 PUSH2 0x2EBF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x349C DUP2 PUSH2 0x2EE2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x34BC DUP2 PUSH2 0x2F05 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x34DC DUP2 PUSH2 0x2F28 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x34FC DUP2 PUSH2 0x2F6E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x351C DUP2 PUSH2 0x2F91 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x353C DUP2 PUSH2 0x2FB4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x355C DUP2 PUSH2 0x2FD7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x357C DUP2 PUSH2 0x2FFA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x359C DUP2 PUSH2 0x301D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x35BC DUP2 PUSH2 0x3040 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x35DC DUP2 PUSH2 0x3086 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x35FC DUP2 PUSH2 0x30A9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x361C DUP2 PUSH2 0x30EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x363D DUP2 DUP5 PUSH2 0x3135 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x365A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x31E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3675 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x31E0 JUMP JUMPDEST PUSH2 0x3682 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2D33 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x369E PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x31E0 JUMP JUMPDEST PUSH2 0x36AB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2D33 JUMP JUMPDEST PUSH2 0x36B8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x31E0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36CA PUSH2 0x36DB JUMP JUMPDEST SWAP1 POP PUSH2 0x36D6 DUP3 DUP3 PUSH2 0x3B1B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3700 JUMPI PUSH2 0x36FF PUSH2 0x3CDF JUMP JUMPDEST JUMPDEST PUSH2 0x3709 DUP3 PUSH2 0x3D2C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x378A DUP3 PUSH2 0x3A79 JUMP JUMPDEST SWAP2 POP PUSH2 0x3795 DUP4 PUSH2 0x3A79 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x37CA JUMPI PUSH2 0x37C9 PUSH2 0x3BF4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37E0 DUP3 PUSH2 0x3A79 JUMP JUMPDEST SWAP2 POP PUSH2 0x37EB DUP4 PUSH2 0x3A79 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x37FB JUMPI PUSH2 0x37FA PUSH2 0x3C23 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x3850 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x382C JUMPI PUSH2 0x382B PUSH2 0x3BF4 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x383B JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x3849 DUP6 PUSH2 0x3D4A JUMP JUMPDEST SWAP5 POP PUSH2 0x3810 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3864 DUP3 PUSH2 0x3A79 JUMP JUMPDEST SWAP2 POP PUSH2 0x386F DUP4 PUSH2 0x3A79 JUMP JUMPDEST SWAP3 POP PUSH2 0x389C PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x38A4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x38B4 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x3970 JUMP JUMPDEST DUP2 PUSH2 0x38C2 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x3970 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x38D8 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x38E2 JUMPI PUSH2 0x3911 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x3970 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x38F4 JUMPI PUSH2 0x38F3 PUSH2 0x3BF4 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x390B JUMPI PUSH2 0x390A PUSH2 0x3BF4 JUMP JUMPDEST JUMPDEST POP PUSH2 0x3970 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x3946 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x3941 JUMPI PUSH2 0x3940 PUSH2 0x3BF4 JUMP JUMPDEST JUMPDEST PUSH2 0x3970 JUMP JUMPDEST PUSH2 0x3953 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x3806 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x396A JUMPI PUSH2 0x3969 PUSH2 0x3BF4 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3982 DUP3 PUSH2 0x3A79 JUMP JUMPDEST SWAP2 POP PUSH2 0x398D DUP4 PUSH2 0x3A79 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x39C6 JUMPI PUSH2 0x39C5 PUSH2 0x3BF4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39DC DUP3 PUSH2 0x3A79 JUMP JUMPDEST SWAP2 POP PUSH2 0x39E7 DUP4 PUSH2 0x3A79 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x39FA JUMPI PUSH2 0x39F9 PUSH2 0x3BF4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A10 DUP3 PUSH2 0x3A59 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A8E DUP3 PUSH2 0x3A95 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AA0 DUP3 PUSH2 0x3A59 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3AD4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3AB9 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3AE3 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x3B01 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x3B15 JUMPI PUSH2 0x3B14 PUSH2 0x3C52 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3B24 DUP3 PUSH2 0x3D2C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3B43 JUMPI PUSH2 0x3B42 PUSH2 0x3CDF JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B57 DUP3 PUSH2 0x3A79 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x3B8A JUMPI PUSH2 0x3B89 PUSH2 0x3BF4 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BA0 DUP3 PUSH2 0x3BA7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BB2 DUP3 PUSH2 0x3D3D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BCE DUP3 PUSH2 0x3A79 JUMP JUMPDEST SWAP2 POP PUSH2 0x3BD9 DUP4 PUSH2 0x3A79 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3BE9 JUMPI PUSH2 0x3BE8 PUSH2 0x3C23 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616D706169676E20697320636C6F7365640000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F7420612076616C6964617465642063616D706169 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x676E20636F6E7472696275746F72000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x756E61626C6520746F207472616E73666572416E6443616C6C20746F206F7261 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x636C650000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x2F75736572732F00000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x556E61626C6520746F207472616E736665720000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F74207468652061646D696E000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F74207468652063616D706169676E206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5265747269627574696F6E20616C726561647920636C61696D65640000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5468697320636F6E747269627574696F6E20646F6573206E6F74207361746973 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6679207468652063616D706169676E277320726571756972656D656E74730000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x2F74776974746572732F00000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x456E756D657261626C654D61703A206E6F6E6578697374656E74206B65790000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x536F75726365206D75737420626520746865206F7261636C65206F6620746865 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2072657175657374000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x2F636861696E732F000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x436F6E7472696275746F7273206C696D697420616C7265616479207265616368 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6564000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x2F77696E6E657273000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x4126 DUP2 PUSH2 0x3A05 JUMP JUMPDEST DUP2 EQ PUSH2 0x4131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x413D DUP2 PUSH2 0x3A17 JUMP JUMPDEST DUP2 EQ PUSH2 0x4148 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x4154 DUP2 PUSH2 0x3A23 JUMP JUMPDEST DUP2 EQ PUSH2 0x415F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x416B DUP2 PUSH2 0x3A2D JUMP JUMPDEST DUP2 EQ PUSH2 0x4176 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x4182 DUP2 PUSH2 0x3A79 JUMP JUMPDEST DUP2 EQ PUSH2 0x418D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC DUP6 0xCE 0xAD 0x4B PUSH20 0xD74CA463BF01C638BEB93ABEDDCCB8A4C886CE10 0xBF CHAINID SWAP3 0xD9 GAS 0xBF PUSH5 0x736F6C6343 STOP ADDMOD MOD STOP CALLER ","sourceMap":"536:11455:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6930:570;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5489:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1599:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4718:672;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7504:123;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8528:148;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1098:84:14;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5904:202:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1668:101:12;;;:::i;:::-;;1036:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8005:213:11;;;:::i;:::-;;6360:472;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5737:108;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7688:164;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;753:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3883:263;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4279:435;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3157:607;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;779:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1523:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;847:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9134:236;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8310:122;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1464:47;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1918:198:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6930:570:11;6994:25;7084:14;7132:13;7181:10;7056:431;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7027:468;;6930:570;;;:::o;5489:153::-;5537:30;5547:7;5556:10;5537:5;:9;;:30;;;;;:::i;:::-;;5588:7;5579:29;5597:10;5579:29;;;;;;:::i;:::-;;;;;;;;5614:23;5629:7;5614:14;:23::i;:::-;;5489:153;:::o;1599:29::-;;;;:::o;4718:672::-;4787:49;4839:32;:44;4872:10;4839:44;;;;;;;;;;;4787:96;;4962:4;4904:62;;:20;:42;;:54;4947:10;4904:54;;;;;;;;;;;;;;;;;;;;;;;;;:62;;;4889:139;;;;;;;;;;;;:::i;:::-;;;;;;;;;5102:5;5042:65;;:20;:44;;:56;5087:10;5042:56;;;;;;;;;;;;;;;;;;;;;;;;;:65;;;5034:105;;;;;;;;;;;;:::i;:::-;;;;;;;;;5145:25;5173:37;5199:10;5173:25;:37::i;:::-;5145:65;;5216:41;5246:10;5216:29;:41::i;:::-;5271:10;5263:28;;:47;5292:17;5263:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5321:64;5343:10;5355;5367:17;5321:64;;;;;;;;:::i;:::-;;;;;;;;4781:609;;4718:672;:::o;7504:123::-;7568:15;;:::i;:::-;7598:24;7611:10;7598:12;:24::i;:::-;7591:31;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7504:123;;;:::o;8528:148::-;11942:7;:5;:7::i;:::-;11928:21;;:10;:21;;;11920:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;8614:23:::1;8629:7;8614:5;:14;;:23;;;;:::i;:::-;8609:62;;8639:32;8649:7;8658:12;8639:5;:9;;:32;;;;;:::i;:::-;;8609:62;8528:148:::0;;:::o;1098:84:14:-;1145:4;1168:7;;;;;;;;;;;1161:14;;1098:84;:::o;5904:202:11:-;5950:4;5962:10;5975:5;5962:18;;5991:11;5986:97;6014:14;:5;:12;:14::i;:::-;6008:3;:20;5986:97;;;6059:10;6041:28;;:14;6051:3;6041:5;:9;;:14;;;;:::i;:::-;:28;;;6037:46;;;6079:4;6071:12;;6037:46;6030:5;;;;;:::i;:::-;;;;5986:97;;;;6096:5;6089:12;;;5904:202;:::o;1668:101:12:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1036:85::-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;8005:213:11:-;11942:7;:5;:7::i;:::-;11928:21;;:10;:21;;;11920:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;8054:23:::1;8099;:21;:23::i;:::-;8054:69;;8137:4;:13;;;8151:7;:5;:7::i;:::-;8160:4;:14;;;8183:4;8160:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8137:53;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8129:84;;;;;;;;;;;;:::i;:::-;;;;;;;;;8048:170;8005:213::o:0;6360:472::-;6489:10;11663:17:1;:28;11681:9;11663:28;;;;;;;;;;;;;;;;;;;;;11649:42;;:10;:42;;;11641:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;11749:17;:28;11767:9;11749:28;;;;;;;;;;;;11742:35;;;;;;;;;;;11807:9;11788:29;;;;;;;;;;6512:12:11::1;6507:40;;6526:21;6539:7;6526:5;:12;;:21;;;;:::i;:::-;;6507:40;6554:12;6569:18;6579:7;6569:5;:9;;:18;;;;:::i;:::-;6554:33;;6501:331;6360:472:::0;;;;:::o;5737:108::-;5798:4;5817:23;5832:7;5817:5;:14;;:23;;;;:::i;:::-;5810:30;;5737:108;;;:::o;7688:164::-;7748:24;7811:14;7838:7;7794:52;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7780:67;;7688:164;;;:::o;753:21::-;;;;;;;;;;;;;:::o;3883:263::-;3941:25;3969:24;3982:10;3969:12;:24::i;:::-;3941:52;;4021:8;:16;;;;;;;;;;;;4007:30;;:10;:30;;;3999:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;4100:4;4080:8;:17;;;:24;;;;;;;;;;;;;;;;;;4115:26;4130:10;4115:26;;;;;;:::i;:::-;;;;;;;;3935:211;3883:263;:::o;4279:435::-;4411:17;4431:62;4458:10;4470:6;4478:14;4431:26;:62::i;:::-;4411:82;;4523:4;4507:20;;:12;:20;;;4499:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;4600:58;4635:10;4647;4600:34;:58::i;:::-;4669:40;4686:10;4698;4669:40;;;;;;;:::i;:::-;;;;;;;;4405:309;4279:435;;;:::o;3157:607::-;3307:14;;:16;;;;;;;;;:::i;:::-;;;;;;3329:21;3353:14;;3329:38;;3373:28;3404:12;:27;3417:13;3404:27;;;;;;;;;;;3373:58;;3458:6;3437:11;:18;;:27;;;;3489:4;;3470:11;:16;;:23;;;;;;;:::i;:::-;;3533:19;3499:11;:31;;:53;;;;3587:14;3558:11;:26;;:43;;;;3629:10;3607:11;:19;;;:32;;;;;;;;;;;;;;;;;;3668:5;3645:11;:20;;;:28;;;;;;;;;;;;;;;;;;3679:9;3694:11;3679:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3717:42;3733:13;3748:10;3717:42;;;;;;;:::i;:::-;;;;;;;;3301:463;;3157:607;;;;;:::o;779:30::-;;;:::o;1523:26::-;;;;:::o;847:28::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9134:236::-;11942:7;:5;:7::i;:::-;11928:21;;:10;:21;;;11920:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;9287:78:::1;9310:10;9322:8;9332:19;9353:11;9287:22;:78::i;:::-;9134:236:::0;;;;:::o;8310:122::-;11942:7;:5;:7::i;:::-;11928:21;;:10;:21;;;11920:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;8412:15:::1;;8395:14;:32;;;;;;;:::i;:::-;;8310:122:::0;;:::o;1464:47::-;1507:4;1464:47;:::o;1918:198:12:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;;;1998:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;4862:213:18:-;4981:4;5004:64;5009:3;:10;;5029:3;5021:12;;5059:5;5043:23;;5035:32;;5004:4;:64::i;:::-;4997:71;;4862:213;;;;;:::o;11303:475:11:-;11385:18;11942:7;:5;:7::i;:::-;11928:21;;:10;:21;;;11920:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;1412:8:14::1;:6;:8::i;:::-;1411:9;1403:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;11411:28:11::2;11442:72;11464:5;11479:4;11486:27;;;11442:21;:72::i;:::-;11411:103;;11520:37;;;;;;;;;;;;;;;;;::::0;11535:21:::2;11548:7;11535:12;:21::i;:::-;11520:3;:7;;:37;;;;;:::i;:::-;11619:30;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;::::0;:3:::2;:7;;:30;;;;;:::i;:::-;11655:17;11675:30;11696:3;11701;11675:20;:30::i;:::-;11655:50;;11741:9;11732:7;11716:35;;;;;;;;;;11764:9;11757:16;;;;11303:475:::0;;;:::o;10944:255::-;11022:7;11037:25;11065:24;11078:10;11065:12;:24::i;:::-;11037:52;;11095:25;11141:8;:23;;;11123:8;:15;;;:41;;;;:::i;:::-;11095:69;;11177:17;11170:24;;;;10944:255;;;:::o;10696:244::-;10770:49;10822:32;:44;10855:10;10822:44;;;;;;;;;;;10770:96;;10931:4;10872:20;:44;;:56;10917:10;10872:56;;;;;;;;;;;;;;;;:63;;;;;;;;;;;;;;;;;;10764:176;10696:244;:::o;9515:127::-;9581:16;9612:12;:25;9625:11;9612:25;;;;;;;;;;;9605:32;;9515:127;;;:::o;5453:149:18:-;5537:4;5560:35;5570:3;:10;;5590:3;5582:12;;5560:9;:35::i;:::-;5553:42;;5453:149;;;;:::o;5685:121::-;5754:7;5780:19;5788:3;:10;;5780:7;:19::i;:::-;5773:26;;5685:121;;;:::o;6947:169::-;7026:7;7076:30;7081:3;:10;;7101:3;7093:12;;7076:4;:30::i;:::-;7068:39;;7045:64;;6947:169;;;;:::o;640:96:16:-;693:7;719:10;712:17;;640:96;:::o;2270:187:12:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;9098:98:1:-;9154:7;9184:6;;;;;;;;;;;9169:22;;9098:98;:::o;5234:140:18:-;5311:4;5334:33;5342:3;:10;;5362:3;5354:12;;5334:7;:33::i;:::-;5327:40;;5234:140;;;;:::o;9754:364:11:-;9894:4;10002:25;10030:24;10043:10;10030:12;:24::i;:::-;10002:52;;10085:8;:28;;;10067:14;:46;;10060:53;;;9754:364;;;;;:::o;10122:570::-;10219:25;10247:24;10260:10;10247:12;:24::i;:::-;10219:52;;10277:49;10329:32;:44;10362:10;10329:44;;;;;;;;;;;10277:96;;10414:20;:38;;;10387:8;:23;;;:65;;10379:112;;;;;;;;;;;;:::i;:::-;;;;;;;;;10526:5;10505:26;;:8;:17;;;;;;;;;;;;:26;;;10497:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;10615:4;10560:20;:42;;:52;10603:8;10560:52;;;;;;;;;;;;;;;;:59;;;;;;;;;;;;;;;;;;10682:5;10625:20;:44;;:54;10670:8;10625:54;;;;;;;;;;;;;;;;:62;;;;;;;;;;;;;;;;;;10213:479;;10122:570;;:::o;7575:388:1:-;7719:27;7767:17;:28;7785:9;7767:28;;;;;;;;;;;;;;;;;;;;;7719:77;;7809:17;:28;7827:9;7809:28;;;;;;;;;;;;7802:35;;;;;;;;;;;7867:9;7848:29;;;;;;;;;;7883:9;:29;;;7913:9;7924:7;7933:12;7947:10;7883:75;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7713:250;7575:388;;;;:::o;1760:188:18:-;1866:4;1901:5;1882:3;:11;;:16;1894:3;1882:16;;;;;;;;;;;:24;;;;1923:18;1937:3;1923;:9;;:13;;:18;;;;:::i;:::-;1916:25;;1760:188;;;;;:::o;1850:283:1:-;1992:24;;:::i;:::-;2024:28;;:::i;:::-;2065:63;2080:6;2088:12;2102:25;2065:3;:14;;:63;;;;;;:::i;:::-;2058:70;;;1850:283;;;;;:::o;1951:175:0:-;2061:26;2083:3;2061:4;:8;;;:21;;:26;;;;:::i;:::-;2093:28;2115:5;2093:4;:8;;;:21;;:28;;;;:::i;:::-;1951:175;;;:::o;2992:177:1:-;3087:7;3109:55;3140:8;;;;;;;;;;;3151:3;3156:7;3109:22;:55::i;:::-;3102:62;;2992:177;;;;:::o;2343:124:18:-;2414:4;2437:23;2456:3;2437;:9;;:18;;:23;;;;:::i;:::-;2430:30;;2343:124;;;;:::o;2557:107::-;2613:7;2639:18;:3;:9;;:16;:18::i;:::-;2632:25;;2557:107;;;:::o;3769:232::-;3835:7;3854:13;3870:3;:11;;:16;3882:3;3870:16;;;;;;;;;;;;3854:32;;3913:1;3904:10;;:5;:10;;:33;;;;3918:19;3928:3;3933;3918:9;:19::i;:::-;3904:33;3896:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;3989:5;3982:12;;;3769:232;;;;:::o;2116:148::-;2180:4;2203:3;:11;;:16;2215:3;2203:16;;;;;;;;;;;2196:23;;;2236:21;2253:3;2236;:9;;:16;;:21;;;;:::i;:::-;2229:28;;2116:148;;;;:::o;5402:123:19:-;5472:4;5495:23;5500:3;:10;;5512:5;5495:4;:23::i;:::-;5488:30;;5402:123;;;;:::o;987:351:0:-;1129:24;;:::i;:::-;1161:49;1182:4;:8;;;361:3;1161:20;:49::i;:::-;;1226:5;1216:4;:7;;:15;;;;;1260:12;1237:4;:20;;:35;;;;;;;;;;;1304:12;1278:4;:23;;:38;;;;;;;;;;;;;1329:4;1322:11;;987:351;;;;;;:::o;2777:204:9:-;2875:71;2894:3;383:1;2931:5;2925:19;2875:18;:71::i;:::-;2952:24;2969:5;2952:3;:10;;:24;;;;:::i;:::-;;2777:204;;:::o;3687:756:1:-;3823:17;3848:13;3864:14;;3848:30;;3909:1;3901:5;:9;;;;:::i;:::-;3884:14;:26;;;;3916:27;3976:48;;;784:1;728;4245:3;:6;;;4267:4;4280:3;:22;;;4310:5;837:1;4350:3;:7;;;:11;;;3946:421;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3916:451;;4380:58;4392:13;4407:5;4414:7;4423:14;4380:11;:58::i;:::-;4373:65;;;;3687:756;;;;;:::o;5903:138:19:-;5983:4;6006:28;6016:3;:10;;6028:5;6006:9;:28::i;:::-;5999:35;;5903:138;;;;:::o;6122:115::-;6185:7;6211:19;6219:3;:10;;6211:7;:19::i;:::-;6204:26;;6122:115;;;:::o;5693:129::-;5766:4;5789:26;5797:3;:10;;5809:5;5789:7;:26::i;:::-;5782:33;;5693:129;;;;:::o;1697:404::-;1760:4;1781:21;1791:3;1796:5;1781:9;:21::i;:::-;1776:319;;1818:3;:11;;1835:5;1818:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1998:3;:11;;:18;;;;1976:3;:12;;:19;1989:5;1976:19;;;;;;;;;;;:40;;;;2037:4;2030:11;;;;1776:319;2079:5;2072:12;;1697:404;;;;;:::o;1001:399:8:-;1075:13;;:::i;:::-;1117:1;1111:2;1100:8;:13;;;;:::i;:::-;:18;1096:71;;1157:2;1146:8;:13;;;;:::i;:::-;1140:2;:20;;;;:::i;:::-;1128:32;;;;;:::i;:::-;;;1096:71;1229:8;1214:3;:12;;:23;;;;;1277:4;1271:11;1301:3;1296;1289:16;1324:1;1319:3;1312:14;1363:8;1358:3;1354:18;1350:2;1346:27;1340:4;1333:41;1252:128;1392:3;1385:10;;1001:399;;;;:::o;682:625:9:-;803:2;794:5;:11;;;791:512;;815:44;852:5;847:1;838:5;:10;;;;837:20;;;815:3;:15;;:44;;;;:::i;:::-;;791:512;;;885:4;876:5;:13;;;872:431;;899:41;936:2;931:1;922:5;:10;;;;921:17;899:3;:15;;:41;;;;:::i;:::-;;948:23;962:5;948:23;;969:1;948:3;:13;;:23;;;;;:::i;:::-;;872:431;;;997:6;988:5;:15;;;984:319;;1013:41;1050:2;1045:1;1036:5;:10;;;;1035:17;1013:3;:15;;:41;;;;:::i;:::-;;1062:23;1076:5;1062:23;;1083:1;1062:3;:13;;:23;;;;;:::i;:::-;;984:319;;;1111:10;1102:5;:19;;;1098:205;;1131:41;1168:2;1163:1;1154:5;:10;;;;1153:17;1131:3;:15;;:41;;;;:::i;:::-;;1180:23;1194:5;1180:23;;1201:1;1180:3;:13;;:23;;;;;:::i;:::-;;1098:205;;;1224:41;1261:2;1256:1;1247:5;:10;;;;1246:17;1224:3;:15;;:41;;;;:::i;:::-;;1273:23;1287:5;1273:23;;1294:1;1273:3;:13;;:23;;;;;:::i;:::-;;1098:205;984:319;872:431;791:512;682:625;;;:::o;4692:155:8:-;4769:13;;:::i;:::-;4797:45;4803:3;4808;:7;;;:14;4824:4;4830;:11;4797:5;:45::i;:::-;4790:52;;4692:155;;;;:::o;6629:430:1:-;6771:17;6835:4;6841:5;6818:29;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6808:40;;;;;;6796:52;;6885:13;6854:17;:28;6872:9;6854:28;;;;;;;;;;;;:44;;;;;;;;;;;;;;;;;;6928:9;6909:29;;;;;;;;;;6952:6;;;;;;;;;;;:22;;;6975:13;6990:7;6999:14;6952:62;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6944:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6629:430;;;;;;:::o;3738:127:19:-;3811:4;3857:1;3834:3;:12;;:19;3847:5;3834:19;;;;;;;;;;;;:24;;3827:31;;3738:127;;;;:::o;3946:107::-;4002:7;4028:3;:11;;:18;;;;4021:25;;3946:107;;;:::o;2269:1388::-;2335:4;2451:18;2472:3;:12;;:19;2485:5;2472:19;;;;;;;;;;;;2451:40;;2520:1;2506:10;:15;2502:1149;;2875:21;2912:1;2899:10;:14;;;;:::i;:::-;2875:38;;2927:17;2968:1;2947:3;:11;;:18;;;;:22;;;;:::i;:::-;2927:42;;3001:13;2988:9;:26;2984:398;;3034:17;3054:3;:11;;3066:9;3054:22;;;;;;;;:::i;:::-;;;;;;;;;;3034:42;;3205:9;3176:3;:11;;3188:13;3176:26;;;;;;;;:::i;:::-;;;;;;;;;:38;;;;3314:10;3288:3;:12;;:23;3301:9;3288:23;;;;;;;;;;;:36;;;;3016:366;2984:398;3460:3;:11;;:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3552:3;:12;;:19;3565:5;3552:19;;;;;;;;;;;3545:26;;;3593:4;3586:11;;;;;;;2502:1149;3635:5;3628:12;;;2269:1388;;;;;:::o;6040:145:8:-;6115:13;;:::i;:::-;6143:37;6154:3;6159;:7;;;:14;6175:4;6143:10;:37::i;:::-;6136:44;;6040:145;;;;:::o;9894:177::-;9998:13;;:::i;:::-;10026:40;10035:3;10040;:7;;;:14;10056:4;10062:3;10026:8;:40::i;:::-;10019:47;;9894:177;;;;;:::o;2745:1210::-;2867:13;;:::i;:::-;2903:4;:11;2896:3;:18;;2888:27;;;;;;2938:3;:12;;;2932:3;2926;:9;;;;:::i;:::-;:24;2922:90;;;2960:45;2967:3;3003:1;2972:28;2976:3;:12;;;2996:3;2990;:9;;;;:::i;:::-;2972:3;:28::i;:::-;:32;;;;:::i;:::-;2960:6;:45::i;:::-;2922:90;3018:12;3036:11;3133:3;3127:10;3204:6;3198:13;3320:3;3315:2;3307:6;3303:15;3299:25;3291:33;;3404:6;3398:3;3393;3389:13;3386:25;3383:2;;;3446:3;3441;3437:13;3429:6;3422:29;3383:2;3483;3477:4;3473:13;3466:20;;3062:430;;3544:129;3558:2;3551:3;:9;3544:129;;3619:3;3613:10;3607:4;3600:24;3647:2;3639:10;;;;;:::i;:::-;;;3664:2;3657:9;;;;;:::i;:::-;;;3569:2;3562:9;;;;;:::i;:::-;;;3544:129;;;3725:12;3760:1;3752:3;3747:2;:8;3741:3;:15;3740:21;3725:36;;3823:4;3819:9;3813:3;3807:10;3803:26;3871:4;3864;3858:11;3854:22;3911:7;3901:8;3898:21;3892:4;3885:35;3778:150;;;3947:3;3940:10;;;;2745:1210;;;;;;:::o;5148:639::-;5251:13;;:::i;:::-;5283:3;:12;;;5276:3;:19;5272:69;;5305:29;5312:3;5332:1;5317:3;:12;;;:16;;;;:::i;:::-;5305:6;:29::i;:::-;5272:69;5427:3;5421:10;5498:6;5492:13;5610:2;5604:3;5596:6;5592:16;5588:25;5634:4;5628;5620:19;5705:6;5700:3;5697:15;5694:2;;;5750:1;5742:6;5738:14;5730:6;5723:30;5694:2;5356:411;;;5779:3;5772:10;;5148:639;;;;;:::o;8974:675::-;9093:13;;:::i;:::-;9130:3;:12;;;9124:3;9118;:9;;;;:::i;:::-;:24;9114:73;;;9152:28;9159:3;9178:1;9171:3;9165;:9;;;;:::i;:::-;9164:15;;;;:::i;:::-;9152:6;:28::i;:::-;9114:73;9193:12;9221:1;9214:3;9209;:8;;;;:::i;:::-;9208:14;;;;:::i;:::-;9193:29;;9308:3;9302:10;9423:3;9417;9409:6;9405:16;9401:26;9479:4;9471;9467:9;9460:4;9454:11;9450:27;9447:37;9441:4;9434:51;9567:6;9561:13;9555:3;9550;9546:13;9543:32;9540:2;;;9610:3;9605;9601:13;9593:6;9586:29;9540:2;9237:392;;9641:3;9634:10;;;8974:675;;;;;;:::o;1961:124::-;2018:7;2041:1;2037;:5;2033:34;;;2059:1;2052:8;;;;2033:34;2079:1;2072:8;;1961:124;;;;;:::o;1801:156::-;1873:19;1895:3;:7;;;1873:29;;1908:19;1913:3;1918:8;1908:4;:19::i;:::-;;1933;1940:3;1945:6;1933;:19::i;:::-;;1867:90;1801:156;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:412:20:-;85:5;110:66;126:49;168:6;126:49;:::i;:::-;110:66;:::i;:::-;101:75;;199:6;192:5;185:21;237:4;230:5;226:16;275:3;266:6;261:3;257:16;254:25;251:2;;;282:79;;:::i;:::-;251:2;372:41;406:6;401:3;396;372:41;:::i;:::-;91:328;;;;;;:::o;425:139::-;471:5;509:6;496:20;487:29;;525:33;552:5;525:33;:::i;:::-;477:87;;;;:::o;570:133::-;613:5;651:6;638:20;629:29;;667:30;691:5;667:30;:::i;:::-;619:84;;;;:::o;709:137::-;763:5;794:6;788:13;779:22;;810:30;834:5;810:30;:::i;:::-;769:77;;;;:::o;852:139::-;898:5;936:6;923:20;914:29;;952:33;979:5;952:33;:::i;:::-;904:87;;;;:::o;997:137::-;1042:5;1080:6;1067:20;1058:29;;1096:32;1122:5;1096:32;:::i;:::-;1048:86;;;;:::o;1154:553::-;1212:8;1222:6;1272:3;1265:4;1257:6;1253:17;1249:27;1239:2;;1280:79;;:::i;:::-;1239:2;1393:6;1380:20;1370:30;;1423:18;1415:6;1412:30;1409:2;;;1445:79;;:::i;:::-;1409:2;1559:4;1551:6;1547:17;1535:29;;1613:3;1605:4;1597:6;1593:17;1583:8;1579:32;1576:41;1573:2;;;1620:79;;:::i;:::-;1573:2;1229:478;;;;;:::o;1727:340::-;1783:5;1832:3;1825:4;1817:6;1813:17;1809:27;1799:2;;1840:79;;:::i;:::-;1799:2;1957:6;1944:20;1982:79;2057:3;2049:6;2042:4;2034:6;2030:17;1982:79;:::i;:::-;1973:88;;1789:278;;;;;:::o;2073:139::-;2119:5;2157:6;2144:20;2135:29;;2173:33;2200:5;2173:33;:::i;:::-;2125:87;;;;:::o;2218:143::-;2275:5;2306:6;2300:13;2291:22;;2322:33;2349:5;2322:33;:::i;:::-;2281:80;;;;:::o;2367:329::-;2426:6;2475:2;2463:9;2454:7;2450:23;2446:32;2443:2;;;2481:79;;:::i;:::-;2443:2;2601:1;2626:53;2671:7;2662:6;2651:9;2647:22;2626:53;:::i;:::-;2616:63;;2572:117;2433:263;;;;:::o;2702:345::-;2769:6;2818:2;2806:9;2797:7;2793:23;2789:32;2786:2;;;2824:79;;:::i;:::-;2786:2;2944:1;2969:61;3022:7;3013:6;3002:9;2998:22;2969:61;:::i;:::-;2959:71;;2915:125;2776:271;;;;:::o;3053:613::-;3127:6;3135;3143;3192:2;3180:9;3171:7;3167:23;3163:32;3160:2;;;3198:79;;:::i;:::-;3160:2;3318:1;3343:53;3388:7;3379:6;3368:9;3364:22;3343:53;:::i;:::-;3333:63;;3289:117;3445:2;3471:53;3516:7;3507:6;3496:9;3492:22;3471:53;:::i;:::-;3461:63;;3416:118;3573:2;3599:50;3641:7;3632:6;3621:9;3617:22;3599:50;:::i;:::-;3589:60;;3544:115;3150:516;;;;;:::o;3672:763::-;3757:6;3765;3773;3781;3830:3;3818:9;3809:7;3805:23;3801:33;3798:2;;;3837:79;;:::i;:::-;3798:2;3957:1;3982:53;4027:7;4018:6;4007:9;4003:22;3982:53;:::i;:::-;3972:63;;3928:117;4084:2;4110:53;4155:7;4146:6;4135:9;4131:22;4110:53;:::i;:::-;4100:63;;4055:118;4212:2;4238:52;4282:7;4273:6;4262:9;4258:22;4238:52;:::i;:::-;4228:62;;4183:117;4339:2;4365:53;4410:7;4401:6;4390:9;4386:22;4365:53;:::i;:::-;4355:63;;4310:118;3788:647;;;;;;;:::o;4441:529::-;4512:6;4520;4569:2;4557:9;4548:7;4544:23;4540:32;4537:2;;;4575:79;;:::i;:::-;4537:2;4723:1;4712:9;4708:17;4695:31;4753:18;4745:6;4742:30;4739:2;;;4775:79;;:::i;:::-;4739:2;4888:65;4945:7;4936:6;4925:9;4921:22;4888:65;:::i;:::-;4870:83;;;;4666:297;4527:443;;;;;:::o;4976:965::-;5074:6;5082;5090;5098;5106;5155:3;5143:9;5134:7;5130:23;5126:33;5123:2;;;5162:79;;:::i;:::-;5123:2;5310:1;5299:9;5295:17;5282:31;5340:18;5332:6;5329:30;5326:2;;;5362:79;;:::i;:::-;5326:2;5475:65;5532:7;5523:6;5512:9;5508:22;5475:65;:::i;:::-;5457:83;;;;5253:297;5589:2;5615:53;5660:7;5651:6;5640:9;5636:22;5615:53;:::i;:::-;5605:63;;5560:118;5717:2;5743:53;5788:7;5779:6;5768:9;5764:22;5743:53;:::i;:::-;5733:63;;5688:118;5845:2;5871:53;5916:7;5907:6;5896:9;5892:22;5871:53;:::i;:::-;5861:63;;5816:118;5113:828;;;;;;;;:::o;5947:329::-;6006:6;6055:2;6043:9;6034:7;6030:23;6026:32;6023:2;;;6061:79;;:::i;:::-;6023:2;6181:1;6206:53;6251:7;6242:6;6231:9;6227:22;6206:53;:::i;:::-;6196:63;;6152:117;6013:263;;;;:::o;6282:351::-;6352:6;6401:2;6389:9;6380:7;6376:23;6372:32;6369:2;;;6407:79;;:::i;:::-;6369:2;6527:1;6552:64;6608:7;6599:6;6588:9;6584:22;6552:64;:::i;:::-;6542:74;;6498:128;6359:274;;;;:::o;6639:474::-;6707:6;6715;6764:2;6752:9;6743:7;6739:23;6735:32;6732:2;;;6770:79;;:::i;:::-;6732:2;6890:1;6915:53;6960:7;6951:6;6940:9;6936:22;6915:53;:::i;:::-;6905:63;;6861:117;7017:2;7043:53;7088:7;7079:6;7068:9;7064:22;7043:53;:::i;:::-;7033:63;;6988:118;6722:391;;;;;:::o;7119:799::-;7206:6;7214;7222;7271:2;7259:9;7250:7;7246:23;7242:32;7239:2;;;7277:79;;:::i;:::-;7239:2;7397:1;7422:53;7467:7;7458:6;7447:9;7443:22;7422:53;:::i;:::-;7412:63;;7368:117;7552:2;7541:9;7537:18;7524:32;7583:18;7575:6;7572:30;7569:2;;;7605:79;;:::i;:::-;7569:2;7710:63;7765:7;7756:6;7745:9;7741:22;7710:63;:::i;:::-;7700:73;;7495:288;7822:2;7848:53;7893:7;7884:6;7873:9;7869:22;7848:53;:::i;:::-;7838:63;;7793:118;7229:689;;;;;:::o;7924:108::-;8001:24;8019:5;8001:24;:::i;:::-;7996:3;7989:37;7979:53;;:::o;8038:118::-;8125:24;8143:5;8125:24;:::i;:::-;8120:3;8113:37;8103:53;;:::o;8162:99::-;8233:21;8248:5;8233:21;:::i;:::-;8228:3;8221:34;8211:50;;:::o;8267:109::-;8348:21;8363:5;8348:21;:::i;:::-;8343:3;8336:34;8326:50;;:::o;8382:118::-;8469:24;8487:5;8469:24;:::i;:::-;8464:3;8457:37;8447:53;;:::o;8506:115::-;8591:23;8608:5;8591:23;:::i;:::-;8586:3;8579:36;8569:52;;:::o;8627:360::-;8713:3;8741:38;8773:5;8741:38;:::i;:::-;8795:70;8858:6;8853:3;8795:70;:::i;:::-;8788:77;;8874:52;8919:6;8914:3;8907:4;8900:5;8896:16;8874:52;:::i;:::-;8951:29;8973:6;8951:29;:::i;:::-;8946:3;8942:39;8935:46;;8717:270;;;;;:::o;8993:216::-;9121:81;9141:60;9195:5;9141:60;:::i;:::-;9121:81;:::i;:::-;9116:3;9109:94;9099:110;;:::o;9215:344::-;9293:3;9321:39;9354:5;9321:39;:::i;:::-;9376:61;9430:6;9425:3;9376:61;:::i;:::-;9369:68;;9446:52;9491:6;9486:3;9479:4;9472:5;9468:16;9446:52;:::i;:::-;9523:29;9545:6;9523:29;:::i;:::-;9518:3;9514:39;9507:46;;9297:262;;;;;:::o;9565:364::-;9653:3;9681:39;9714:5;9681:39;:::i;:::-;9736:71;9800:6;9795:3;9736:71;:::i;:::-;9729:78;;9816:52;9861:6;9856:3;9849:4;9842:5;9838:16;9816:52;:::i;:::-;9893:29;9915:6;9893:29;:::i;:::-;9888:3;9884:39;9877:46;;9657:272;;;;;:::o;9959:845::-;10062:3;10099:5;10093:12;10128:36;10154:9;10128:36;:::i;:::-;10180:89;10262:6;10257:3;10180:89;:::i;:::-;10173:96;;10300:1;10289:9;10285:17;10316:1;10311:137;;;;10462:1;10457:341;;;;10278:520;;10311:137;10395:4;10391:9;10380;10376:25;10371:3;10364:38;10431:6;10426:3;10422:16;10415:23;;10311:137;;10457:341;10524:38;10556:5;10524:38;:::i;:::-;10584:1;10598:154;10612:6;10609:1;10606:13;10598:154;;;10686:7;10680:14;10676:1;10671:3;10667:11;10660:35;10736:1;10727:7;10723:15;10712:26;;10634:4;10631:1;10627:12;10622:17;;10598:154;;;10781:6;10776:3;10772:16;10765:23;;10464:334;;10278:520;;10066:738;;;;;;:::o;10810:366::-;10952:3;10973:67;11037:2;11032:3;10973:67;:::i;:::-;10966:74;;11049:93;11138:3;11049:93;:::i;:::-;11167:2;11162:3;11158:12;11151:19;;10956:220;;;:::o;11182:366::-;11324:3;11345:67;11409:2;11404:3;11345:67;:::i;:::-;11338:74;;11421:93;11510:3;11421:93;:::i;:::-;11539:2;11534:3;11530:12;11523:19;;11328:220;;;:::o;11554:366::-;11696:3;11717:67;11781:2;11776:3;11717:67;:::i;:::-;11710:74;;11793:93;11882:3;11793:93;:::i;:::-;11911:2;11906:3;11902:12;11895:19;;11700:220;;;:::o;11926:366::-;12068:3;12089:67;12153:2;12148:3;12089:67;:::i;:::-;12082:74;;12165:93;12254:3;12165:93;:::i;:::-;12283:2;12278:3;12274:12;12267:19;;12072:220;;;:::o;12298:400::-;12458:3;12479:84;12561:1;12556:3;12479:84;:::i;:::-;12472:91;;12572:93;12661:3;12572:93;:::i;:::-;12690:1;12685:3;12681:11;12674:18;;12462:236;;;:::o;12704:366::-;12846:3;12867:67;12931:2;12926:3;12867:67;:::i;:::-;12860:74;;12943:93;13032:3;12943:93;:::i;:::-;13061:2;13056:3;13052:12;13045:19;;12850:220;;;:::o;13076:366::-;13218:3;13239:67;13303:2;13298:3;13239:67;:::i;:::-;13232:74;;13315:93;13404:3;13315:93;:::i;:::-;13433:2;13428:3;13424:12;13417:19;;13222:220;;;:::o;13448:366::-;13590:3;13611:67;13675:2;13670:3;13611:67;:::i;:::-;13604:74;;13687:93;13776:3;13687:93;:::i;:::-;13805:2;13800:3;13796:12;13789:19;;13594:220;;;:::o;13820:366::-;13962:3;13983:67;14047:2;14042:3;13983:67;:::i;:::-;13976:74;;14059:93;14148:3;14059:93;:::i;:::-;14177:2;14172:3;14168:12;14161:19;;13966:220;;;:::o;14192:366::-;14334:3;14355:67;14419:2;14414:3;14355:67;:::i;:::-;14348:74;;14431:93;14520:3;14431:93;:::i;:::-;14549:2;14544:3;14540:12;14533:19;;14338:220;;;:::o;14564:366::-;14706:3;14727:67;14791:2;14786:3;14727:67;:::i;:::-;14720:74;;14803:93;14892:3;14803:93;:::i;:::-;14921:2;14916:3;14912:12;14905:19;;14710:220;;;:::o;14936:366::-;15078:3;15099:67;15163:2;15158:3;15099:67;:::i;:::-;15092:74;;15175:93;15264:3;15175:93;:::i;:::-;15293:2;15288:3;15284:12;15277:19;;15082:220;;;:::o;15308:402::-;15468:3;15489:85;15571:2;15566:3;15489:85;:::i;:::-;15482:92;;15583:93;15672:3;15583:93;:::i;:::-;15701:2;15696:3;15692:12;15685:19;;15472:238;;;:::o;15716:366::-;15858:3;15879:67;15943:2;15938:3;15879:67;:::i;:::-;15872:74;;15955:93;16044:3;15955:93;:::i;:::-;16073:2;16068:3;16064:12;16057:19;;15862:220;;;:::o;16088:366::-;16230:3;16251:67;16315:2;16310:3;16251:67;:::i;:::-;16244:74;;16327:93;16416:3;16327:93;:::i;:::-;16445:2;16440:3;16436:12;16429:19;;16234:220;;;:::o;16460:400::-;16620:3;16641:84;16723:1;16718:3;16641:84;:::i;:::-;16634:91;;16734:93;16823:3;16734:93;:::i;:::-;16852:1;16847:3;16843:11;16836:18;;16624:236;;;:::o;16866:366::-;17008:3;17029:67;17093:2;17088:3;17029:67;:::i;:::-;17022:74;;17105:93;17194:3;17105:93;:::i;:::-;17223:2;17218:3;17214:12;17207:19;;17012:220;;;:::o;17238:400::-;17398:3;17419:84;17501:1;17496:3;17419:84;:::i;:::-;17412:91;;17512:93;17601:3;17512:93;:::i;:::-;17630:1;17625:3;17621:11;17614:18;;17402:236;;;:::o;17706:1512::-;17827:3;17863:4;17858:3;17854:14;17956:4;17949:5;17945:16;17939:23;17975:63;18032:4;18027:3;18023:14;18009:12;17975:63;:::i;:::-;17878:170;18130:4;18123:5;18119:16;18113:23;18183:3;18177:4;18173:14;18166:4;18161:3;18157:14;18150:38;18209:73;18277:4;18263:12;18209:73;:::i;:::-;18201:81;;18058:235;18378:4;18371:5;18367:16;18361:23;18397:63;18454:4;18449:3;18445:14;18431:12;18397:63;:::i;:::-;18303:167;18554:4;18547:5;18543:16;18537:23;18573:63;18630:4;18625:3;18621:14;18607:12;18573:63;:::i;:::-;18480:166;18743:4;18736:5;18732:16;18726:23;18762:63;18819:4;18814:3;18810:14;18796:12;18762:63;:::i;:::-;18656:179;18927:4;18920:5;18916:16;18910:23;18946:63;19003:4;18998:3;18994:14;18980:12;18946:63;:::i;:::-;18845:174;19105:4;19098:5;19094:16;19088:23;19124:57;19175:4;19170:3;19166:14;19152:12;19124:57;:::i;:::-;19029:162;19208:4;19201:11;;17832:1386;;;;;:::o;19224:108::-;19301:24;19319:5;19301:24;:::i;:::-;19296:3;19289:37;19279:53;;:::o;19338:118::-;19425:24;19443:5;19425:24;:::i;:::-;19420:3;19413:37;19403:53;;:::o;19462:157::-;19567:45;19587:24;19605:5;19587:24;:::i;:::-;19567:45;:::i;:::-;19562:3;19555:58;19545:74;;:::o;19625:443::-;19788:3;19803:98;19897:3;19888:6;19803:98;:::i;:::-;19926:2;19921:3;19917:12;19910:19;;19939:75;20010:3;20001:6;19939:75;:::i;:::-;20039:2;20034:3;20030:12;20023:19;;20059:3;20052:10;;19792:276;;;;;:::o;20074:676::-;20332:3;20354:92;20442:3;20433:6;20354:92;:::i;:::-;20347:99;;20463:148;20607:3;20463:148;:::i;:::-;20456:155;;20621:75;20692:3;20683:6;20621:75;:::i;:::-;20721:2;20716:3;20712:12;20705:19;;20741:3;20734:10;;20336:414;;;;;:::o;20756:1349::-;21244:3;21266:92;21354:3;21345:6;21266:92;:::i;:::-;21259:99;;21375:148;21519:3;21375:148;:::i;:::-;21368:155;;21533:75;21604:3;21595:6;21533:75;:::i;:::-;21633:2;21628:3;21624:12;21617:19;;21653:148;21797:3;21653:148;:::i;:::-;21646:155;;21811:75;21882:3;21873:6;21811:75;:::i;:::-;21911:2;21906:3;21902:12;21895:19;;21931:148;22075:3;21931:148;:::i;:::-;21924:155;;22096:3;22089:10;;21248:857;;;;;;:::o;22111:222::-;22204:4;22242:2;22231:9;22227:18;22219:26;;22255:71;22323:1;22312:9;22308:17;22299:6;22255:71;:::i;:::-;22209:124;;;;:::o;22339:332::-;22460:4;22498:2;22487:9;22483:18;22475:26;;22511:71;22579:1;22568:9;22564:17;22555:6;22511:71;:::i;:::-;22592:72;22660:2;22649:9;22645:18;22636:6;22592:72;:::i;:::-;22465:206;;;;;:::o;22677:1080::-;22982:4;23020:3;23009:9;23005:19;22997:27;;23034:71;23102:1;23091:9;23087:17;23078:6;23034:71;:::i;:::-;23115:72;23183:2;23172:9;23168:18;23159:6;23115:72;:::i;:::-;23197;23265:2;23254:9;23250:18;23241:6;23197:72;:::i;:::-;23279;23347:2;23336:9;23332:18;23323:6;23279:72;:::i;:::-;23361:71;23427:3;23416:9;23412:19;23403:6;23361:71;:::i;:::-;23442:73;23510:3;23499:9;23495:19;23486:6;23442:73;:::i;:::-;23525;23593:3;23582:9;23578:19;23569:6;23525:73;:::i;:::-;23646:9;23640:4;23636:20;23630:3;23619:9;23615:19;23608:49;23674:76;23745:4;23736:6;23674:76;:::i;:::-;23666:84;;22987:770;;;;;;;;;;;:::o;23763:529::-;23930:4;23968:2;23957:9;23953:18;23945:26;;23981:71;24049:1;24038:9;24034:17;24025:6;23981:71;:::i;:::-;24062:72;24130:2;24119:9;24115:18;24106:6;24062:72;:::i;:::-;24181:9;24175:4;24171:20;24166:2;24155:9;24151:18;24144:48;24209:76;24280:4;24271:6;24209:76;:::i;:::-;24201:84;;23935:357;;;;;;:::o;24298:210::-;24385:4;24423:2;24412:9;24408:18;24400:26;;24436:65;24498:1;24487:9;24483:17;24474:6;24436:65;:::i;:::-;24390:118;;;;:::o;24514:222::-;24607:4;24645:2;24634:9;24630:18;24622:26;;24658:71;24726:1;24715:9;24711:17;24702:6;24658:71;:::i;:::-;24612:124;;;;:::o;24742:549::-;24917:4;24955:3;24944:9;24940:19;24932:27;;24969:71;25037:1;25026:9;25022:17;25013:6;24969:71;:::i;:::-;25050:72;25118:2;25107:9;25103:18;25094:6;25050:72;:::i;:::-;25132:70;25198:2;25187:9;25183:18;25174:6;25132:70;:::i;:::-;25212:72;25280:2;25269:9;25265:18;25256:6;25212:72;:::i;:::-;24922:369;;;;;;;:::o;25297:313::-;25410:4;25448:2;25437:9;25433:18;25425:26;;25497:9;25491:4;25487:20;25483:1;25472:9;25468:17;25461:47;25525:78;25598:4;25589:6;25525:78;:::i;:::-;25517:86;;25415:195;;;;:::o;25616:419::-;25782:4;25820:2;25809:9;25805:18;25797:26;;25869:9;25863:4;25859:20;25855:1;25844:9;25840:17;25833:47;25897:131;26023:4;25897:131;:::i;:::-;25889:139;;25787:248;;;:::o;26041:419::-;26207:4;26245:2;26234:9;26230:18;26222:26;;26294:9;26288:4;26284:20;26280:1;26269:9;26265:17;26258:47;26322:131;26448:4;26322:131;:::i;:::-;26314:139;;26212:248;;;:::o;26466:419::-;26632:4;26670:2;26659:9;26655:18;26647:26;;26719:9;26713:4;26709:20;26705:1;26694:9;26690:17;26683:47;26747:131;26873:4;26747:131;:::i;:::-;26739:139;;26637:248;;;:::o;26891:419::-;27057:4;27095:2;27084:9;27080:18;27072:26;;27144:9;27138:4;27134:20;27130:1;27119:9;27115:17;27108:47;27172:131;27298:4;27172:131;:::i;:::-;27164:139;;27062:248;;;:::o;27316:419::-;27482:4;27520:2;27509:9;27505:18;27497:26;;27569:9;27563:4;27559:20;27555:1;27544:9;27540:17;27533:47;27597:131;27723:4;27597:131;:::i;:::-;27589:139;;27487:248;;;:::o;27741:419::-;27907:4;27945:2;27934:9;27930:18;27922:26;;27994:9;27988:4;27984:20;27980:1;27969:9;27965:17;27958:47;28022:131;28148:4;28022:131;:::i;:::-;28014:139;;27912:248;;;:::o;28166:419::-;28332:4;28370:2;28359:9;28355:18;28347:26;;28419:9;28413:4;28409:20;28405:1;28394:9;28390:17;28383:47;28447:131;28573:4;28447:131;:::i;:::-;28439:139;;28337:248;;;:::o;28591:419::-;28757:4;28795:2;28784:9;28780:18;28772:26;;28844:9;28838:4;28834:20;28830:1;28819:9;28815:17;28808:47;28872:131;28998:4;28872:131;:::i;:::-;28864:139;;28762:248;;;:::o;29016:419::-;29182:4;29220:2;29209:9;29205:18;29197:26;;29269:9;29263:4;29259:20;29255:1;29244:9;29240:17;29233:47;29297:131;29423:4;29297:131;:::i;:::-;29289:139;;29187:248;;;:::o;29441:419::-;29607:4;29645:2;29634:9;29630:18;29622:26;;29694:9;29688:4;29684:20;29680:1;29669:9;29665:17;29658:47;29722:131;29848:4;29722:131;:::i;:::-;29714:139;;29612:248;;;:::o;29866:419::-;30032:4;30070:2;30059:9;30055:18;30047:26;;30119:9;30113:4;30109:20;30105:1;30094:9;30090:17;30083:47;30147:131;30273:4;30147:131;:::i;:::-;30139:139;;30037:248;;;:::o;30291:419::-;30457:4;30495:2;30484:9;30480:18;30472:26;;30544:9;30538:4;30534:20;30530:1;30519:9;30515:17;30508:47;30572:131;30698:4;30572:131;:::i;:::-;30564:139;;30462:248;;;:::o;30716:419::-;30882:4;30920:2;30909:9;30905:18;30897:26;;30969:9;30963:4;30959:20;30955:1;30944:9;30940:17;30933:47;30997:131;31123:4;30997:131;:::i;:::-;30989:139;;30887:248;;;:::o;31141:419::-;31307:4;31345:2;31334:9;31330:18;31322:26;;31394:9;31388:4;31384:20;31380:1;31369:9;31365:17;31358:47;31422:131;31548:4;31422:131;:::i;:::-;31414:139;;31312:248;;;:::o;31566:377::-;31711:4;31749:2;31738:9;31734:18;31726:26;;31798:9;31792:4;31788:20;31784:1;31773:9;31769:17;31762:47;31826:110;31931:4;31922:6;31826:110;:::i;:::-;31818:118;;31716:227;;;;:::o;31949:222::-;32042:4;32080:2;32069:9;32065:18;32057:26;;32093:71;32161:1;32150:9;32146:17;32137:6;32093:71;:::i;:::-;32047:124;;;;:::o;32177:332::-;32298:4;32336:2;32325:9;32321:18;32313:26;;32349:71;32417:1;32406:9;32402:17;32393:6;32349:71;:::i;:::-;32430:72;32498:2;32487:9;32483:18;32474:6;32430:72;:::i;:::-;32303:206;;;;;:::o;32515:442::-;32664:4;32702:2;32691:9;32687:18;32679:26;;32715:71;32783:1;32772:9;32768:17;32759:6;32715:71;:::i;:::-;32796:72;32864:2;32853:9;32849:18;32840:6;32796:72;:::i;:::-;32878;32946:2;32935:9;32931:18;32922:6;32878:72;:::i;:::-;32669:288;;;;;;:::o;32963:129::-;32997:6;33024:20;;:::i;:::-;33014:30;;33053:33;33081:4;33073:6;33053:33;:::i;:::-;33004:88;;;:::o;33098:75::-;33131:6;33164:2;33158:9;33148:19;;33138:35;:::o;33179:308::-;33241:4;33331:18;33323:6;33320:30;33317:2;;;33353:18;;:::i;:::-;33317:2;33391:29;33413:6;33391:29;:::i;:::-;33383:37;;33475:4;33469;33465:15;33457:23;;33246:241;;;:::o;33493:141::-;33542:4;33565:3;33557:11;;33588:3;33585:1;33578:14;33622:4;33619:1;33609:18;33601:26;;33547:87;;;:::o;33640:98::-;33691:6;33725:5;33719:12;33709:22;;33698:40;;;:::o;33744:99::-;33796:6;33830:5;33824:12;33814:22;;33803:40;;;:::o;33849:168::-;33932:11;33966:6;33961:3;33954:19;34006:4;34001:3;33997:14;33982:29;;33944:73;;;;:::o;34023:159::-;34097:11;34131:6;34126:3;34119:19;34171:4;34166:3;34162:14;34147:29;;34109:73;;;;:::o;34188:169::-;34272:11;34306:6;34301:3;34294:19;34346:4;34341:3;34337:14;34322:29;;34284:73;;;;:::o;34363:148::-;34465:11;34502:3;34487:18;;34477:34;;;;:::o;34517:305::-;34557:3;34576:20;34594:1;34576:20;:::i;:::-;34571:25;;34610:20;34628:1;34610:20;:::i;:::-;34605:25;;34764:1;34696:66;34692:74;34689:1;34686:81;34683:2;;;34770:18;;:::i;:::-;34683:2;34814:1;34811;34807:9;34800:16;;34561:261;;;;:::o;34828:185::-;34868:1;34885:20;34903:1;34885:20;:::i;:::-;34880:25;;34919:20;34937:1;34919:20;:::i;:::-;34914:25;;34958:1;34948:2;;34963:18;;:::i;:::-;34948:2;35005:1;35002;34998:9;34993:14;;34870:143;;;;:::o;35019:848::-;35080:5;35087:4;35111:6;35102:15;;35135:5;35126:14;;35149:712;35170:1;35160:8;35157:15;35149:712;;;35265:4;35260:3;35256:14;35250:4;35247:24;35244:2;;;35274:18;;:::i;:::-;35244:2;35324:1;35314:8;35310:16;35307:2;;;35739:4;35732:5;35728:16;35719:25;;35307:2;35789:4;35783;35779:15;35771:23;;35819:32;35842:8;35819:32;:::i;:::-;35807:44;;35149:712;;;35092:775;;;;;;;:::o;35873:285::-;35933:5;35957:23;35975:4;35957:23;:::i;:::-;35949:31;;36001:27;36019:8;36001:27;:::i;:::-;35989:39;;36047:104;36084:66;36074:8;36068:4;36047:104;:::i;:::-;36038:113;;35939:219;;;;:::o;36164:1073::-;36218:5;36409:8;36399:2;;36430:1;36421:10;;36432:5;;36399:2;36458:4;36448:2;;36475:1;36466:10;;36477:5;;36448:2;36544:4;36592:1;36587:27;;;;36628:1;36623:191;;;;36537:277;;36587:27;36605:1;36596:10;;36607:5;;;36623:191;36668:3;36658:8;36655:17;36652:2;;;36675:18;;:::i;:::-;36652:2;36724:8;36721:1;36717:16;36708:25;;36759:3;36752:5;36749:14;36746:2;;;36766:18;;:::i;:::-;36746:2;36799:5;;;36537:277;;36923:2;36913:8;36910:16;36904:3;36898:4;36895:13;36891:36;36873:2;36863:8;36860:16;36855:2;36849:4;36846:12;36842:35;36826:111;36823:2;;;36979:8;36973:4;36969:19;36960:28;;37014:3;37007:5;37004:14;37001:2;;;37021:18;;:::i;:::-;37001:2;37054:5;;36823:2;37094:42;37132:3;37122:8;37116:4;37113:1;37094:42;:::i;:::-;37079:57;;;;37168:4;37163:3;37159:14;37152:5;37149:25;37146:2;;;37177:18;;:::i;:::-;37146:2;37226:4;37219:5;37215:16;37206:25;;36224:1013;;;;;;:::o;37243:348::-;37283:7;37306:20;37324:1;37306:20;:::i;:::-;37301:25;;37340:20;37358:1;37340:20;:::i;:::-;37335:25;;37528:1;37460:66;37456:74;37453:1;37450:81;37445:1;37438:9;37431:17;37427:105;37424:2;;;37535:18;;:::i;:::-;37424:2;37583:1;37580;37576:9;37565:20;;37291:300;;;;:::o;37597:191::-;37637:4;37657:20;37675:1;37657:20;:::i;:::-;37652:25;;37691:20;37709:1;37691:20;:::i;:::-;37686:25;;37730:1;37727;37724:8;37721:2;;;37735:18;;:::i;:::-;37721:2;37780:1;37777;37773:9;37765:17;;37642:146;;;;:::o;37794:96::-;37831:7;37860:24;37878:5;37860:24;:::i;:::-;37849:35;;37839:51;;;:::o;37896:90::-;37930:7;37973:5;37966:13;37959:21;37948:32;;37938:48;;;:::o;37992:77::-;38029:7;38058:5;38047:16;;38037:32;;;:::o;38075:149::-;38111:7;38151:66;38144:5;38140:78;38129:89;;38119:105;;;:::o;38230:126::-;38267:7;38307:42;38300:5;38296:54;38285:65;;38275:81;;;:::o;38362:77::-;38399:7;38428:5;38417:16;;38407:32;;;:::o;38445:172::-;38518:9;38551:60;38605:5;38551:60;:::i;:::-;38538:73;;38528:89;;;:::o;38623:136::-;38696:9;38729:24;38747:5;38729:24;:::i;:::-;38716:37;;38706:53;;;:::o;38765:154::-;38849:6;38844:3;38839;38826:30;38911:1;38902:6;38897:3;38893:16;38886:27;38816:103;;;:::o;38925:307::-;38993:1;39003:113;39017:6;39014:1;39011:13;39003:113;;;39102:1;39097:3;39093:11;39087:18;39083:1;39078:3;39074:11;39067:39;39039:2;39036:1;39032:10;39027:15;;39003:113;;;39134:6;39131:1;39128:13;39125:2;;;39214:1;39205:6;39200:3;39196:16;39189:27;39125:2;38974:258;;;;:::o;39238:320::-;39282:6;39319:1;39313:4;39309:12;39299:22;;39366:1;39360:4;39356:12;39387:18;39377:2;;39443:4;39435:6;39431:17;39421:27;;39377:2;39505;39497:6;39494:14;39474:18;39471:38;39468:2;;;39524:18;;:::i;:::-;39468:2;39289:269;;;;:::o;39564:281::-;39647:27;39669:4;39647:27;:::i;:::-;39639:6;39635:40;39777:6;39765:10;39762:22;39741:18;39729:10;39726:34;39723:62;39720:2;;;39788:18;;:::i;:::-;39720:2;39828:10;39824:2;39817:22;39607:238;;;:::o;39851:233::-;39890:3;39913:24;39931:5;39913:24;:::i;:::-;39904:33;;39959:66;39952:5;39949:77;39946:2;;;40029:18;;:::i;:::-;39946:2;40076:1;40069:5;40065:13;40058:20;;39894:190;;;:::o;40090:100::-;40129:7;40158:26;40178:5;40158:26;:::i;:::-;40147:37;;40137:53;;;:::o;40196:94::-;40235:7;40264:20;40278:5;40264:20;:::i;:::-;40253:31;;40243:47;;;:::o;40296:79::-;40335:7;40364:5;40353:16;;40343:32;;;:::o;40381:176::-;40413:1;40430:20;40448:1;40430:20;:::i;:::-;40425:25;;40464:20;40482:1;40464:20;:::i;:::-;40459:25;;40503:1;40493:2;;40508:18;;:::i;:::-;40493:2;40549:1;40546;40542:9;40537:14;;40415:142;;;;:::o;40563:180::-;40611:77;40608:1;40601:88;40708:4;40705:1;40698:15;40732:4;40729:1;40722:15;40749:180;40797:77;40794:1;40787:88;40894:4;40891:1;40884:15;40918:4;40915:1;40908:15;40935:180;40983:77;40980:1;40973:88;41080:4;41077:1;41070:15;41104:4;41101:1;41094:15;41121:180;41169:77;41166:1;41159:88;41266:4;41263:1;41256:15;41290:4;41287:1;41280:15;41307:180;41355:77;41352:1;41345:88;41452:4;41449:1;41442:15;41476:4;41473:1;41466:15;41493:180;41541:77;41538:1;41531:88;41638:4;41635:1;41628:15;41662:4;41659:1;41652:15;41679:117;41788:1;41785;41778:12;41802:117;41911:1;41908;41901:12;41925:117;42034:1;42031;42024:12;42048:117;42157:1;42154;42147:12;42171:117;42280:1;42277;42270:12;42294:117;42403:1;42400;42393:12;42417:102;42458:6;42509:2;42505:7;42500:2;42493:5;42489:14;42485:28;42475:38;;42465:54;;;:::o;42525:94::-;42558:8;42606:5;42602:2;42598:14;42577:35;;42567:52;;;:::o;42625:102::-;42667:8;42714:5;42711:1;42707:13;42686:34;;42676:51;;;:::o;42733:168::-;42873:20;42869:1;42861:6;42857:14;42850:44;42839:62;:::o;42907:233::-;43047:34;43043:1;43035:6;43031:14;43024:58;43116:16;43111:2;43103:6;43099:15;43092:41;43013:127;:::o;43146:225::-;43286:34;43282:1;43274:6;43270:14;43263:58;43355:8;43350:2;43342:6;43338:15;43331:33;43252:119;:::o;43377:222::-;43517:34;43513:1;43505:6;43501:14;43494:58;43586:5;43581:2;43573:6;43569:15;43562:30;43483:116;:::o;43605:157::-;43745:9;43741:1;43733:6;43729:14;43722:33;43711:51;:::o;43768:166::-;43908:18;43904:1;43896:6;43892:14;43885:42;43874:60;:::o;43940:168::-;44080:20;44076:1;44068:6;44064:14;44057:44;44046:62;:::o;44114:182::-;44254:34;44250:1;44242:6;44238:14;44231:58;44220:76;:::o;44302:173::-;44442:25;44438:1;44430:6;44426:14;44419:49;44408:67;:::o;44481:182::-;44621:34;44617:1;44609:6;44605:14;44598:58;44587:76;:::o;44669:177::-;44809:29;44805:1;44797:6;44793:14;44786:53;44775:71;:::o;44852:249::-;44992:34;44988:1;44980:6;44976:14;44969:58;45061:32;45056:2;45048:6;45044:15;45037:57;44958:143;:::o;45107:160::-;45247:12;45243:1;45235:6;45231:14;45224:36;45213:54;:::o;45273:180::-;45413:32;45409:1;45401:6;45397:14;45390:56;45379:74;:::o;45459:227::-;45599:34;45595:1;45587:6;45583:14;45576:58;45668:10;45663:2;45655:6;45651:15;45644:35;45565:121;:::o;45692:158::-;45832:10;45828:1;45820:6;45816:14;45809:34;45798:52;:::o;45856:221::-;45996:34;45992:1;45984:6;45980:14;45973:58;46065:4;46060:2;46052:6;46048:15;46041:29;45962:115;:::o;46083:158::-;46223:10;46219:1;46211:6;46207:14;46200:34;46189:52;:::o;46247:122::-;46320:24;46338:5;46320:24;:::i;:::-;46313:5;46310:35;46300:2;;46359:1;46356;46349:12;46300:2;46290:79;:::o;46375:116::-;46445:21;46460:5;46445:21;:::i;:::-;46438:5;46435:32;46425:2;;46481:1;46478;46471:12;46425:2;46415:76;:::o;46497:122::-;46570:24;46588:5;46570:24;:::i;:::-;46563:5;46560:35;46550:2;;46609:1;46606;46599:12;46550:2;46540:79;:::o;46625:120::-;46697:23;46714:5;46697:23;:::i;:::-;46690:5;46687:34;46677:2;;46735:1;46732;46725:12;46677:2;46667:78;:::o;46751:122::-;46824:24;46842:5;46824:24;:::i;:::-;46817:5;46814:35;46804:2;;46863:1;46860;46853:12;46804:2;46794:79;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"3367600","executionCost":"infinite","totalCost":"infinite"},"external":{"MAX_TREASURY_FEE()":"417","addUser(uint256,address)":"infinite","cancelRequest(bytes32,uint256,bytes4,uint256)":"infinite","claimCampaignContribution(uint256,string,uint256)":"infinite","claimCampaignRetribution(uint256)":"infinite","closeCampaign(uint256)":"infinite","createCampaign(string,uint256,uint256,uint256)":"infinite","fulfillSignUp(bytes32,uint256,bool)":"infinite","getCampaign(uint256)":"infinite","getSignUpURI(uint256)":"infinite","getTwitterURI(uint256)":"infinite","hasSignedUp()":"infinite","hasSignedUp(uint256)":"infinite","jobId()":"infinite","keeper()":"2581","owner()":"2661","paused()":"2502","renounceOwnership()":"30591","requestBaseURI()":"infinite","setRequestBaseURI(string)":"infinite","signUp(uint256)":"infinite","transferOwnership(address)":"30983","treasuryAmount()":"2497","treasuryFee()":"2496","withdrawLink()":"infinite"},"internal":{"_addPartakerToCampaignContributors(uint256,address)":"infinite","_computeRetributionAmount(uint256)":"infinite","_getCampaign(uint256)":"112","_requestSignUp(uint256)":"infinite","_updateContributorClaimStatus(uint256)":"24470","_validateContributionClaim(uint256,string memory,uint256)":"2287"}},"methodIdentifiers":{"MAX_TREASURY_FEE()":"f2b3c809","addUser(uint256,address)":"58d9fa04","cancelRequest(bytes32,uint256,bytes4,uint256)":"ec65d0f8","claimCampaignContribution(uint256,string,uint256)":"b1d3c700","claimCampaignRetribution(uint256)":"4a732795","closeCampaign(uint256)":"b0e1c1e1","createCampaign(string,uint256,uint256,uint256)":"b5a898ae","fulfillSignUp(bytes32,uint256,bool)":"a4e336c3","getCampaign(uint256)":"5598f8cc","getSignUpURI(uint256)":"aa2bdef9","getTwitterURI(uint256)":"0a944292","hasSignedUp()":"5ec4bc38","hasSignedUp(uint256)":"a9654ad4","jobId()":"c2939d97","keeper()":"aced1661","owner()":"8da5cb5b","paused()":"5c975abb","renounceOwnership()":"715018a6","requestBaseURI()":"dc4d5efb","setRequestBaseURI(string)":"ec8f04e9","signUp(uint256)":"1fc645c7","transferOwnership(address)":"f2fde38b","treasuryAmount()":"368acb09","treasuryFee()":"cc32d176","withdrawLink()":"8dc654a2"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_jobId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_requestBaseURI\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_link\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_treasuryFee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"campaignId\",\"type\":\"uint256\"}],\"name\":\"CampaignClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"campaignId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"company\",\"type\":\"address\"}],\"name\":\"CampaignCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"ChainlinkCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"ChainlinkFulfilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"ChainlinkRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"campaignId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contributor\",\"type\":\"address\"}],\"name\":\"ContributorAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"campaignId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contributor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"retribution\",\"type\":\"uint256\"}],\"name\":\"ContributorRetributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"}],\"name\":\"SignUpRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"SignedUp\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_TREASURY_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_userId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"addUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_requestId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_payment\",\"type\":\"uint256\"},{\"internalType\":\"bytes4\",\"name\":\"_callbackFunctionId\",\"type\":\"bytes4\"},{\"internalType\":\"uint256\",\"name\":\"_expiration\",\"type\":\"uint256\"}],\"name\":\"cancelRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"campaignId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"postId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"claimedCounter\",\"type\":\"uint256\"}],\"name\":\"claimCampaignContribution\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"campaignId\",\"type\":\"uint256\"}],\"name\":\"claimCampaignRetribution\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"campaignId\",\"type\":\"uint256\"}],\"name\":\"closeCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"budget\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"validationThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"partakersLimit\",\"type\":\"uint256\"}],\"name\":\"createCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_requestId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_userId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_hasSignedUp\",\"type\":\"bool\"}],\"name\":\"fulfillSignUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"campaignId\",\"type\":\"uint256\"}],\"name\":\"getCampaign\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"campaignId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"company\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"budget\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"validationThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"partakersLimit\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isClosed\",\"type\":\"bool\"}],\"internalType\":\"struct TwitterV1.Campaign\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_userId\",\"type\":\"uint256\"}],\"name\":\"getSignUpURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"_signUpURI\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_twitterId\",\"type\":\"uint256\"}],\"name\":\"getTwitterURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"_twitterURI\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasSignedUp\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_userId\",\"type\":\"uint256\"}],\"name\":\"hasSignedUp\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"jobId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"keeper\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestBaseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_requestBaseURI\",\"type\":\"string\"}],\"name\":\"setRequestBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_userId\",\"type\":\"uint256\"}],\"name\":\"signUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawLink\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addUser(uint256,address)\":{\"details\":\"only admin can call this function\"},\"cancelRequest(bytes32,uint256,bytes4,uint256)\":{\"details\":\"only admin can call this function\",\"params\":{\"_callbackFunctionId\":\"The bytes4 callback function ID specified for the request to cancel\",\"_expiration\":\"The expiration generated for the request to cancel\",\"_payment\":\"The payment specified for the request to cancel\",\"_requestId\":\"The ID that was generated for the request to cancel\"}},\"claimCampaignContribution(uint256,string,uint256)\":{\"params\":{\"campaignId\":\"- The id of the campaign\"}},\"closeCampaign(uint256)\":{\"params\":{\"campaignId\":\"- The id of the campaign\"}},\"createCampaign(string,uint256,uint256,uint256)\":{\"params\":{\"budget\":\"- Budget each winning partaker will share with each other\",\"partakersLimit\":\"- Maximum amount of winning partakers for this campaign\",\"validationThreshold\":\"- Minimum amount of retweet, likes etc for a partaker to win\"}},\"fulfillSignUp(bytes32,uint256,bool)\":{\"params\":{\"_hasSignedUp\":\"- true if  twitter userId match msg.sender address\",\"_requestId\":\"- id of the request\",\"_userId\":\"- twitter user id\"}},\"hasSignedUp(uint256)\":{\"params\":{\"_userId\":\"- twitter user id\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setRequestBaseURI(string)\":{\"details\":\"only admin can call this function\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawLink()\":{\"details\":\"only admin can call this function\"}},\"version\":1},\"userdoc\":{\"events\":{\"SignUpRequested(uint256,bytes32)\":{\"notice\":\"Called when a request to sign up is made\"},\"SignedUp(uint256,address)\":{\"notice\":\"Called when a user signed up\"}},\"kind\":\"user\",\"methods\":{\"addUser(uint256,address)\":{\"notice\":\"Add user to users list\"},\"cancelRequest(bytes32,uint256,bytes4,uint256)\":{\"notice\":\"Call this method if no response is received within 5 minutes\"},\"claimCampaignContribution(uint256,string,uint256)\":{\"notice\":\"Function that allows a user to validate his  to close a\"},\"closeCampaign(uint256)\":{\"notice\":\"Function that allows a company to close a\"},\"constructor\":{\"notice\":\"Initialize the link token and target oracle All testnets config : https://docs.chain.link/any-api/testnet-oracles/\"},\"createCampaign(string,uint256,uint256,uint256)\":{\"notice\":\"Function that allows a company to create a new campaign\"},\"fulfillSignUp(bytes32,uint256,bool)\":{\"notice\":\"Fulfill Sign Up request\"},\"getSignUpURI(uint256)\":{\"notice\":\"Return URI for sign up endpoint\"},\"getTwitterURI(uint256)\":{\"notice\":\"Return URI for twitter endpoint\"},\"hasSignedUp()\":{\"notice\":\"Check if caller has signed up\"},\"hasSignedUp(uint256)\":{\"notice\":\"Check if user has signed up\"},\"setRequestBaseURI(string)\":{\"notice\":\"Set requestBaseURI\"},\"signUp(uint256)\":{\"notice\":\"Function that allow user to sign up to twitter and claim won twitters\"},\"withdrawLink()\":{\"notice\":\"Witdraws LINK from the contract to the Owner\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/connectors/Twitter.sol\":\"TwitterV1\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/Chainlink.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {CBORChainlink} from \\\"./vendor/CBORChainlink.sol\\\";\\nimport {BufferChainlink} from \\\"./vendor/BufferChainlink.sol\\\";\\n\\n/**\\n * @title Library for common Chainlink functions\\n * @dev Uses imported CBOR library for encoding to buffer\\n */\\nlibrary Chainlink {\\n  uint256 internal constant defaultBufferSize = 256; // solhint-disable-line const-name-snakecase\\n\\n  using CBORChainlink for BufferChainlink.buffer;\\n\\n  struct Request {\\n    bytes32 id;\\n    address callbackAddress;\\n    bytes4 callbackFunctionId;\\n    uint256 nonce;\\n    BufferChainlink.buffer buf;\\n  }\\n\\n  /**\\n   * @notice Initializes a Chainlink request\\n   * @dev Sets the ID, callback address, and callback function signature on the request\\n   * @param self The uninitialized request\\n   * @param jobId The Job Specification ID\\n   * @param callbackAddr The callback address\\n   * @param callbackFunc The callback function signature\\n   * @return The initialized request\\n   */\\n  function initialize(\\n    Request memory self,\\n    bytes32 jobId,\\n    address callbackAddr,\\n    bytes4 callbackFunc\\n  ) internal pure returns (Chainlink.Request memory) {\\n    BufferChainlink.init(self.buf, defaultBufferSize);\\n    self.id = jobId;\\n    self.callbackAddress = callbackAddr;\\n    self.callbackFunctionId = callbackFunc;\\n    return self;\\n  }\\n\\n  /**\\n   * @notice Sets the data for the buffer without encoding CBOR on-chain\\n   * @dev CBOR can be closed with curly-brackets {} or they can be left off\\n   * @param self The initialized request\\n   * @param data The CBOR data\\n   */\\n  function setBuffer(Request memory self, bytes memory data) internal pure {\\n    BufferChainlink.init(self.buf, data.length);\\n    BufferChainlink.append(self.buf, data);\\n  }\\n\\n  /**\\n   * @notice Adds a string value to the request with a given key name\\n   * @param self The initialized request\\n   * @param key The name of the key\\n   * @param value The string value to add\\n   */\\n  function add(\\n    Request memory self,\\n    string memory key,\\n    string memory value\\n  ) internal pure {\\n    self.buf.encodeString(key);\\n    self.buf.encodeString(value);\\n  }\\n\\n  /**\\n   * @notice Adds a bytes value to the request with a given key name\\n   * @param self The initialized request\\n   * @param key The name of the key\\n   * @param value The bytes value to add\\n   */\\n  function addBytes(\\n    Request memory self,\\n    string memory key,\\n    bytes memory value\\n  ) internal pure {\\n    self.buf.encodeString(key);\\n    self.buf.encodeBytes(value);\\n  }\\n\\n  /**\\n   * @notice Adds a int256 value to the request with a given key name\\n   * @param self The initialized request\\n   * @param key The name of the key\\n   * @param value The int256 value to add\\n   */\\n  function addInt(\\n    Request memory self,\\n    string memory key,\\n    int256 value\\n  ) internal pure {\\n    self.buf.encodeString(key);\\n    self.buf.encodeInt(value);\\n  }\\n\\n  /**\\n   * @notice Adds a uint256 value to the request with a given key name\\n   * @param self The initialized request\\n   * @param key The name of the key\\n   * @param value The uint256 value to add\\n   */\\n  function addUint(\\n    Request memory self,\\n    string memory key,\\n    uint256 value\\n  ) internal pure {\\n    self.buf.encodeString(key);\\n    self.buf.encodeUInt(value);\\n  }\\n\\n  /**\\n   * @notice Adds an array of strings to the request with a given key name\\n   * @param self The initialized request\\n   * @param key The name of the key\\n   * @param values The array of string values to add\\n   */\\n  function addStringArray(\\n    Request memory self,\\n    string memory key,\\n    string[] memory values\\n  ) internal pure {\\n    self.buf.encodeString(key);\\n    self.buf.startArray();\\n    for (uint256 i = 0; i < values.length; i++) {\\n      self.buf.encodeString(values[i]);\\n    }\\n    self.buf.endSequence();\\n  }\\n}\\n\",\"keccak256\":\"0x3e133ddc69d0909fbe338c34b70cbf8dd262c70fd670b3632424c1858de25105\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/ChainlinkClient.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./Chainlink.sol\\\";\\nimport \\\"./interfaces/ENSInterface.sol\\\";\\nimport \\\"./interfaces/LinkTokenInterface.sol\\\";\\nimport \\\"./interfaces/ChainlinkRequestInterface.sol\\\";\\nimport \\\"./interfaces/OperatorInterface.sol\\\";\\nimport \\\"./interfaces/PointerInterface.sol\\\";\\nimport {ENSResolver as ENSResolver_Chainlink} from \\\"./vendor/ENSResolver.sol\\\";\\n\\n/**\\n * @title The ChainlinkClient contract\\n * @notice Contract writers can inherit this contract in order to create requests for the\\n * Chainlink network\\n */\\nabstract contract ChainlinkClient {\\n  using Chainlink for Chainlink.Request;\\n\\n  uint256 internal constant LINK_DIVISIBILITY = 10**18;\\n  uint256 private constant AMOUNT_OVERRIDE = 0;\\n  address private constant SENDER_OVERRIDE = address(0);\\n  uint256 private constant ORACLE_ARGS_VERSION = 1;\\n  uint256 private constant OPERATOR_ARGS_VERSION = 2;\\n  bytes32 private constant ENS_TOKEN_SUBNAME = keccak256(\\\"link\\\");\\n  bytes32 private constant ENS_ORACLE_SUBNAME = keccak256(\\\"oracle\\\");\\n  address private constant LINK_TOKEN_POINTER = 0xC89bD4E1632D3A43CB03AAAd5262cbe4038Bc571;\\n\\n  ENSInterface private s_ens;\\n  bytes32 private s_ensNode;\\n  LinkTokenInterface private s_link;\\n  OperatorInterface private s_oracle;\\n  uint256 private s_requestCount = 1;\\n  mapping(bytes32 => address) private s_pendingRequests;\\n\\n  event ChainlinkRequested(bytes32 indexed id);\\n  event ChainlinkFulfilled(bytes32 indexed id);\\n  event ChainlinkCancelled(bytes32 indexed id);\\n\\n  /**\\n   * @notice Creates a request that can hold additional parameters\\n   * @param specId The Job Specification ID that the request will be created for\\n   * @param callbackAddr address to operate the callback on\\n   * @param callbackFunctionSignature function signature to use for the callback\\n   * @return A Chainlink Request struct in memory\\n   */\\n  function buildChainlinkRequest(\\n    bytes32 specId,\\n    address callbackAddr,\\n    bytes4 callbackFunctionSignature\\n  ) internal pure returns (Chainlink.Request memory) {\\n    Chainlink.Request memory req;\\n    return req.initialize(specId, callbackAddr, callbackFunctionSignature);\\n  }\\n\\n  /**\\n   * @notice Creates a request that can hold additional parameters\\n   * @param specId The Job Specification ID that the request will be created for\\n   * @param callbackFunctionSignature function signature to use for the callback\\n   * @return A Chainlink Request struct in memory\\n   */\\n  function buildOperatorRequest(bytes32 specId, bytes4 callbackFunctionSignature)\\n    internal\\n    view\\n    returns (Chainlink.Request memory)\\n  {\\n    Chainlink.Request memory req;\\n    return req.initialize(specId, address(this), callbackFunctionSignature);\\n  }\\n\\n  /**\\n   * @notice Creates a Chainlink request to the stored oracle address\\n   * @dev Calls `chainlinkRequestTo` with the stored oracle address\\n   * @param req The initialized Chainlink Request\\n   * @param payment The amount of LINK to send for the request\\n   * @return requestId The request ID\\n   */\\n  function sendChainlinkRequest(Chainlink.Request memory req, uint256 payment) internal returns (bytes32) {\\n    return sendChainlinkRequestTo(address(s_oracle), req, payment);\\n  }\\n\\n  /**\\n   * @notice Creates a Chainlink request to the specified oracle address\\n   * @dev Generates and stores a request ID, increments the local nonce, and uses `transferAndCall` to\\n   * send LINK which creates a request on the target oracle contract.\\n   * Emits ChainlinkRequested event.\\n   * @param oracleAddress The address of the oracle for the request\\n   * @param req The initialized Chainlink Request\\n   * @param payment The amount of LINK to send for the request\\n   * @return requestId The request ID\\n   */\\n  function sendChainlinkRequestTo(\\n    address oracleAddress,\\n    Chainlink.Request memory req,\\n    uint256 payment\\n  ) internal returns (bytes32 requestId) {\\n    uint256 nonce = s_requestCount;\\n    s_requestCount = nonce + 1;\\n    bytes memory encodedRequest = abi.encodeWithSelector(\\n      ChainlinkRequestInterface.oracleRequest.selector,\\n      SENDER_OVERRIDE, // Sender value - overridden by onTokenTransfer by the requesting contract's address\\n      AMOUNT_OVERRIDE, // Amount value - overridden by onTokenTransfer by the actual amount of LINK sent\\n      req.id,\\n      address(this),\\n      req.callbackFunctionId,\\n      nonce,\\n      ORACLE_ARGS_VERSION,\\n      req.buf.buf\\n    );\\n    return _rawRequest(oracleAddress, nonce, payment, encodedRequest);\\n  }\\n\\n  /**\\n   * @notice Creates a Chainlink request to the stored oracle address\\n   * @dev This function supports multi-word response\\n   * @dev Calls `sendOperatorRequestTo` with the stored oracle address\\n   * @param req The initialized Chainlink Request\\n   * @param payment The amount of LINK to send for the request\\n   * @return requestId The request ID\\n   */\\n  function sendOperatorRequest(Chainlink.Request memory req, uint256 payment) internal returns (bytes32) {\\n    return sendOperatorRequestTo(address(s_oracle), req, payment);\\n  }\\n\\n  /**\\n   * @notice Creates a Chainlink request to the specified oracle address\\n   * @dev This function supports multi-word response\\n   * @dev Generates and stores a request ID, increments the local nonce, and uses `transferAndCall` to\\n   * send LINK which creates a request on the target oracle contract.\\n   * Emits ChainlinkRequested event.\\n   * @param oracleAddress The address of the oracle for the request\\n   * @param req The initialized Chainlink Request\\n   * @param payment The amount of LINK to send for the request\\n   * @return requestId The request ID\\n   */\\n  function sendOperatorRequestTo(\\n    address oracleAddress,\\n    Chainlink.Request memory req,\\n    uint256 payment\\n  ) internal returns (bytes32 requestId) {\\n    uint256 nonce = s_requestCount;\\n    s_requestCount = nonce + 1;\\n    bytes memory encodedRequest = abi.encodeWithSelector(\\n      OperatorInterface.operatorRequest.selector,\\n      SENDER_OVERRIDE, // Sender value - overridden by onTokenTransfer by the requesting contract's address\\n      AMOUNT_OVERRIDE, // Amount value - overridden by onTokenTransfer by the actual amount of LINK sent\\n      req.id,\\n      req.callbackFunctionId,\\n      nonce,\\n      OPERATOR_ARGS_VERSION,\\n      req.buf.buf\\n    );\\n    return _rawRequest(oracleAddress, nonce, payment, encodedRequest);\\n  }\\n\\n  /**\\n   * @notice Make a request to an oracle\\n   * @param oracleAddress The address of the oracle for the request\\n   * @param nonce used to generate the request ID\\n   * @param payment The amount of LINK to send for the request\\n   * @param encodedRequest data encoded for request type specific format\\n   * @return requestId The request ID\\n   */\\n  function _rawRequest(\\n    address oracleAddress,\\n    uint256 nonce,\\n    uint256 payment,\\n    bytes memory encodedRequest\\n  ) private returns (bytes32 requestId) {\\n    requestId = keccak256(abi.encodePacked(this, nonce));\\n    s_pendingRequests[requestId] = oracleAddress;\\n    emit ChainlinkRequested(requestId);\\n    require(s_link.transferAndCall(oracleAddress, payment, encodedRequest), \\\"unable to transferAndCall to oracle\\\");\\n  }\\n\\n  /**\\n   * @notice Allows a request to be cancelled if it has not been fulfilled\\n   * @dev Requires keeping track of the expiration value emitted from the oracle contract.\\n   * Deletes the request from the `pendingRequests` mapping.\\n   * Emits ChainlinkCancelled event.\\n   * @param requestId The request ID\\n   * @param payment The amount of LINK sent for the request\\n   * @param callbackFunc The callback function specified for the request\\n   * @param expiration The time of the expiration for the request\\n   */\\n  function cancelChainlinkRequest(\\n    bytes32 requestId,\\n    uint256 payment,\\n    bytes4 callbackFunc,\\n    uint256 expiration\\n  ) internal {\\n    OperatorInterface requested = OperatorInterface(s_pendingRequests[requestId]);\\n    delete s_pendingRequests[requestId];\\n    emit ChainlinkCancelled(requestId);\\n    requested.cancelOracleRequest(requestId, payment, callbackFunc, expiration);\\n  }\\n\\n  /**\\n   * @notice the next request count to be used in generating a nonce\\n   * @dev starts at 1 in order to ensure consistent gas cost\\n   * @return returns the next request count to be used in a nonce\\n   */\\n  function getNextRequestCount() internal view returns (uint256) {\\n    return s_requestCount;\\n  }\\n\\n  /**\\n   * @notice Sets the stored oracle address\\n   * @param oracleAddress The address of the oracle contract\\n   */\\n  function setChainlinkOracle(address oracleAddress) internal {\\n    s_oracle = OperatorInterface(oracleAddress);\\n  }\\n\\n  /**\\n   * @notice Sets the LINK token address\\n   * @param linkAddress The address of the LINK token contract\\n   */\\n  function setChainlinkToken(address linkAddress) internal {\\n    s_link = LinkTokenInterface(linkAddress);\\n  }\\n\\n  /**\\n   * @notice Sets the Chainlink token address for the public\\n   * network as given by the Pointer contract\\n   */\\n  function setPublicChainlinkToken() internal {\\n    setChainlinkToken(PointerInterface(LINK_TOKEN_POINTER).getAddress());\\n  }\\n\\n  /**\\n   * @notice Retrieves the stored address of the LINK token\\n   * @return The address of the LINK token\\n   */\\n  function chainlinkTokenAddress() internal view returns (address) {\\n    return address(s_link);\\n  }\\n\\n  /**\\n   * @notice Retrieves the stored address of the oracle contract\\n   * @return The address of the oracle contract\\n   */\\n  function chainlinkOracleAddress() internal view returns (address) {\\n    return address(s_oracle);\\n  }\\n\\n  /**\\n   * @notice Allows for a request which was created on another contract to be fulfilled\\n   * on this contract\\n   * @param oracleAddress The address of the oracle contract that will fulfill the request\\n   * @param requestId The request ID used for the response\\n   */\\n  function addChainlinkExternalRequest(address oracleAddress, bytes32 requestId) internal notPendingRequest(requestId) {\\n    s_pendingRequests[requestId] = oracleAddress;\\n  }\\n\\n  /**\\n   * @notice Sets the stored oracle and LINK token contracts with the addresses resolved by ENS\\n   * @dev Accounts for subnodes having different resolvers\\n   * @param ensAddress The address of the ENS contract\\n   * @param node The ENS node hash\\n   */\\n  function useChainlinkWithENS(address ensAddress, bytes32 node) internal {\\n    s_ens = ENSInterface(ensAddress);\\n    s_ensNode = node;\\n    bytes32 linkSubnode = keccak256(abi.encodePacked(s_ensNode, ENS_TOKEN_SUBNAME));\\n    ENSResolver_Chainlink resolver = ENSResolver_Chainlink(s_ens.resolver(linkSubnode));\\n    setChainlinkToken(resolver.addr(linkSubnode));\\n    updateChainlinkOracleWithENS();\\n  }\\n\\n  /**\\n   * @notice Sets the stored oracle contract with the address resolved by ENS\\n   * @dev This may be called on its own as long as `useChainlinkWithENS` has been called previously\\n   */\\n  function updateChainlinkOracleWithENS() internal {\\n    bytes32 oracleSubnode = keccak256(abi.encodePacked(s_ensNode, ENS_ORACLE_SUBNAME));\\n    ENSResolver_Chainlink resolver = ENSResolver_Chainlink(s_ens.resolver(oracleSubnode));\\n    setChainlinkOracle(resolver.addr(oracleSubnode));\\n  }\\n\\n  /**\\n   * @notice Ensures that the fulfillment is valid for this contract\\n   * @dev Use if the contract developer prefers methods instead of modifiers for validation\\n   * @param requestId The request ID for fulfillment\\n   */\\n  function validateChainlinkCallback(bytes32 requestId)\\n    internal\\n    recordChainlinkFulfillment(requestId)\\n  // solhint-disable-next-line no-empty-blocks\\n  {\\n\\n  }\\n\\n  /**\\n   * @dev Reverts if the sender is not the oracle of the request.\\n   * Emits ChainlinkFulfilled event.\\n   * @param requestId The request ID for fulfillment\\n   */\\n  modifier recordChainlinkFulfillment(bytes32 requestId) {\\n    require(msg.sender == s_pendingRequests[requestId], \\\"Source must be the oracle of the request\\\");\\n    delete s_pendingRequests[requestId];\\n    emit ChainlinkFulfilled(requestId);\\n    _;\\n  }\\n\\n  /**\\n   * @dev Reverts if the request is already pending\\n   * @param requestId The request ID for fulfillment\\n   */\\n  modifier notPendingRequest(bytes32 requestId) {\\n    require(s_pendingRequests[requestId] == address(0), \\\"Request is already pending\\\");\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0xa221ccfa4763977cc78c57e3a83d47f5aaf7c15535a2c20dba5f46af80fb3bd7\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/ChainlinkRequestInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface ChainlinkRequestInterface {\\n  function oracleRequest(\\n    address sender,\\n    uint256 requestPrice,\\n    bytes32 serviceAgreementID,\\n    address callbackAddress,\\n    bytes4 callbackFunctionId,\\n    uint256 nonce,\\n    uint256 dataVersion,\\n    bytes calldata data\\n  ) external;\\n\\n  function cancelOracleRequest(\\n    bytes32 requestId,\\n    uint256 payment,\\n    bytes4 callbackFunctionId,\\n    uint256 expiration\\n  ) external;\\n}\\n\",\"keccak256\":\"0xa8adfbd0326c982c38ea3808a4da52f0a51807241787c4bd28235bbe86707c04\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/ENSInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface ENSInterface {\\n  // Logged when the owner of a node assigns a new owner to a subnode.\\n  event NewOwner(bytes32 indexed node, bytes32 indexed label, address owner);\\n\\n  // Logged when the owner of a node transfers ownership to a new account.\\n  event Transfer(bytes32 indexed node, address owner);\\n\\n  // Logged when the resolver for a node changes.\\n  event NewResolver(bytes32 indexed node, address resolver);\\n\\n  // Logged when the TTL of a node changes\\n  event NewTTL(bytes32 indexed node, uint64 ttl);\\n\\n  function setSubnodeOwner(\\n    bytes32 node,\\n    bytes32 label,\\n    address owner\\n  ) external;\\n\\n  function setResolver(bytes32 node, address resolver) external;\\n\\n  function setOwner(bytes32 node, address owner) external;\\n\\n  function setTTL(bytes32 node, uint64 ttl) external;\\n\\n  function owner(bytes32 node) external view returns (address);\\n\\n  function resolver(bytes32 node) external view returns (address);\\n\\n  function ttl(bytes32 node) external view returns (uint64);\\n}\\n\",\"keccak256\":\"0xe51365458d82233a55f5ad4492a3b6bf56332d21cad6b0a5f21b8a026fcfd6d0\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface LinkTokenInterface {\\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\\n\\n  function approve(address spender, uint256 value) external returns (bool success);\\n\\n  function balanceOf(address owner) external view returns (uint256 balance);\\n\\n  function decimals() external view returns (uint8 decimalPlaces);\\n\\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\\n\\n  function increaseApproval(address spender, uint256 subtractedValue) external;\\n\\n  function name() external view returns (string memory tokenName);\\n\\n  function symbol() external view returns (string memory tokenSymbol);\\n\\n  function totalSupply() external view returns (uint256 totalTokensIssued);\\n\\n  function transfer(address to, uint256 value) external returns (bool success);\\n\\n  function transferAndCall(\\n    address to,\\n    uint256 value,\\n    bytes calldata data\\n  ) external returns (bool success);\\n\\n  function transferFrom(\\n    address from,\\n    address to,\\n    uint256 value\\n  ) external returns (bool success);\\n}\\n\",\"keccak256\":\"0xc7d7cd730d36825485ef4107d93c3ff18b9f3a5a00ea3d5988ba9a0bd70b10c5\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/OperatorInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./OracleInterface.sol\\\";\\nimport \\\"./ChainlinkRequestInterface.sol\\\";\\n\\ninterface OperatorInterface is OracleInterface, ChainlinkRequestInterface {\\n  function operatorRequest(\\n    address sender,\\n    uint256 payment,\\n    bytes32 specId,\\n    bytes4 callbackFunctionId,\\n    uint256 nonce,\\n    uint256 dataVersion,\\n    bytes calldata data\\n  ) external;\\n\\n  function fulfillOracleRequest2(\\n    bytes32 requestId,\\n    uint256 payment,\\n    address callbackAddress,\\n    bytes4 callbackFunctionId,\\n    uint256 expiration,\\n    bytes calldata data\\n  ) external returns (bool);\\n\\n  function ownerTransferAndCall(\\n    address to,\\n    uint256 value,\\n    bytes calldata data\\n  ) external returns (bool success);\\n\\n  function distributeFunds(address payable[] calldata receivers, uint256[] calldata amounts) external payable;\\n\\n  function getAuthorizedSenders() external returns (address[] memory);\\n\\n  function setAuthorizedSenders(address[] calldata senders) external;\\n\\n  function getForwarder() external returns (address);\\n}\\n\",\"keccak256\":\"0x79a7c77b8f87be6ef02a566765077ed599724b060a209f34f8907eec5615da68\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/OracleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface OracleInterface {\\n  function fulfillOracleRequest(\\n    bytes32 requestId,\\n    uint256 payment,\\n    address callbackAddress,\\n    bytes4 callbackFunctionId,\\n    uint256 expiration,\\n    bytes32 data\\n  ) external returns (bool);\\n\\n  function isAuthorizedSender(address node) external view returns (bool);\\n\\n  function withdraw(address recipient, uint256 amount) external;\\n\\n  function withdrawable() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x3a86242e005bad9daf1b4794399a81ba373069355f38c8a07b58e57abc32513a\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/PointerInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface PointerInterface {\\n  function getAddress() external view returns (address);\\n}\\n\",\"keccak256\":\"0x42e5d62984f9d57bab7e32b2c6e3af86f4feb232ea2af6c822032fae88203bd7\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vendor/BufferChainlink.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev A library for working with mutable byte buffers in Solidity.\\n *\\n * Byte buffers are mutable and expandable, and provide a variety of primitives\\n * for writing to them. At any time you can fetch a bytes object containing the\\n * current contents of the buffer. The bytes object should not be stored between\\n * operations, as it may change due to resizing of the buffer.\\n */\\nlibrary BufferChainlink {\\n  /**\\n   * @dev Represents a mutable buffer. Buffers have a current value (buf) and\\n   *      a capacity. The capacity may be longer than the current value, in\\n   *      which case it can be extended without the need to allocate more memory.\\n   */\\n  struct buffer {\\n    bytes buf;\\n    uint256 capacity;\\n  }\\n\\n  /**\\n   * @dev Initializes a buffer with an initial capacity.\\n   * @param buf The buffer to initialize.\\n   * @param capacity The number of bytes of space to allocate the buffer.\\n   * @return The buffer, for chaining.\\n   */\\n  function init(buffer memory buf, uint256 capacity) internal pure returns (buffer memory) {\\n    if (capacity % 32 != 0) {\\n      capacity += 32 - (capacity % 32);\\n    }\\n    // Allocate space for the buffer data\\n    buf.capacity = capacity;\\n    assembly {\\n      let ptr := mload(0x40)\\n      mstore(buf, ptr)\\n      mstore(ptr, 0)\\n      mstore(0x40, add(32, add(ptr, capacity)))\\n    }\\n    return buf;\\n  }\\n\\n  /**\\n   * @dev Initializes a new buffer from an existing bytes object.\\n   *      Changes to the buffer may mutate the original value.\\n   * @param b The bytes object to initialize the buffer with.\\n   * @return A new buffer.\\n   */\\n  function fromBytes(bytes memory b) internal pure returns (buffer memory) {\\n    buffer memory buf;\\n    buf.buf = b;\\n    buf.capacity = b.length;\\n    return buf;\\n  }\\n\\n  function resize(buffer memory buf, uint256 capacity) private pure {\\n    bytes memory oldbuf = buf.buf;\\n    init(buf, capacity);\\n    append(buf, oldbuf);\\n  }\\n\\n  function max(uint256 a, uint256 b) private pure returns (uint256) {\\n    if (a > b) {\\n      return a;\\n    }\\n    return b;\\n  }\\n\\n  /**\\n   * @dev Sets buffer length to 0.\\n   * @param buf The buffer to truncate.\\n   * @return The original buffer, for chaining..\\n   */\\n  function truncate(buffer memory buf) internal pure returns (buffer memory) {\\n    assembly {\\n      let bufptr := mload(buf)\\n      mstore(bufptr, 0)\\n    }\\n    return buf;\\n  }\\n\\n  /**\\n   * @dev Writes a byte string to a buffer. Resizes if doing so would exceed\\n   *      the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param off The start offset to write to.\\n   * @param data The data to append.\\n   * @param len The number of bytes to copy.\\n   * @return The original buffer, for chaining.\\n   */\\n  function write(\\n    buffer memory buf,\\n    uint256 off,\\n    bytes memory data,\\n    uint256 len\\n  ) internal pure returns (buffer memory) {\\n    require(len <= data.length);\\n\\n    if (off + len > buf.capacity) {\\n      resize(buf, max(buf.capacity, len + off) * 2);\\n    }\\n\\n    uint256 dest;\\n    uint256 src;\\n    assembly {\\n      // Memory address of the buffer data\\n      let bufptr := mload(buf)\\n      // Length of existing buffer data\\n      let buflen := mload(bufptr)\\n      // Start address = buffer address + offset + sizeof(buffer length)\\n      dest := add(add(bufptr, 32), off)\\n      // Update buffer length if we're extending it\\n      if gt(add(len, off), buflen) {\\n        mstore(bufptr, add(len, off))\\n      }\\n      src := add(data, 32)\\n    }\\n\\n    // Copy word-length chunks while possible\\n    for (; len >= 32; len -= 32) {\\n      assembly {\\n        mstore(dest, mload(src))\\n      }\\n      dest += 32;\\n      src += 32;\\n    }\\n\\n    // Copy remaining bytes\\n    unchecked {\\n      uint256 mask = (256**(32 - len)) - 1;\\n      assembly {\\n        let srcpart := and(mload(src), not(mask))\\n        let destpart := and(mload(dest), mask)\\n        mstore(dest, or(destpart, srcpart))\\n      }\\n    }\\n\\n    return buf;\\n  }\\n\\n  /**\\n   * @dev Appends a byte string to a buffer. Resizes if doing so would exceed\\n   *      the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param data The data to append.\\n   * @param len The number of bytes to copy.\\n   * @return The original buffer, for chaining.\\n   */\\n  function append(\\n    buffer memory buf,\\n    bytes memory data,\\n    uint256 len\\n  ) internal pure returns (buffer memory) {\\n    return write(buf, buf.buf.length, data, len);\\n  }\\n\\n  /**\\n   * @dev Appends a byte string to a buffer. Resizes if doing so would exceed\\n   *      the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param data The data to append.\\n   * @return The original buffer, for chaining.\\n   */\\n  function append(buffer memory buf, bytes memory data) internal pure returns (buffer memory) {\\n    return write(buf, buf.buf.length, data, data.length);\\n  }\\n\\n  /**\\n   * @dev Writes a byte to the buffer. Resizes if doing so would exceed the\\n   *      capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param off The offset to write the byte at.\\n   * @param data The data to append.\\n   * @return The original buffer, for chaining.\\n   */\\n  function writeUint8(\\n    buffer memory buf,\\n    uint256 off,\\n    uint8 data\\n  ) internal pure returns (buffer memory) {\\n    if (off >= buf.capacity) {\\n      resize(buf, buf.capacity * 2);\\n    }\\n\\n    assembly {\\n      // Memory address of the buffer data\\n      let bufptr := mload(buf)\\n      // Length of existing buffer data\\n      let buflen := mload(bufptr)\\n      // Address = buffer address + sizeof(buffer length) + off\\n      let dest := add(add(bufptr, off), 32)\\n      mstore8(dest, data)\\n      // Update buffer length if we extended it\\n      if eq(off, buflen) {\\n        mstore(bufptr, add(buflen, 1))\\n      }\\n    }\\n    return buf;\\n  }\\n\\n  /**\\n   * @dev Appends a byte to the buffer. Resizes if doing so would exceed the\\n   *      capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param data The data to append.\\n   * @return The original buffer, for chaining.\\n   */\\n  function appendUint8(buffer memory buf, uint8 data) internal pure returns (buffer memory) {\\n    return writeUint8(buf, buf.buf.length, data);\\n  }\\n\\n  /**\\n   * @dev Writes up to 32 bytes to the buffer. Resizes if doing so would\\n   *      exceed the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param off The offset to write at.\\n   * @param data The data to append.\\n   * @param len The number of bytes to write (left-aligned).\\n   * @return The original buffer, for chaining.\\n   */\\n  function write(\\n    buffer memory buf,\\n    uint256 off,\\n    bytes32 data,\\n    uint256 len\\n  ) private pure returns (buffer memory) {\\n    if (len + off > buf.capacity) {\\n      resize(buf, (len + off) * 2);\\n    }\\n\\n    unchecked {\\n      uint256 mask = (256**len) - 1;\\n      // Right-align data\\n      data = data >> (8 * (32 - len));\\n      assembly {\\n        // Memory address of the buffer data\\n        let bufptr := mload(buf)\\n        // Address = buffer address + sizeof(buffer length) + off + len\\n        let dest := add(add(bufptr, off), len)\\n        mstore(dest, or(and(mload(dest), not(mask)), data))\\n        // Update buffer length if we extended it\\n        if gt(add(off, len), mload(bufptr)) {\\n          mstore(bufptr, add(off, len))\\n        }\\n      }\\n    }\\n    return buf;\\n  }\\n\\n  /**\\n   * @dev Writes a bytes20 to the buffer. Resizes if doing so would exceed the\\n   *      capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param off The offset to write at.\\n   * @param data The data to append.\\n   * @return The original buffer, for chaining.\\n   */\\n  function writeBytes20(\\n    buffer memory buf,\\n    uint256 off,\\n    bytes20 data\\n  ) internal pure returns (buffer memory) {\\n    return write(buf, off, bytes32(data), 20);\\n  }\\n\\n  /**\\n   * @dev Appends a bytes20 to the buffer. Resizes if doing so would exceed\\n   *      the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param data The data to append.\\n   * @return The original buffer, for chhaining.\\n   */\\n  function appendBytes20(buffer memory buf, bytes20 data) internal pure returns (buffer memory) {\\n    return write(buf, buf.buf.length, bytes32(data), 20);\\n  }\\n\\n  /**\\n   * @dev Appends a bytes32 to the buffer. Resizes if doing so would exceed\\n   *      the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param data The data to append.\\n   * @return The original buffer, for chaining.\\n   */\\n  function appendBytes32(buffer memory buf, bytes32 data) internal pure returns (buffer memory) {\\n    return write(buf, buf.buf.length, data, 32);\\n  }\\n\\n  /**\\n   * @dev Writes an integer to the buffer. Resizes if doing so would exceed\\n   *      the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param off The offset to write at.\\n   * @param data The data to append.\\n   * @param len The number of bytes to write (right-aligned).\\n   * @return The original buffer, for chaining.\\n   */\\n  function writeInt(\\n    buffer memory buf,\\n    uint256 off,\\n    uint256 data,\\n    uint256 len\\n  ) private pure returns (buffer memory) {\\n    if (len + off > buf.capacity) {\\n      resize(buf, (len + off) * 2);\\n    }\\n\\n    uint256 mask = (256**len) - 1;\\n    assembly {\\n      // Memory address of the buffer data\\n      let bufptr := mload(buf)\\n      // Address = buffer address + off + sizeof(buffer length) + len\\n      let dest := add(add(bufptr, off), len)\\n      mstore(dest, or(and(mload(dest), not(mask)), data))\\n      // Update buffer length if we extended it\\n      if gt(add(off, len), mload(bufptr)) {\\n        mstore(bufptr, add(off, len))\\n      }\\n    }\\n    return buf;\\n  }\\n\\n  /**\\n   * @dev Appends a byte to the end of the buffer. Resizes if doing so would\\n   * exceed the capacity of the buffer.\\n   * @param buf The buffer to append to.\\n   * @param data The data to append.\\n   * @return The original buffer.\\n   */\\n  function appendInt(\\n    buffer memory buf,\\n    uint256 data,\\n    uint256 len\\n  ) internal pure returns (buffer memory) {\\n    return writeInt(buf, buf.buf.length, data, len);\\n  }\\n}\\n\",\"keccak256\":\"0x89388a631c16ad993e4d76d8d19e08ae98e1397f5dfdfb5f9c0b91015df4cf5d\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vendor/CBORChainlink.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.4.19;\\n\\nimport {BufferChainlink} from \\\"./BufferChainlink.sol\\\";\\n\\nlibrary CBORChainlink {\\n  using BufferChainlink for BufferChainlink.buffer;\\n\\n  uint8 private constant MAJOR_TYPE_INT = 0;\\n  uint8 private constant MAJOR_TYPE_NEGATIVE_INT = 1;\\n  uint8 private constant MAJOR_TYPE_BYTES = 2;\\n  uint8 private constant MAJOR_TYPE_STRING = 3;\\n  uint8 private constant MAJOR_TYPE_ARRAY = 4;\\n  uint8 private constant MAJOR_TYPE_MAP = 5;\\n  uint8 private constant MAJOR_TYPE_TAG = 6;\\n  uint8 private constant MAJOR_TYPE_CONTENT_FREE = 7;\\n\\n  uint8 private constant TAG_TYPE_BIGNUM = 2;\\n  uint8 private constant TAG_TYPE_NEGATIVE_BIGNUM = 3;\\n\\n  function encodeFixedNumeric(BufferChainlink.buffer memory buf, uint8 major, uint64 value) private pure {\\n    if(value <= 23) {\\n      buf.appendUint8(uint8((major << 5) | value));\\n    } else if (value <= 0xFF) {\\n      buf.appendUint8(uint8((major << 5) | 24));\\n      buf.appendInt(value, 1);\\n    } else if (value <= 0xFFFF) {\\n      buf.appendUint8(uint8((major << 5) | 25));\\n      buf.appendInt(value, 2);\\n    } else if (value <= 0xFFFFFFFF) {\\n      buf.appendUint8(uint8((major << 5) | 26));\\n      buf.appendInt(value, 4);\\n    } else {\\n      buf.appendUint8(uint8((major << 5) | 27));\\n      buf.appendInt(value, 8);\\n    }\\n  }\\n\\n  function encodeIndefiniteLengthType(BufferChainlink.buffer memory buf, uint8 major) private pure {\\n    buf.appendUint8(uint8((major << 5) | 31));\\n  }\\n\\n  function encodeUInt(BufferChainlink.buffer memory buf, uint value) internal pure {\\n    if(value > 0xFFFFFFFFFFFFFFFF) {\\n      encodeBigNum(buf, value);\\n    } else {\\n      encodeFixedNumeric(buf, MAJOR_TYPE_INT, uint64(value));\\n    }\\n  }\\n\\n  function encodeInt(BufferChainlink.buffer memory buf, int value) internal pure {\\n    if(value < -0x10000000000000000) {\\n      encodeSignedBigNum(buf, value);\\n    } else if(value > 0xFFFFFFFFFFFFFFFF) {\\n      encodeBigNum(buf, uint(value));\\n    } else if(value >= 0) {\\n      encodeFixedNumeric(buf, MAJOR_TYPE_INT, uint64(uint256(value)));\\n    } else {\\n      encodeFixedNumeric(buf, MAJOR_TYPE_NEGATIVE_INT, uint64(uint256(-1 - value)));\\n    }\\n  }\\n\\n  function encodeBytes(BufferChainlink.buffer memory buf, bytes memory value) internal pure {\\n    encodeFixedNumeric(buf, MAJOR_TYPE_BYTES, uint64(value.length));\\n    buf.append(value);\\n  }\\n\\n  function encodeBigNum(BufferChainlink.buffer memory buf, uint value) internal pure {\\n    buf.appendUint8(uint8((MAJOR_TYPE_TAG << 5) | TAG_TYPE_BIGNUM));\\n    encodeBytes(buf, abi.encode(value));\\n  }\\n\\n  function encodeSignedBigNum(BufferChainlink.buffer memory buf, int input) internal pure {\\n    buf.appendUint8(uint8((MAJOR_TYPE_TAG << 5) | TAG_TYPE_NEGATIVE_BIGNUM));\\n    encodeBytes(buf, abi.encode(uint256(-1 - input)));\\n  }\\n\\n  function encodeString(BufferChainlink.buffer memory buf, string memory value) internal pure {\\n    encodeFixedNumeric(buf, MAJOR_TYPE_STRING, uint64(bytes(value).length));\\n    buf.append(bytes(value));\\n  }\\n\\n  function startArray(BufferChainlink.buffer memory buf) internal pure {\\n    encodeIndefiniteLengthType(buf, MAJOR_TYPE_ARRAY);\\n  }\\n\\n  function startMap(BufferChainlink.buffer memory buf) internal pure {\\n    encodeIndefiniteLengthType(buf, MAJOR_TYPE_MAP);\\n  }\\n\\n  function endSequence(BufferChainlink.buffer memory buf) internal pure {\\n    encodeIndefiniteLengthType(buf, MAJOR_TYPE_CONTENT_FREE);\\n  }\\n}\\n\",\"keccak256\":\"0x08bda450d4dc1d17147fd29810234d35e2c437f1a99be733cfa7ee516db08a48\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vendor/ENSResolver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nabstract contract ENSResolver {\\n  function addr(bytes32 node) public view virtual returns (address);\\n}\\n\",\"keccak256\":\"0x606bda5f3fa27be4cf04f6636dda443b7787b56e87ade988fca2e51d2147613d\",\"license\":\"MIT\"},\"contracts/connectors/Twitter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.6;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/ChainlinkClient.sol\\\";\\n\\nimport \\\"../../vendor/openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"../../vendor/openzeppelin/contracts/proxy/Clones.sol\\\";\\nimport \\\"../../vendor/openzeppelin/contracts/security/Pausable.sol\\\";\\n\\nimport \\\"../../vendor/openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\n\\nimport \\\"../../vendor/openzeppelin/contracts/utils/structs/EnumerableMap.sol\\\";\\nimport \\\"../../vendor/openzeppelin/contracts/utils/Counters.sol\\\";\\n\\ncontract TwitterV1 is Pausable, Ownable, ReentrancyGuard, ChainlinkClient {\\n  using Chainlink for Chainlink.Request;\\n  using EnumerableMap for EnumerableMap.UintToAddressMap;\\n  using Counters for Counters.Counter;\\n\\n  address public keeper;\\n\\n  bytes32 public immutable jobId;\\n  uint256 private immutable fee;\\n\\n  string public requestBaseURI;\\n\\n  EnumerableMap.UintToAddressMap private users;\\n\\n  uint256 lastCampaignId;\\n\\n  struct Campaign {\\n    uint256 campaignId;\\n    string name;\\n    address company;\\n    uint256 budget;\\n    uint256 validationThreshold;\\n    uint256 partakersLimit;\\n    bool isClosed;\\n  }\\n\\n  struct CampaignContributors {\\n    uint256 contributorsCount;\\n    mapping(address => bool) contributorsByAddress;\\n    mapping(address => bool) contributorsClaimStatus;\\n  }\\n\\n  Campaign[] campaigns;\\n  mapping(uint256 => Campaign) campaignById;\\n  mapping(uint256 => CampaignContributors) campaignContributorsByCampaignId;\\n\\n  uint256 public constant MAX_TREASURY_FEE = 1000; // 10%\\n\\n  uint256 public treasuryFee; // treasury rate (e.g. 200 = 2%, 150 = 1.50%)\\n  uint256 public treasuryAmount; // treasury amount that was not claimed\\n\\n  ///\\n  /// EVENTS\\n  ///\\n  /**\\n   * @notice Called when a request to sign up is made\\n   */\\n  event SignUpRequested(uint256 indexed userId, bytes32 indexed requestId);\\n  /**\\n   * @notice Called when a user signed up\\n   */\\n  event SignedUp(uint256 indexed userId, address userAddress);\\n\\n  event CampaignCreated(uint256 campaignId, address company);\\n  event CampaignClosed(uint256 campaignId);\\n  event ContributorAdded(uint256 campaignId, address contributor);\\n  event ContributorRetributed(uint256 campaignId, address contributor, uint256 retribution);\\n\\n  ///\\n  /// CONSTRUCTOR\\n  ///\\n\\n  /**\\n   * @notice Initialize the link token and target oracle\\n   * All testnets config : https://docs.chain.link/any-api/testnet-oracles/\\n   */\\n  constructor(\\n    bytes32 _jobId,\\n    string memory _requestBaseURI,\\n    address _oracle,\\n    address _link,\\n    uint256 _treasuryFee\\n  ) {\\n    setChainlinkToken(_link);\\n    setChainlinkOracle(_oracle);\\n    jobId = _jobId;\\n    // 0,1 * 10**18 (Varies by network and job)\\n    fee = (1 * LINK_DIVISIBILITY) / 10;\\n\\n    treasuryFee = _treasuryFee;\\n    requestBaseURI = _requestBaseURI;\\n  }\\n\\n  ///\\n  /// MAIN FUNCTIONS\\n  ///\\n\\n  /**\\n   * @notice Function that allows a company to create a new campaign\\n   * @param budget - Budget each winning partaker will share with each other\\n   * @param validationThreshold - Minimum amount of retweet, likes etc for a partaker to win\\n   * @param partakersLimit - Maximum amount of winning partakers for this campaign\\n   */\\n  function createCampaign(\\n    string calldata name,\\n    uint256 budget,\\n    uint256 validationThreshold,\\n    uint256 partakersLimit\\n  ) external {\\n    lastCampaignId++;\\n    uint256 newCampaignId = lastCampaignId;\\n    Campaign storage newCampaign = campaignById[newCampaignId];\\n    newCampaign.budget = budget;\\n    newCampaign.name = name;\\n    newCampaign.validationThreshold = validationThreshold;\\n    newCampaign.partakersLimit = partakersLimit;\\n    newCampaign.company = msg.sender;\\n    newCampaign.isClosed = false;\\n    campaigns.push(newCampaign);\\n    emit CampaignCreated(newCampaignId, msg.sender);\\n  }\\n\\n  /**\\n   * @notice Function that allows a company to close a\\n   * @param campaignId - The id of the campaign\\n   */\\n  function closeCampaign(uint256 campaignId) external {\\n    Campaign storage campaign = _getCampaign(campaignId);\\n    require(msg.sender == campaign.company, \\\"Caller is not the campaign owner\\\");\\n    campaign.isClosed = true;\\n    emit CampaignClosed(campaignId);\\n  }\\n\\n  /**\\n   * @notice Function that allows a user to validate his  to close a\\n   * @param campaignId - The id of the campaign\\n   */\\n  function claimCampaignContribution(\\n    uint256 campaignId,\\n    string memory postId,\\n    uint256 claimedCounter\\n  ) external {\\n    bool isClaimValid = _validateContributionClaim(campaignId, postId, claimedCounter);\\n    require(isClaimValid == true, \\\"This contribution does not satisfy the campaign's requirements\\\");\\n    _addPartakerToCampaignContributors(campaignId, msg.sender);\\n    emit ContributorAdded(campaignId, msg.sender);\\n  }\\n\\n  function claimCampaignRetribution(uint256 campaignId) external {\\n    CampaignContributors storage campaignContributors = campaignContributorsByCampaignId[campaignId];\\n    require(\\n      campaignContributors.contributorsByAddress[msg.sender] == true,\\n      \\\"Caller is not a validated campaign contributor\\\"\\n    );\\n    require(campaignContributors.contributorsClaimStatus[msg.sender] == false, \\\"Retribution already claimed\\\");\\n    uint256 retributionAmount = _computeRetributionAmount(campaignId);\\n    _updateContributorClaimStatus(campaignId);\\n    payable(msg.sender).transfer(retributionAmount);\\n    emit ContributorRetributed(campaignId, msg.sender, retributionAmount);\\n  }\\n\\n  /**\\n   * @notice Function that allow user to sign up to twitter and claim won twitters\\n   */\\n  function signUp(uint256 _userId) external {\\n    users.set(_userId, msg.sender);\\n\\n    emit SignedUp(_userId, msg.sender);\\n    _requestSignUp(_userId);\\n  }\\n\\n  /**\\n   * @notice Check if user has signed up\\n   * @param _userId - twitter user id\\n   */\\n  function hasSignedUp(uint256 _userId) external view returns (bool) {\\n    return users.contains(_userId);\\n  }\\n\\n  /**\\n   * @notice Check if caller has signed up\\n   */\\n  function hasSignedUp() external view returns (bool) {\\n    bool found = false;\\n    for (uint256 idx = 0; idx < users.length(); idx++) if (users.get(idx) == msg.sender) found = true;\\n    return found;\\n  }\\n\\n  ///\\n  /// CHAINLINK RESPONSES\\n  ///\\n\\n  /**\\n   * @notice Fulfill Sign Up request\\n   *\\n   * @param _requestId - id of the request\\n   * @param _userId - twitter user id\\n   * @param _hasSignedUp - true if  twitter userId match msg.sender address\\n   */\\n  function fulfillSignUp(\\n    bytes32 _requestId,\\n    uint256 _userId,\\n    bool _hasSignedUp\\n  ) public recordChainlinkFulfillment(_requestId) {\\n    if (!_hasSignedUp) users.remove(_userId);\\n\\n    address user = users.get(_userId);\\n    // TODO\\n    // for (uint256 round = 0; round < epoch.current(); round++)\\n    //   for (uint256 idx = 0; idx < winners[round].length; idx++)\\n    //     if (winners[round][idx].userId == _userId) winners[round][idx].playerAddress = user;\\n  }\\n\\n  ///\\n  /// GETTERS FUNCTIONS\\n  ///\\n\\n  /**\\n   * @notice Return URI for twitter endpoint\\n   */\\n  function getTwitterURI(uint256 _twitterId) public view returns (string memory _twitterURI) {\\n    return\\n      string(\\n        abi.encodePacked(\\n          requestBaseURI,\\n          \\\"/chains/\\\",\\n          block.chainid,\\n          \\\"/twitters/\\\",\\n          _twitterId,\\n          \\\"/winners\\\"\\n          // TODO: Add query params\\n          //   \\\"?prizes=\\\",\\n          //   prizes[_twitterId].length,\\n          //   \\\"&tweetId\\\",\\n          //   twitters[_twitterId].tweetId,\\n          //   \\\"&retweetMaxCount\\\",\\n          //   twitters[_twitterId].retweetMaxCount\\n        )\\n      );\\n  }\\n\\n  function getCampaign(uint256 campaignId) external view returns (Campaign memory) {\\n    return _getCampaign(campaignId);\\n  }\\n\\n  /**\\n   * @notice Return URI for sign up endpoint\\n   */\\n  function getSignUpURI(uint256 _userId) public view returns (string memory _signUpURI) {\\n    return string(abi.encodePacked(requestBaseURI, \\\"/users/\\\", _userId));\\n  }\\n\\n  ///\\n  /// ADMIN FUNCTIONS\\n  ///\\n\\n  /**\\n   * @notice Witdraws LINK from the contract to the Owner\\n   * @dev only admin can call this function\\n   */\\n  function withdrawLink() external onlyAdmin {\\n    LinkTokenInterface link = LinkTokenInterface(chainlinkTokenAddress());\\n    require(link.transfer(owner(), link.balanceOf(address(this))), \\\"Unable to transfer\\\");\\n  }\\n\\n  /**\\n   * @notice Set requestBaseURI\\n   * @dev only admin can call this function\\n   */\\n  function setRequestBaseURI(string calldata _requestBaseURI) external onlyAdmin {\\n    requestBaseURI = _requestBaseURI;\\n  }\\n\\n  /**\\n   * @notice Add user to users list\\n   * @dev only admin can call this function\\n   */\\n  function addUser(uint256 _userId, address _userAddress) external onlyAdmin {\\n    if (!users.contains(_userId)) users.set(_userId, _userAddress);\\n  }\\n\\n  /**\\n   * @notice Call this method if no response is received within 5 minutes\\n   * @param _requestId The ID that was generated for the request to cancel\\n   * @param _payment The payment specified for the request to cancel\\n   * @param _callbackFunctionId The bytes4 callback function ID specified for\\n   * the request to cancel\\n   * @param _expiration The expiration generated for the request to cancel\\n   * @dev only admin can call this function\\n   */\\n  function cancelRequest(\\n    bytes32 _requestId,\\n    uint256 _payment,\\n    bytes4 _callbackFunctionId,\\n    uint256 _expiration\\n  ) public onlyAdmin {\\n    cancelChainlinkRequest(_requestId, _payment, _callbackFunctionId, _expiration);\\n  }\\n\\n  ///\\n  /// INTERNAL FUNCTIONS\\n  ///\\n\\n  /**\\n   * @notice retrieves a campaign by its id\\n   * @param _campaignId the id of the campaign\\n   */\\n  function _getCampaign(uint256 _campaignId) internal view returns (Campaign storage) {\\n    return campaignById[_campaignId];\\n  }\\n\\n  /**\\n   * @notice validates the input to performUpkeep\\n   * @param campaignId the id of the cron job\\n   */\\n  function _validateContributionClaim(\\n    uint256 campaignId,\\n    string memory postId,\\n    uint256 claimedCounter\\n  ) private view returns (bool) {\\n    // TODO Implement twitter verification using oracles. Currently we believe what user inputs\\n    Campaign storage campaign = _getCampaign(campaignId);\\n    return claimedCounter >= campaign.validationThreshold;\\n  }\\n\\n  function _addPartakerToCampaignContributors(uint256 campaignId, address partaker) internal {\\n    Campaign storage campaign = _getCampaign(campaignId);\\n    CampaignContributors storage campaignContributors = campaignContributorsByCampaignId[campaignId];\\n    require(campaign.partakersLimit >= campaignContributors.contributorsCount, \\\"Contributors limit already reached\\\");\\n    require(campaign.isClosed == false, \\\"Campaign is closed\\\");\\n    campaignContributors.contributorsByAddress[partaker] = true;\\n    campaignContributors.contributorsClaimStatus[partaker] = false;\\n  }\\n\\n  function _updateContributorClaimStatus(uint256 campaignId) internal {\\n    CampaignContributors storage campaignContributors = campaignContributorsByCampaignId[campaignId];\\n    campaignContributors.contributorsClaimStatus[msg.sender] = true;\\n  }\\n\\n  function _computeRetributionAmount(uint256 campaignId) internal view returns (uint256) {\\n    Campaign storage campaign = _getCampaign(campaignId);\\n    uint256 retributionAmount = campaign.budget / campaign.partakersLimit;\\n    return retributionAmount;\\n  }\\n\\n  /**\\n   * @notice Create request to sign up user\\n   * @dev only admin can call this function\\n   */\\n  function _requestSignUp(uint256 _userId) private onlyAdmin whenNotPaused returns (bytes32 _requestId) {\\n    Chainlink.Request memory req = buildChainlinkRequest(jobId, address(this), this.fulfillSignUp.selector);\\n    req.add(\\\"get\\\", getSignUpURI(_userId));\\n    // https://docs.chain.link/any-api/testnet-oracles/\\n    req.add(\\\"path\\\", \\\"hasSignedUp\\\");\\n    bytes32 requestId = sendChainlinkRequest(req, fee);\\n    emit SignUpRequested(_userId, requestId);\\n    return requestId;\\n  }\\n\\n  ///\\n  /// MODIFIERS\\n  ///\\n\\n  /**\\n   * @notice Modifier that ensure only admin can access this function\\n   */\\n  modifier onlyAdmin() {\\n    require(msg.sender == owner(), \\\"Caller is not the admin\\\");\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x302c43043ef020ba6c41078a200f2cb9888114a99d1eafedf743ea57c9b6212c\",\"license\":\"MIT\"},\"vendor/openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.3.2 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xcf02b12b43a19c47f55f3cb134bdb21e58bf40ed75aea99664b35d039f725719\",\"license\":\"MIT\"},\"vendor/openzeppelin/contracts/proxy/Clones.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.3.2 (proxy/Clones.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\\n * deploying minimal proxy contracts, also known as \\\"clones\\\".\\n *\\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\\n *\\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\\n * deterministic method.\\n *\\n * _Available since v3.4._\\n */\\nlibrary Clones {\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\\n     *\\n     * This function uses the create opcode, which should never revert.\\n     */\\n    function clone(address implementation) internal returns (address instance) {\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\\n            instance := create(0, ptr, 0x37)\\n        }\\n        require(instance != address(0), \\\"ERC1167: create failed\\\");\\n    }\\n\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\\n     *\\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\\n     * the clone. Using the same `implementation` and `salt` multiple time will revert, since\\n     * the clones cannot be deployed twice at the same address.\\n     */\\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\\n            instance := create2(0, ptr, 0x37, salt)\\n        }\\n        require(instance != address(0), \\\"ERC1167: create2 failed\\\");\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n     */\\n    function predictDeterministicAddress(\\n        address implementation,\\n        bytes32 salt,\\n        address deployer\\n    ) internal pure returns (address predicted) {\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf3ff00000000000000000000000000000000)\\n            mstore(add(ptr, 0x38), shl(0x60, deployer))\\n            mstore(add(ptr, 0x4c), salt)\\n            mstore(add(ptr, 0x6c), keccak256(ptr, 0x37))\\n            predicted := keccak256(add(ptr, 0x37), 0x55)\\n        }\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n     */\\n    function predictDeterministicAddress(address implementation, bytes32 salt)\\n        internal\\n        view\\n        returns (address predicted)\\n    {\\n        return predictDeterministicAddress(implementation, salt, address(this));\\n    }\\n}\\n\",\"keccak256\":\"0x4f1f6854ddda976a0ab4a25805cb9a4b4537ebe962b0aa7e91f1f522c3d536b8\",\"license\":\"MIT\"},\"vendor/openzeppelin/contracts/security/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.3.2 (security/Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    constructor() {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0x934721ac65895375c9eaa3dc34235b7e897edc8a9d9b5a8a057e5afb9025a68d\",\"license\":\"MIT\"},\"vendor/openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.3.2 (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x87403fac3154fd83198a6e3f68efff24edd43d28c5bbdb40af21f07a9692e169\",\"license\":\"MIT\"},\"vendor/openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.3.2 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x00f8a1bd52713525eb90f70b64f028de5c075fb6298cc9de2e8f0c022e1595ff\",\"license\":\"MIT\"},\"vendor/openzeppelin/contracts/utils/Counters.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.3.2 (utils/Counters.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title Counters\\n * @author Matt Condon (@shrugs)\\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\\n *\\n * Include with `using Counters for Counters.Counter;`\\n */\\nlibrary Counters {\\n    struct Counter {\\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\\n        uint256 _value; // default: 0\\n    }\\n\\n    function current(Counter storage counter) internal view returns (uint256) {\\n        return counter._value;\\n    }\\n\\n    function increment(Counter storage counter) internal {\\n        unchecked {\\n            counter._value += 1;\\n        }\\n    }\\n\\n    function decrement(Counter storage counter) internal {\\n        uint256 value = counter._value;\\n        require(value > 0, \\\"Counter: decrement overflow\\\");\\n        unchecked {\\n            counter._value = value - 1;\\n        }\\n    }\\n\\n    function reset(Counter storage counter) internal {\\n        counter._value = 0;\\n    }\\n}\\n\",\"keccak256\":\"0x5e2cfccb06a792ec63454e8cf6d9bc91915fbd9d7f70a3ee9d0e82e115bf8fc9\",\"license\":\"MIT\"},\"vendor/openzeppelin/contracts/utils/structs/EnumerableMap.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.3.2 (utils/structs/EnumerableMap.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./EnumerableSet.sol\\\";\\n\\n/**\\n * @dev Library for managing an enumerable variant of Solidity's\\n * https://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`]\\n * type.\\n *\\n * Maps have the following properties:\\n *\\n * - Entries are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Entries are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableMap for EnumerableMap.UintToAddressMap;\\n *\\n *     // Declare a set state variable\\n *     EnumerableMap.UintToAddressMap private myMap;\\n * }\\n * ```\\n *\\n * As of v3.0.0, only maps of type `uint256 -> address` (`UintToAddressMap`) are\\n * supported.\\n */\\nlibrary EnumerableMap {\\n    using EnumerableSet for EnumerableSet.Bytes32Set;\\n\\n    // To implement this library for multiple types with as little code\\n    // repetition as possible, we write it in terms of a generic Map type with\\n    // bytes32 keys and values.\\n    // The Map implementation uses private functions, and user-facing\\n    // implementations (such as Uint256ToAddressMap) are just wrappers around\\n    // the underlying Map.\\n    // This means that we can only create new EnumerableMaps for types that fit\\n    // in bytes32.\\n\\n    struct Map {\\n        // Storage of keys\\n        EnumerableSet.Bytes32Set _keys;\\n        mapping(bytes32 => bytes32) _values;\\n    }\\n\\n    /**\\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\\n     * key. O(1).\\n     *\\n     * Returns true if the key was added to the map, that is if it was not\\n     * already present.\\n     */\\n    function _set(\\n        Map storage map,\\n        bytes32 key,\\n        bytes32 value\\n    ) private returns (bool) {\\n        map._values[key] = value;\\n        return map._keys.add(key);\\n    }\\n\\n    /**\\n     * @dev Removes a key-value pair from a map. O(1).\\n     *\\n     * Returns true if the key was removed from the map, that is if it was present.\\n     */\\n    function _remove(Map storage map, bytes32 key) private returns (bool) {\\n        delete map._values[key];\\n        return map._keys.remove(key);\\n    }\\n\\n    /**\\n     * @dev Returns true if the key is in the map. O(1).\\n     */\\n    function _contains(Map storage map, bytes32 key) private view returns (bool) {\\n        return map._keys.contains(key);\\n    }\\n\\n    /**\\n     * @dev Returns the number of key-value pairs in the map. O(1).\\n     */\\n    function _length(Map storage map) private view returns (uint256) {\\n        return map._keys.length();\\n    }\\n\\n    /**\\n     * @dev Returns the key-value pair stored at position `index` in the map. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of entries inside the\\n     * array, and it may change when more entries are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function _at(Map storage map, uint256 index) private view returns (bytes32, bytes32) {\\n        bytes32 key = map._keys.at(index);\\n        return (key, map._values[key]);\\n    }\\n\\n    /**\\n     * @dev Tries to returns the value associated with `key`.  O(1).\\n     * Does not revert if `key` is not in the map.\\n     */\\n    function _tryGet(Map storage map, bytes32 key) private view returns (bool, bytes32) {\\n        bytes32 value = map._values[key];\\n        if (value == bytes32(0)) {\\n            return (_contains(map, key), bytes32(0));\\n        } else {\\n            return (true, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the value associated with `key`.  O(1).\\n     *\\n     * Requirements:\\n     *\\n     * - `key` must be in the map.\\n     */\\n    function _get(Map storage map, bytes32 key) private view returns (bytes32) {\\n        bytes32 value = map._values[key];\\n        require(value != 0 || _contains(map, key), \\\"EnumerableMap: nonexistent key\\\");\\n        return value;\\n    }\\n\\n    /**\\n     * @dev Same as {_get}, with a custom error message when `key` is not in the map.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {_tryGet}.\\n     */\\n    function _get(\\n        Map storage map,\\n        bytes32 key,\\n        string memory errorMessage\\n    ) private view returns (bytes32) {\\n        bytes32 value = map._values[key];\\n        require(value != 0 || _contains(map, key), errorMessage);\\n        return value;\\n    }\\n\\n    // UintToAddressMap\\n\\n    struct UintToAddressMap {\\n        Map _inner;\\n    }\\n\\n    /**\\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\\n     * key. O(1).\\n     *\\n     * Returns true if the key was added to the map, that is if it was not\\n     * already present.\\n     */\\n    function set(\\n        UintToAddressMap storage map,\\n        uint256 key,\\n        address value\\n    ) internal returns (bool) {\\n        return _set(map._inner, bytes32(key), bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the key was removed from the map, that is if it was present.\\n     */\\n    function remove(UintToAddressMap storage map, uint256 key) internal returns (bool) {\\n        return _remove(map._inner, bytes32(key));\\n    }\\n\\n    /**\\n     * @dev Returns true if the key is in the map. O(1).\\n     */\\n    function contains(UintToAddressMap storage map, uint256 key) internal view returns (bool) {\\n        return _contains(map._inner, bytes32(key));\\n    }\\n\\n    /**\\n     * @dev Returns the number of elements in the map. O(1).\\n     */\\n    function length(UintToAddressMap storage map) internal view returns (uint256) {\\n        return _length(map._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the element stored at position `index` in the set. O(1).\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(UintToAddressMap storage map, uint256 index) internal view returns (uint256, address) {\\n        (bytes32 key, bytes32 value) = _at(map._inner, index);\\n        return (uint256(key), address(uint160(uint256(value))));\\n    }\\n\\n    /**\\n     * @dev Tries to returns the value associated with `key`.  O(1).\\n     * Does not revert if `key` is not in the map.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryGet(UintToAddressMap storage map, uint256 key) internal view returns (bool, address) {\\n        (bool success, bytes32 value) = _tryGet(map._inner, bytes32(key));\\n        return (success, address(uint160(uint256(value))));\\n    }\\n\\n    /**\\n     * @dev Returns the value associated with `key`.  O(1).\\n     *\\n     * Requirements:\\n     *\\n     * - `key` must be in the map.\\n     */\\n    function get(UintToAddressMap storage map, uint256 key) internal view returns (address) {\\n        return address(uint160(uint256(_get(map._inner, bytes32(key)))));\\n    }\\n\\n    /**\\n     * @dev Same as {get}, with a custom error message when `key` is not in the map.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryGet}.\\n     */\\n    function get(\\n        UintToAddressMap storage map,\\n        uint256 key,\\n        string memory errorMessage\\n    ) internal view returns (address) {\\n        return address(uint160(uint256(_get(map._inner, bytes32(key), errorMessage))));\\n    }\\n}\\n\",\"keccak256\":\"0xf7da3eab5c82339c3cf1bb83e84371efd7dce79c0d61c805e7a54abc7303fd5d\",\"license\":\"MIT\"},\"vendor/openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.3.2 (utils/structs/EnumerableSet.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\n *\\n *     // Declare a set state variable\\n *     EnumerableSet.AddressSet private mySet;\\n * }\\n * ```\\n *\\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\n * and `uint256` (`UintSet`) are supported.\\n */\\nlibrary EnumerableSet {\\n    // To implement this library for multiple types with as little code\\n    // repetition as possible, we write it in terms of a generic Set type with\\n    // bytes32 values.\\n    // The Set implementation uses private functions, and user-facing\\n    // implementations (such as AddressSet) are just wrappers around the\\n    // underlying Set.\\n    // This means that we can only create new EnumerableSets for types that fit\\n    // in bytes32.\\n\\n    struct Set {\\n        // Storage of set values\\n        bytes32[] _values;\\n        // Position of the value in the `values` array, plus 1 because index 0\\n        // means a value is not in the set.\\n        mapping(bytes32 => uint256) _indexes;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function _add(Set storage set, bytes32 value) private returns (bool) {\\n        if (!_contains(set, value)) {\\n            set._values.push(value);\\n            // The value is stored at length-1, but we add 1 to all indexes\\n            // and use 0 as a sentinel value\\n            set._indexes[value] = set._values.length;\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\\n        // We read and store the value's index to prevent multiple reads from the same storage slot\\n        uint256 valueIndex = set._indexes[value];\\n\\n        if (valueIndex != 0) {\\n            // Equivalent to contains(set, value)\\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\\n            // This modifies the order of the array, as noted in {at}.\\n\\n            uint256 toDeleteIndex = valueIndex - 1;\\n            uint256 lastIndex = set._values.length - 1;\\n\\n            if (lastIndex != toDeleteIndex) {\\n                bytes32 lastvalue = set._values[lastIndex];\\n\\n                // Move the last value to the index where the value to delete is\\n                set._values[toDeleteIndex] = lastvalue;\\n                // Update the index for the moved value\\n                set._indexes[lastvalue] = valueIndex; // Replace lastvalue's index to valueIndex\\n            }\\n\\n            // Delete the slot where the moved value was stored\\n            set._values.pop();\\n\\n            // Delete the index for the deleted slot\\n            delete set._indexes[value];\\n\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\\n        return set._indexes[value] != 0;\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function _length(Set storage set) private view returns (uint256) {\\n        return set._values.length;\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\\n        return set._values[index];\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function _values(Set storage set) private view returns (bytes32[] memory) {\\n        return set._values;\\n    }\\n\\n    // Bytes32Set\\n\\n    struct Bytes32Set {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _add(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _remove(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\n        return _contains(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\n        return _at(set._inner, index);\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\\n        return _values(set._inner);\\n    }\\n\\n    // AddressSet\\n\\n    struct AddressSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\n        return _add(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(AddressSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\\n        return address(uint160(uint256(_at(set._inner, index))));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(AddressSet storage set) internal view returns (address[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        address[] memory result;\\n\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // UintSet\\n\\n    struct UintSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _add(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function length(UintSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\n        return uint256(_at(set._inner, index));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        uint256[] memory result;\\n\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x460e5294c67dcceb3bdc3d7c683bbd8676a992e5520f281db01bcc44f6dde3ef\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":3224,"contract":"contracts/connectors/Twitter.sol:TwitterV1","label":"_paused","offset":0,"slot":"0","type":"t_bool"},{"astId":3029,"contract":"contracts/connectors/Twitter.sol:TwitterV1","label":"_owner","offset":1,"slot":"0","type":"t_address"},{"astId":3309,"contract":"contracts/connectors/Twitter.sol:TwitterV1","label":"_status","offset":0,"slot":"1","type":"t_uint256"},{"astId":319,"contract":"contracts/connectors/Twitter.sol:TwitterV1","label":"s_ens","offset":0,"slot":"2","type":"t_contract(ENSInterface)974"},{"astId":321,"contract":"contracts/connectors/Twitter.sol:TwitterV1","label":"s_ensNode","offset":0,"slot":"3","type":"t_bytes32"},{"astId":324,"contract":"contracts/connectors/Twitter.sol:TwitterV1","label":"s_link","offset":0,"slot":"4","type":"t_contract(LinkTokenInterface)1069"},{"astId":327,"contract":"contracts/connectors/Twitter.sol:TwitterV1","label":"s_oracle","offset":0,"slot":"5","type":"t_contract(OperatorInterface)1149"},{"astId":330,"contract":"contracts/connectors/Twitter.sol:TwitterV1","label":"s_requestCount","offset":0,"slot":"6","type":"t_uint256"},{"astId":334,"contract":"contracts/connectors/Twitter.sol:TwitterV1","label":"s_pendingRequests","offset":0,"slot":"7","type":"t_mapping(t_bytes32,t_address)"},{"astId":2206,"contract":"contracts/connectors/Twitter.sol:TwitterV1","label":"keeper","offset":0,"slot":"8","type":"t_address"},{"astId":2212,"contract":"contracts/connectors/Twitter.sol:TwitterV1","label":"requestBaseURI","offset":0,"slot":"9","type":"t_string_storage"},{"astId":2215,"contract":"contracts/connectors/Twitter.sol:TwitterV1","label":"users","offset":0,"slot":"10","type":"t_struct(UintToAddressMap)3680_storage"},{"astId":2217,"contract":"contracts/connectors/Twitter.sol:TwitterV1","label":"lastCampaignId","offset":0,"slot":"13","type":"t_uint256"},{"astId":2247,"contract":"contracts/connectors/Twitter.sol:TwitterV1","label":"campaigns","offset":0,"slot":"14","type":"t_array(t_struct(Campaign)2232_storage)dyn_storage"},{"astId":2252,"contract":"contracts/connectors/Twitter.sol:TwitterV1","label":"campaignById","offset":0,"slot":"15","type":"t_mapping(t_uint256,t_struct(Campaign)2232_storage)"},{"astId":2257,"contract":"contracts/connectors/Twitter.sol:TwitterV1","label":"campaignContributorsByCampaignId","offset":0,"slot":"16","type":"t_mapping(t_uint256,t_struct(CampaignContributors)2243_storage)"},{"astId":2262,"contract":"contracts/connectors/Twitter.sol:TwitterV1","label":"treasuryFee","offset":0,"slot":"17","type":"t_uint256"},{"astId":2264,"contract":"contracts/connectors/Twitter.sol:TwitterV1","label":"treasuryAmount","offset":0,"slot":"18","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_bytes32)dyn_storage":{"base":"t_bytes32","encoding":"dynamic_array","label":"bytes32[]","numberOfBytes":"32"},"t_array(t_struct(Campaign)2232_storage)dyn_storage":{"base":"t_struct(Campaign)2232_storage","encoding":"dynamic_array","label":"struct TwitterV1.Campaign[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_contract(ENSInterface)974":{"encoding":"inplace","label":"contract ENSInterface","numberOfBytes":"20"},"t_contract(LinkTokenInterface)1069":{"encoding":"inplace","label":"contract LinkTokenInterface","numberOfBytes":"20"},"t_contract(OperatorInterface)1149":{"encoding":"inplace","label":"contract OperatorInterface","numberOfBytes":"20"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_bytes32,t_address)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_bytes32,t_bytes32)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => bytes32)","numberOfBytes":"32","value":"t_bytes32"},"t_mapping(t_bytes32,t_uint256)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_struct(Campaign)2232_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct TwitterV1.Campaign)","numberOfBytes":"32","value":"t_struct(Campaign)2232_storage"},"t_mapping(t_uint256,t_struct(CampaignContributors)2243_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct TwitterV1.CampaignContributors)","numberOfBytes":"32","value":"t_struct(CampaignContributors)2243_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Bytes32Set)4119_storage":{"encoding":"inplace","label":"struct EnumerableSet.Bytes32Set","members":[{"astId":4118,"contract":"contracts/connectors/Twitter.sol:TwitterV1","label":"_inner","offset":0,"slot":"0","type":"t_struct(Set)3925_storage"}],"numberOfBytes":"64"},"t_struct(Campaign)2232_storage":{"encoding":"inplace","label":"struct TwitterV1.Campaign","members":[{"astId":2219,"contract":"contracts/connectors/Twitter.sol:TwitterV1","label":"campaignId","offset":0,"slot":"0","type":"t_uint256"},{"astId":2221,"contract":"contracts/connectors/Twitter.sol:TwitterV1","label":"name","offset":0,"slot":"1","type":"t_string_storage"},{"astId":2223,"contract":"contracts/connectors/Twitter.sol:TwitterV1","label":"company","offset":0,"slot":"2","type":"t_address"},{"astId":2225,"contract":"contracts/connectors/Twitter.sol:TwitterV1","label":"budget","offset":0,"slot":"3","type":"t_uint256"},{"astId":2227,"contract":"contracts/connectors/Twitter.sol:TwitterV1","label":"validationThreshold","offset":0,"slot":"4","type":"t_uint256"},{"astId":2229,"contract":"contracts/connectors/Twitter.sol:TwitterV1","label":"partakersLimit","offset":0,"slot":"5","type":"t_uint256"},{"astId":2231,"contract":"contracts/connectors/Twitter.sol:TwitterV1","label":"isClosed","offset":0,"slot":"6","type":"t_bool"}],"numberOfBytes":"224"},"t_struct(CampaignContributors)2243_storage":{"encoding":"inplace","label":"struct TwitterV1.CampaignContributors","members":[{"astId":2234,"contract":"contracts/connectors/Twitter.sol:TwitterV1","label":"contributorsCount","offset":0,"slot":"0","type":"t_uint256"},{"astId":2238,"contract":"contracts/connectors/Twitter.sol:TwitterV1","label":"contributorsByAddress","offset":0,"slot":"1","type":"t_mapping(t_address,t_bool)"},{"astId":2242,"contract":"contracts/connectors/Twitter.sol:TwitterV1","label":"contributorsClaimStatus","offset":0,"slot":"2","type":"t_mapping(t_address,t_bool)"}],"numberOfBytes":"96"},"t_struct(Map)3450_storage":{"encoding":"inplace","label":"struct EnumerableMap.Map","members":[{"astId":3445,"contract":"contracts/connectors/Twitter.sol:TwitterV1","label":"_keys","offset":0,"slot":"0","type":"t_struct(Bytes32Set)4119_storage"},{"astId":3449,"contract":"contracts/connectors/Twitter.sol:TwitterV1","label":"_values","offset":0,"slot":"2","type":"t_mapping(t_bytes32,t_bytes32)"}],"numberOfBytes":"96"},"t_struct(Set)3925_storage":{"encoding":"inplace","label":"struct EnumerableSet.Set","members":[{"astId":3920,"contract":"contracts/connectors/Twitter.sol:TwitterV1","label":"_values","offset":0,"slot":"0","type":"t_array(t_bytes32)dyn_storage"},{"astId":3924,"contract":"contracts/connectors/Twitter.sol:TwitterV1","label":"_indexes","offset":0,"slot":"1","type":"t_mapping(t_bytes32,t_uint256)"}],"numberOfBytes":"64"},"t_struct(UintToAddressMap)3680_storage":{"encoding":"inplace","label":"struct EnumerableMap.UintToAddressMap","members":[{"astId":3679,"contract":"contracts/connectors/Twitter.sol:TwitterV1","label":"_inner","offset":0,"slot":"0","type":"t_struct(Map)3450_storage"}],"numberOfBytes":"96"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"events":{"SignUpRequested(uint256,bytes32)":{"notice":"Called when a request to sign up is made"},"SignedUp(uint256,address)":{"notice":"Called when a user signed up"}},"kind":"user","methods":{"addUser(uint256,address)":{"notice":"Add user to users list"},"cancelRequest(bytes32,uint256,bytes4,uint256)":{"notice":"Call this method if no response is received within 5 minutes"},"claimCampaignContribution(uint256,string,uint256)":{"notice":"Function that allows a user to validate his  to close a"},"closeCampaign(uint256)":{"notice":"Function that allows a company to close a"},"constructor":{"notice":"Initialize the link token and target oracle All testnets config : https://docs.chain.link/any-api/testnet-oracles/"},"createCampaign(string,uint256,uint256,uint256)":{"notice":"Function that allows a company to create a new campaign"},"fulfillSignUp(bytes32,uint256,bool)":{"notice":"Fulfill Sign Up request"},"getSignUpURI(uint256)":{"notice":"Return URI for sign up endpoint"},"getTwitterURI(uint256)":{"notice":"Return URI for twitter endpoint"},"hasSignedUp()":{"notice":"Check if caller has signed up"},"hasSignedUp(uint256)":{"notice":"Check if user has signed up"},"setRequestBaseURI(string)":{"notice":"Set requestBaseURI"},"signUp(uint256)":{"notice":"Function that allow user to sign up to twitter and claim won twitters"},"withdrawLink()":{"notice":"Witdraws LINK from the contract to the Owner"}},"version":1}}},"vendor/openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"vendor/openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"vendor/openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.3.2 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xcf02b12b43a19c47f55f3cb134bdb21e58bf40ed75aea99664b35d039f725719\",\"license\":\"MIT\"},\"vendor/openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.3.2 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x00f8a1bd52713525eb90f70b64f028de5c075fb6298cc9de2e8f0c022e1595ff\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":3029,"contract":"vendor/openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"vendor/openzeppelin/contracts/proxy/Clones.sol":{"Clones":{"abi":[],"devdoc":{"details":"https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for deploying minimal proxy contracts, also known as \"clones\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method. _Available since v3.4._","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209fc4838fd441f7ba3c3f2bb71f9cef27d6f706679cde481563f138ff69d450ae64736f6c63430008060033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 0xC4 DUP4 DUP16 0xD4 COINBASE 0xF7 0xBA EXTCODECOPY EXTCODEHASH 0x2B 0xB7 0x1F SWAP13 0xEF 0x27 0xD6 0xF7 MOD PUSH8 0x9CDE481563F138FF PUSH10 0xD450AE64736F6C634300 ADDMOD MOD STOP CALLER ","sourceMap":"740:2817:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209fc4838fd441f7ba3c3f2bb71f9cef27d6f706679cde481563f138ff69d450ae64736f6c63430008060033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 0xC4 DUP4 DUP16 0xD4 COINBASE 0xF7 0xBA EXTCODECOPY EXTCODEHASH 0x2B 0xB7 0x1F SWAP13 0xEF 0x27 0xD6 0xF7 MOD PUSH8 0x9CDE481563F138FF PUSH10 0xD450AE64736F6C634300 ADDMOD MOD STOP CALLER ","sourceMap":"740:2817:13:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"clone(address)":"infinite","cloneDeterministic(address,bytes32)":"infinite","predictDeterministicAddress(address,bytes32)":"infinite","predictDeterministicAddress(address,bytes32,address)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for deploying minimal proxy contracts, also known as \\\"clones\\\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"vendor/openzeppelin/contracts/proxy/Clones.sol\":\"Clones\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"vendor/openzeppelin/contracts/proxy/Clones.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.3.2 (proxy/Clones.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\\n * deploying minimal proxy contracts, also known as \\\"clones\\\".\\n *\\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\\n *\\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\\n * deterministic method.\\n *\\n * _Available since v3.4._\\n */\\nlibrary Clones {\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\\n     *\\n     * This function uses the create opcode, which should never revert.\\n     */\\n    function clone(address implementation) internal returns (address instance) {\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\\n            instance := create(0, ptr, 0x37)\\n        }\\n        require(instance != address(0), \\\"ERC1167: create failed\\\");\\n    }\\n\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\\n     *\\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\\n     * the clone. Using the same `implementation` and `salt` multiple time will revert, since\\n     * the clones cannot be deployed twice at the same address.\\n     */\\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\\n            instance := create2(0, ptr, 0x37, salt)\\n        }\\n        require(instance != address(0), \\\"ERC1167: create2 failed\\\");\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n     */\\n    function predictDeterministicAddress(\\n        address implementation,\\n        bytes32 salt,\\n        address deployer\\n    ) internal pure returns (address predicted) {\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf3ff00000000000000000000000000000000)\\n            mstore(add(ptr, 0x38), shl(0x60, deployer))\\n            mstore(add(ptr, 0x4c), salt)\\n            mstore(add(ptr, 0x6c), keccak256(ptr, 0x37))\\n            predicted := keccak256(add(ptr, 0x37), 0x55)\\n        }\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n     */\\n    function predictDeterministicAddress(address implementation, bytes32 salt)\\n        internal\\n        view\\n        returns (address predicted)\\n    {\\n        return predictDeterministicAddress(implementation, salt, address(this));\\n    }\\n}\\n\",\"keccak256\":\"0x4f1f6854ddda976a0ab4a25805cb9a4b4537ebe962b0aa7e91f1f522c3d536b8\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"vendor/openzeppelin/contracts/security/Pausable.sol":{"Pausable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.","events":{"Paused(address)":{"details":"Emitted when the pause is triggered by `account`."},"Unpaused(address)":{"details":"Emitted when the pause is lifted by `account`."}},"kind":"dev","methods":{"constructor":{"details":"Initializes the contract in unpaused state."},"paused()":{"details":"Returns true if the contract is paused, and false otherwise."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"vendor/openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"vendor/openzeppelin/contracts/security/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.3.2 (security/Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    constructor() {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0x934721ac65895375c9eaa3dc34235b7e897edc8a9d9b5a8a057e5afb9025a68d\",\"license\":\"MIT\"},\"vendor/openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.3.2 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x00f8a1bd52713525eb90f70b64f028de5c075fb6298cc9de2e8f0c022e1595ff\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":3224,"contract":"vendor/openzeppelin/contracts/security/Pausable.sol:Pausable","label":"_paused","offset":0,"slot":"0","type":"t_bool"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"vendor/openzeppelin/contracts/security/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[],"devdoc":{"details":"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"vendor/openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"vendor/openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.3.2 (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x87403fac3154fd83198a6e3f68efff24edd43d28c5bbdb40af21f07a9692e169\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":3309,"contract":"vendor/openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard","label":"_status","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"vendor/openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"vendor/openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"vendor/openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.3.2 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x00f8a1bd52713525eb90f70b64f028de5c075fb6298cc9de2e8f0c022e1595ff\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"vendor/openzeppelin/contracts/utils/Counters.sol":{"Counters":{"abi":[],"devdoc":{"author":"Matt Condon (@shrugs)","details":"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`","kind":"dev","methods":{},"title":"Counters","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204d9de5d0efa2d916009a958881dc84a89f3c1938c77b1de41b917609b90a306764736f6c63430008060033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D SWAP14 0xE5 0xD0 0xEF LOG2 0xD9 AND STOP SWAP11 SWAP6 DUP9 DUP2 0xDC DUP5 0xA8 SWAP16 EXTCODECOPY NOT CODESIZE 0xC7 PUSH28 0x1DE41B917609B90A306764736F6C6343000806003300000000000000 ","sourceMap":"424:971:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204d9de5d0efa2d916009a958881dc84a89f3c1938c77b1de41b917609b90a306764736f6c63430008060033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D SWAP14 0xE5 0xD0 0xEF LOG2 0xD9 AND STOP SWAP11 SWAP6 DUP9 DUP2 0xDC DUP5 0xA8 SWAP16 EXTCODECOPY NOT CODESIZE 0xC7 PUSH28 0x1DE41B917609B90A306764736F6C6343000806003300000000000000 ","sourceMap":"424:971:17:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"current(struct Counters.Counter storage pointer)":"infinite","decrement(struct Counters.Counter storage pointer)":"infinite","increment(struct Counters.Counter storage pointer)":"infinite","reset(struct Counters.Counter storage pointer)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"vendor/openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"vendor/openzeppelin/contracts/utils/Counters.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.3.2 (utils/Counters.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title Counters\\n * @author Matt Condon (@shrugs)\\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\\n *\\n * Include with `using Counters for Counters.Counter;`\\n */\\nlibrary Counters {\\n    struct Counter {\\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\\n        uint256 _value; // default: 0\\n    }\\n\\n    function current(Counter storage counter) internal view returns (uint256) {\\n        return counter._value;\\n    }\\n\\n    function increment(Counter storage counter) internal {\\n        unchecked {\\n            counter._value += 1;\\n        }\\n    }\\n\\n    function decrement(Counter storage counter) internal {\\n        uint256 value = counter._value;\\n        require(value > 0, \\\"Counter: decrement overflow\\\");\\n        unchecked {\\n            counter._value = value - 1;\\n        }\\n    }\\n\\n    function reset(Counter storage counter) internal {\\n        counter._value = 0;\\n    }\\n}\\n\",\"keccak256\":\"0x5e2cfccb06a792ec63454e8cf6d9bc91915fbd9d7f70a3ee9d0e82e115bf8fc9\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"vendor/openzeppelin/contracts/utils/structs/EnumerableMap.sol":{"EnumerableMap":{"abi":[],"devdoc":{"details":"Library for managing an enumerable variant of Solidity's https://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`] type. Maps have the following properties: - Entries are added, removed, and checked for existence in constant time (O(1)). - Entries are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableMap for EnumerableMap.UintToAddressMap;     // Declare a set state variable     EnumerableMap.UintToAddressMap private myMap; } ``` As of v3.0.0, only maps of type `uint256 -> address` (`UintToAddressMap`) are supported.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122080ef8d9cf1f5a2353ae8ff070a1de5cd5c660820ce4f826b64c7e94cfe033d4c64736f6c63430008060033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 0xEF DUP14 SWAP13 CALL CREATE2 LOG2 CALLDATALOAD GASPRICE 0xE8 SELFDESTRUCT SMOD EXP SAR 0xE5 0xCD 0x5C PUSH7 0x820CE4F826B64 0xC7 0xE9 0x4C INVALID SUB RETURNDATASIZE 0x4C PUSH5 0x736F6C6343 STOP ADDMOD MOD STOP CALLER ","sourceMap":"862:6777:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122080ef8d9cf1f5a2353ae8ff070a1de5cd5c660820ce4f826b64c7e94cfe033d4c64736f6c63430008060033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 0xEF DUP14 SWAP13 CALL CREATE2 LOG2 CALLDATALOAD GASPRICE 0xE8 SELFDESTRUCT SMOD EXP SAR 0xE5 0xCD 0x5C PUSH7 0x820CE4F826B64 0xC7 0xE9 0x4C INVALID SUB RETURNDATASIZE 0x4C PUSH5 0x736F6C6343 STOP ADDMOD MOD STOP CALLER ","sourceMap":"862:6777:18:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_at(struct EnumerableMap.Map storage pointer,uint256)":"infinite","_contains(struct EnumerableMap.Map storage pointer,bytes32)":"infinite","_get(struct EnumerableMap.Map storage pointer,bytes32)":"infinite","_get(struct EnumerableMap.Map storage pointer,bytes32,string memory)":"infinite","_length(struct EnumerableMap.Map storage pointer)":"infinite","_remove(struct EnumerableMap.Map storage pointer,bytes32)":"infinite","_set(struct EnumerableMap.Map storage pointer,bytes32,bytes32)":"infinite","_tryGet(struct EnumerableMap.Map storage pointer,bytes32)":"infinite","at(struct EnumerableMap.UintToAddressMap storage pointer,uint256)":"infinite","contains(struct EnumerableMap.UintToAddressMap storage pointer,uint256)":"infinite","get(struct EnumerableMap.UintToAddressMap storage pointer,uint256)":"infinite","get(struct EnumerableMap.UintToAddressMap storage pointer,uint256,string memory)":"infinite","length(struct EnumerableMap.UintToAddressMap storage pointer)":"infinite","remove(struct EnumerableMap.UintToAddressMap storage pointer,uint256)":"infinite","set(struct EnumerableMap.UintToAddressMap storage pointer,uint256,address)":"infinite","tryGet(struct EnumerableMap.UintToAddressMap storage pointer,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing an enumerable variant of Solidity's https://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`] type. Maps have the following properties: - Entries are added, removed, and checked for existence in constant time (O(1)). - Entries are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableMap for EnumerableMap.UintToAddressMap;     // Declare a set state variable     EnumerableMap.UintToAddressMap private myMap; } ``` As of v3.0.0, only maps of type `uint256 -> address` (`UintToAddressMap`) are supported.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"vendor/openzeppelin/contracts/utils/structs/EnumerableMap.sol\":\"EnumerableMap\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"vendor/openzeppelin/contracts/utils/structs/EnumerableMap.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.3.2 (utils/structs/EnumerableMap.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./EnumerableSet.sol\\\";\\n\\n/**\\n * @dev Library for managing an enumerable variant of Solidity's\\n * https://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`]\\n * type.\\n *\\n * Maps have the following properties:\\n *\\n * - Entries are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Entries are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableMap for EnumerableMap.UintToAddressMap;\\n *\\n *     // Declare a set state variable\\n *     EnumerableMap.UintToAddressMap private myMap;\\n * }\\n * ```\\n *\\n * As of v3.0.0, only maps of type `uint256 -> address` (`UintToAddressMap`) are\\n * supported.\\n */\\nlibrary EnumerableMap {\\n    using EnumerableSet for EnumerableSet.Bytes32Set;\\n\\n    // To implement this library for multiple types with as little code\\n    // repetition as possible, we write it in terms of a generic Map type with\\n    // bytes32 keys and values.\\n    // The Map implementation uses private functions, and user-facing\\n    // implementations (such as Uint256ToAddressMap) are just wrappers around\\n    // the underlying Map.\\n    // This means that we can only create new EnumerableMaps for types that fit\\n    // in bytes32.\\n\\n    struct Map {\\n        // Storage of keys\\n        EnumerableSet.Bytes32Set _keys;\\n        mapping(bytes32 => bytes32) _values;\\n    }\\n\\n    /**\\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\\n     * key. O(1).\\n     *\\n     * Returns true if the key was added to the map, that is if it was not\\n     * already present.\\n     */\\n    function _set(\\n        Map storage map,\\n        bytes32 key,\\n        bytes32 value\\n    ) private returns (bool) {\\n        map._values[key] = value;\\n        return map._keys.add(key);\\n    }\\n\\n    /**\\n     * @dev Removes a key-value pair from a map. O(1).\\n     *\\n     * Returns true if the key was removed from the map, that is if it was present.\\n     */\\n    function _remove(Map storage map, bytes32 key) private returns (bool) {\\n        delete map._values[key];\\n        return map._keys.remove(key);\\n    }\\n\\n    /**\\n     * @dev Returns true if the key is in the map. O(1).\\n     */\\n    function _contains(Map storage map, bytes32 key) private view returns (bool) {\\n        return map._keys.contains(key);\\n    }\\n\\n    /**\\n     * @dev Returns the number of key-value pairs in the map. O(1).\\n     */\\n    function _length(Map storage map) private view returns (uint256) {\\n        return map._keys.length();\\n    }\\n\\n    /**\\n     * @dev Returns the key-value pair stored at position `index` in the map. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of entries inside the\\n     * array, and it may change when more entries are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function _at(Map storage map, uint256 index) private view returns (bytes32, bytes32) {\\n        bytes32 key = map._keys.at(index);\\n        return (key, map._values[key]);\\n    }\\n\\n    /**\\n     * @dev Tries to returns the value associated with `key`.  O(1).\\n     * Does not revert if `key` is not in the map.\\n     */\\n    function _tryGet(Map storage map, bytes32 key) private view returns (bool, bytes32) {\\n        bytes32 value = map._values[key];\\n        if (value == bytes32(0)) {\\n            return (_contains(map, key), bytes32(0));\\n        } else {\\n            return (true, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the value associated with `key`.  O(1).\\n     *\\n     * Requirements:\\n     *\\n     * - `key` must be in the map.\\n     */\\n    function _get(Map storage map, bytes32 key) private view returns (bytes32) {\\n        bytes32 value = map._values[key];\\n        require(value != 0 || _contains(map, key), \\\"EnumerableMap: nonexistent key\\\");\\n        return value;\\n    }\\n\\n    /**\\n     * @dev Same as {_get}, with a custom error message when `key` is not in the map.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {_tryGet}.\\n     */\\n    function _get(\\n        Map storage map,\\n        bytes32 key,\\n        string memory errorMessage\\n    ) private view returns (bytes32) {\\n        bytes32 value = map._values[key];\\n        require(value != 0 || _contains(map, key), errorMessage);\\n        return value;\\n    }\\n\\n    // UintToAddressMap\\n\\n    struct UintToAddressMap {\\n        Map _inner;\\n    }\\n\\n    /**\\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\\n     * key. O(1).\\n     *\\n     * Returns true if the key was added to the map, that is if it was not\\n     * already present.\\n     */\\n    function set(\\n        UintToAddressMap storage map,\\n        uint256 key,\\n        address value\\n    ) internal returns (bool) {\\n        return _set(map._inner, bytes32(key), bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the key was removed from the map, that is if it was present.\\n     */\\n    function remove(UintToAddressMap storage map, uint256 key) internal returns (bool) {\\n        return _remove(map._inner, bytes32(key));\\n    }\\n\\n    /**\\n     * @dev Returns true if the key is in the map. O(1).\\n     */\\n    function contains(UintToAddressMap storage map, uint256 key) internal view returns (bool) {\\n        return _contains(map._inner, bytes32(key));\\n    }\\n\\n    /**\\n     * @dev Returns the number of elements in the map. O(1).\\n     */\\n    function length(UintToAddressMap storage map) internal view returns (uint256) {\\n        return _length(map._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the element stored at position `index` in the set. O(1).\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(UintToAddressMap storage map, uint256 index) internal view returns (uint256, address) {\\n        (bytes32 key, bytes32 value) = _at(map._inner, index);\\n        return (uint256(key), address(uint160(uint256(value))));\\n    }\\n\\n    /**\\n     * @dev Tries to returns the value associated with `key`.  O(1).\\n     * Does not revert if `key` is not in the map.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryGet(UintToAddressMap storage map, uint256 key) internal view returns (bool, address) {\\n        (bool success, bytes32 value) = _tryGet(map._inner, bytes32(key));\\n        return (success, address(uint160(uint256(value))));\\n    }\\n\\n    /**\\n     * @dev Returns the value associated with `key`.  O(1).\\n     *\\n     * Requirements:\\n     *\\n     * - `key` must be in the map.\\n     */\\n    function get(UintToAddressMap storage map, uint256 key) internal view returns (address) {\\n        return address(uint160(uint256(_get(map._inner, bytes32(key)))));\\n    }\\n\\n    /**\\n     * @dev Same as {get}, with a custom error message when `key` is not in the map.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryGet}.\\n     */\\n    function get(\\n        UintToAddressMap storage map,\\n        uint256 key,\\n        string memory errorMessage\\n    ) internal view returns (address) {\\n        return address(uint160(uint256(_get(map._inner, bytes32(key), errorMessage))));\\n    }\\n}\\n\",\"keccak256\":\"0xf7da3eab5c82339c3cf1bb83e84371efd7dce79c0d61c805e7a54abc7303fd5d\",\"license\":\"MIT\"},\"vendor/openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.3.2 (utils/structs/EnumerableSet.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\n *\\n *     // Declare a set state variable\\n *     EnumerableSet.AddressSet private mySet;\\n * }\\n * ```\\n *\\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\n * and `uint256` (`UintSet`) are supported.\\n */\\nlibrary EnumerableSet {\\n    // To implement this library for multiple types with as little code\\n    // repetition as possible, we write it in terms of a generic Set type with\\n    // bytes32 values.\\n    // The Set implementation uses private functions, and user-facing\\n    // implementations (such as AddressSet) are just wrappers around the\\n    // underlying Set.\\n    // This means that we can only create new EnumerableSets for types that fit\\n    // in bytes32.\\n\\n    struct Set {\\n        // Storage of set values\\n        bytes32[] _values;\\n        // Position of the value in the `values` array, plus 1 because index 0\\n        // means a value is not in the set.\\n        mapping(bytes32 => uint256) _indexes;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function _add(Set storage set, bytes32 value) private returns (bool) {\\n        if (!_contains(set, value)) {\\n            set._values.push(value);\\n            // The value is stored at length-1, but we add 1 to all indexes\\n            // and use 0 as a sentinel value\\n            set._indexes[value] = set._values.length;\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\\n        // We read and store the value's index to prevent multiple reads from the same storage slot\\n        uint256 valueIndex = set._indexes[value];\\n\\n        if (valueIndex != 0) {\\n            // Equivalent to contains(set, value)\\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\\n            // This modifies the order of the array, as noted in {at}.\\n\\n            uint256 toDeleteIndex = valueIndex - 1;\\n            uint256 lastIndex = set._values.length - 1;\\n\\n            if (lastIndex != toDeleteIndex) {\\n                bytes32 lastvalue = set._values[lastIndex];\\n\\n                // Move the last value to the index where the value to delete is\\n                set._values[toDeleteIndex] = lastvalue;\\n                // Update the index for the moved value\\n                set._indexes[lastvalue] = valueIndex; // Replace lastvalue's index to valueIndex\\n            }\\n\\n            // Delete the slot where the moved value was stored\\n            set._values.pop();\\n\\n            // Delete the index for the deleted slot\\n            delete set._indexes[value];\\n\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\\n        return set._indexes[value] != 0;\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function _length(Set storage set) private view returns (uint256) {\\n        return set._values.length;\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\\n        return set._values[index];\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function _values(Set storage set) private view returns (bytes32[] memory) {\\n        return set._values;\\n    }\\n\\n    // Bytes32Set\\n\\n    struct Bytes32Set {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _add(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _remove(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\n        return _contains(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\n        return _at(set._inner, index);\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\\n        return _values(set._inner);\\n    }\\n\\n    // AddressSet\\n\\n    struct AddressSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\n        return _add(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(AddressSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\\n        return address(uint160(uint256(_at(set._inner, index))));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(AddressSet storage set) internal view returns (address[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        address[] memory result;\\n\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // UintSet\\n\\n    struct UintSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _add(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function length(UintSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\n        return uint256(_at(set._inner, index));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        uint256[] memory result;\\n\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x460e5294c67dcceb3bdc3d7c683bbd8676a992e5520f281db01bcc44f6dde3ef\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"vendor/openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"EnumerableSet":{"abi":[],"devdoc":{"details":"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201241a9e9c404d352f60d2ad37c17d45936b03a0c39990bb690b68cc8fe06c98664736f6c63430008060033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT COINBASE 0xA9 0xE9 0xC4 DIV 0xD3 MSTORE 0xF6 0xD 0x2A 0xD3 PUSH29 0x17D45936B03A0C39990BB690B68CC8FE06C98664736F6C634300080600 CALLER ","sourceMap":"812:11368:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201241a9e9c404d352f60d2ad37c17d45936b03a0c39990bb690b68cc8fe06c98664736f6c63430008060033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT COINBASE 0xA9 0xE9 0xC4 DIV 0xD3 MSTORE 0xF6 0xD 0x2A 0xD3 PUSH29 0x17D45936B03A0C39990BB690B68CC8FE06C98664736F6C634300080600 CALLER ","sourceMap":"812:11368:19:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_add(struct EnumerableSet.Set storage pointer,bytes32)":"infinite","_at(struct EnumerableSet.Set storage pointer,uint256)":"infinite","_contains(struct EnumerableSet.Set storage pointer,bytes32)":"infinite","_length(struct EnumerableSet.Set storage pointer)":"infinite","_remove(struct EnumerableSet.Set storage pointer,bytes32)":"infinite","_values(struct EnumerableSet.Set storage pointer)":"infinite","add(struct EnumerableSet.AddressSet storage pointer,address)":"infinite","add(struct EnumerableSet.Bytes32Set storage pointer,bytes32)":"infinite","add(struct EnumerableSet.UintSet storage pointer,uint256)":"infinite","at(struct EnumerableSet.AddressSet storage pointer,uint256)":"infinite","at(struct EnumerableSet.Bytes32Set storage pointer,uint256)":"infinite","at(struct EnumerableSet.UintSet storage pointer,uint256)":"infinite","contains(struct EnumerableSet.AddressSet storage pointer,address)":"infinite","contains(struct EnumerableSet.Bytes32Set storage pointer,bytes32)":"infinite","contains(struct EnumerableSet.UintSet storage pointer,uint256)":"infinite","length(struct EnumerableSet.AddressSet storage pointer)":"infinite","length(struct EnumerableSet.Bytes32Set storage pointer)":"infinite","length(struct EnumerableSet.UintSet storage pointer)":"infinite","remove(struct EnumerableSet.AddressSet storage pointer,address)":"infinite","remove(struct EnumerableSet.Bytes32Set storage pointer,bytes32)":"infinite","remove(struct EnumerableSet.UintSet storage pointer,uint256)":"infinite","values(struct EnumerableSet.AddressSet storage pointer)":"infinite","values(struct EnumerableSet.Bytes32Set storage pointer)":"infinite","values(struct EnumerableSet.UintSet storage pointer)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"vendor/openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"vendor/openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.3.2 (utils/structs/EnumerableSet.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\n *\\n *     // Declare a set state variable\\n *     EnumerableSet.AddressSet private mySet;\\n * }\\n * ```\\n *\\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\n * and `uint256` (`UintSet`) are supported.\\n */\\nlibrary EnumerableSet {\\n    // To implement this library for multiple types with as little code\\n    // repetition as possible, we write it in terms of a generic Set type with\\n    // bytes32 values.\\n    // The Set implementation uses private functions, and user-facing\\n    // implementations (such as AddressSet) are just wrappers around the\\n    // underlying Set.\\n    // This means that we can only create new EnumerableSets for types that fit\\n    // in bytes32.\\n\\n    struct Set {\\n        // Storage of set values\\n        bytes32[] _values;\\n        // Position of the value in the `values` array, plus 1 because index 0\\n        // means a value is not in the set.\\n        mapping(bytes32 => uint256) _indexes;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function _add(Set storage set, bytes32 value) private returns (bool) {\\n        if (!_contains(set, value)) {\\n            set._values.push(value);\\n            // The value is stored at length-1, but we add 1 to all indexes\\n            // and use 0 as a sentinel value\\n            set._indexes[value] = set._values.length;\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\\n        // We read and store the value's index to prevent multiple reads from the same storage slot\\n        uint256 valueIndex = set._indexes[value];\\n\\n        if (valueIndex != 0) {\\n            // Equivalent to contains(set, value)\\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\\n            // This modifies the order of the array, as noted in {at}.\\n\\n            uint256 toDeleteIndex = valueIndex - 1;\\n            uint256 lastIndex = set._values.length - 1;\\n\\n            if (lastIndex != toDeleteIndex) {\\n                bytes32 lastvalue = set._values[lastIndex];\\n\\n                // Move the last value to the index where the value to delete is\\n                set._values[toDeleteIndex] = lastvalue;\\n                // Update the index for the moved value\\n                set._indexes[lastvalue] = valueIndex; // Replace lastvalue's index to valueIndex\\n            }\\n\\n            // Delete the slot where the moved value was stored\\n            set._values.pop();\\n\\n            // Delete the index for the deleted slot\\n            delete set._indexes[value];\\n\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\\n        return set._indexes[value] != 0;\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function _length(Set storage set) private view returns (uint256) {\\n        return set._values.length;\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\\n        return set._values[index];\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function _values(Set storage set) private view returns (bytes32[] memory) {\\n        return set._values;\\n    }\\n\\n    // Bytes32Set\\n\\n    struct Bytes32Set {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _add(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _remove(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\n        return _contains(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\n        return _at(set._inner, index);\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\\n        return _values(set._inner);\\n    }\\n\\n    // AddressSet\\n\\n    struct AddressSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\n        return _add(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(AddressSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\\n        return address(uint160(uint256(_at(set._inner, index))));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(AddressSet storage set) internal view returns (address[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        address[] memory result;\\n\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // UintSet\\n\\n    struct UintSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _add(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function length(UintSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\n        return uint256(_at(set._inner, index));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        uint256[] memory result;\\n\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x460e5294c67dcceb3bdc3d7c683bbd8676a992e5520f281db01bcc44f6dde3ef\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}